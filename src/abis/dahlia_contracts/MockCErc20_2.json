{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_mintRate",
          "type": "uint256"
        }
      ],
      "name": "setMintRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "14": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "15": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "16": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "29": "contracts/mock/MockCErc20_2.sol",
    "56": "interfaces/ICErc20_2.sol",
    "6": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/mock/MockCErc20_2.sol",
    "exportedSymbols": {
      "MockCErc20_2": [
        4136
      ]
    },
    "id": 4137,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3971,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "id": 3972,
        "nodeType": "ImportDirective",
        "scope": 4137,
        "sourceUnit": 14932,
        "src": "113:87:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 3973,
        "nodeType": "ImportDirective",
        "scope": 4137,
        "sourceUnit": 14519,
        "src": "201:79:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ICErc20_2.sol",
        "file": "../../interfaces/ICErc20_2.sol",
        "id": 3974,
        "nodeType": "ImportDirective",
        "scope": 4137,
        "sourceUnit": 16397,
        "src": "282:40:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3975,
              "name": "ICErc20_2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16396,
              "src": "349:9:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICErc20_2_$16396",
                "typeString": "contract ICErc20_2"
              }
            },
            "id": 3976,
            "nodeType": "InheritanceSpecifier",
            "src": "349:9:29"
          }
        ],
        "contractDependencies": [
          16396
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4136,
        "linearizedBaseContracts": [
          4136,
          16396
        ],
        "name": "MockCErc20_2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3979,
            "libraryName": {
              "contractScope": null,
              "id": 3977,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14518,
              "src": "369:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$14518",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "363:24:29",
            "typeName": {
              "id": 3978,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "382:4:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3982,
            "libraryName": {
              "contractScope": null,
              "id": 3980,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14931,
              "src": "396:9:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$14931",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "390:27:29",
            "typeName": {
              "contractScope": null,
              "id": 3981,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14718,
              "src": "410:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$14718",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 3984,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4136,
            "src": "421:19:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$14718",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3983,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14718,
              "src": "421:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$14718",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ca0dcf16",
            "id": 3987,
            "mutability": "mutable",
            "name": "mintRate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4136,
            "src": "444:27:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3985,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "444:4:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653138",
              "id": 3986,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "467:4:29",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 3990,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4136,
            "src": "475:27:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3988,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "475:4:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 3989,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "501:1:29",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16390
            ],
            "constant": false,
            "functionSelector": "70a08231",
            "id": 3995,
            "mutability": "mutable",
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 3994,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "538:8:29"
            },
            "scope": 4136,
            "src": "506:50:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3993,
              "keyType": {
                "id": 3991,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "514:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "506:24:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3992,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "525:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 3998,
            "mutability": "constant",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4136,
            "src": "561:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3996,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "561:4:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 3997,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "593:2:29",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4007,
              "nodeType": "Block",
              "src": "634:25:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4003,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3984,
                      "src": "640:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14718",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4004,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4000,
                      "src": "648:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14718",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "640:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14718",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4006,
                  "nodeType": "ExpressionStatement",
                  "src": "640:14:29"
                }
              ]
            },
            "documentation": null,
            "id": 4008,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4000,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4008,
                  "src": "612:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$14718",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3999,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14718,
                    "src": "612:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14718",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "611:15:29"
            },
            "returnParameters": {
              "id": 4002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "634:0:29"
            },
            "scope": 4136,
            "src": "600:59:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16395
            ],
            "body": {
              "id": 4018,
              "nodeType": "Block",
              "src": "718:31:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4014,
                      "name": "mintRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3987,
                      "src": "724:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4015,
                      "name": "_mintRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4010,
                      "src": "735:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "724:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4017,
                  "nodeType": "ExpressionStatement",
                  "src": "724:20:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dbe2193f",
            "id": 4019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMintRate",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4012,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "709:8:29"
            },
            "parameters": {
              "id": 4011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4010,
                  "mutability": "mutable",
                  "name": "_mintRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4019,
                  "src": "684:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4009,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:16:29"
            },
            "returnParameters": {
              "id": 4013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:29"
            },
            "scope": 4136,
            "src": "663:86:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16369
            ],
            "body": {
              "id": 4030,
              "nodeType": "Block",
              "src": "811:32:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4027,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3984,
                        "src": "832:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 4026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "824:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4025,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "824:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 4028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:14:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4024,
                  "id": 4029,
                  "nodeType": "Return",
                  "src": "817:21:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6f307dc3",
            "id": 4031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4021,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "784:8:29"
            },
            "parameters": {
              "id": 4020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:2:29"
            },
            "returnParameters": {
              "id": 4024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4023,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4031,
                  "src": "802:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:9:29"
            },
            "scope": 4136,
            "src": "753:90:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16376
            ],
            "body": {
              "id": 4084,
              "nodeType": "Block",
              "src": "911:262:29",
              "statements": [
                {
                  "assignments": [
                    4040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4040,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4084,
                      "src": "917:13:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4039,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "917:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4048,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31653138",
                        "id": 4046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "962:4:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4043,
                            "name": "mintRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3987,
                            "src": "948:8:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4041,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4033,
                            "src": "933:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14401,
                          "src": "933:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "933:24:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14423,
                      "src": "933:28:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:34:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:50:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4053,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1004:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1004:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4057,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1024:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCErc20_2_$4136",
                              "typeString": "contract MockCErc20_2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockCErc20_2_$4136",
                              "typeString": "contract MockCErc20_2"
                            }
                          ],
                          "id": 4056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1016:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4055,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1016:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1016:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4059,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4040,
                        "src": "1031:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4050,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3984,
                            "src": "980:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14718",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$14718",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 4049,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14718,
                          "src": "973:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$14718_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "973:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14777,
                      "src": "973:30:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14718_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14718_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:67:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4061,
                  "nodeType": "ExpressionStatement",
                  "src": "973:67:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4062,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3990,
                      "src": "1046:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4065,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4033,
                          "src": "1076:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4063,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3990,
                          "src": "1060:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14345,
                        "src": "1060:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1060:27:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1046:41:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4068,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:41:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4069,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "1093:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4072,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4070,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1103:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1103:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1093:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4078,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4033,
                          "src": "1143:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4073,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3995,
                            "src": "1117:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4076,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4074,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1127:3:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1127:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1117:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14345,
                        "src": "1117:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1117:37:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1093:61:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4081,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:61:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 4082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1167:1:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 4038,
                  "id": 4083,
                  "nodeType": "Return",
                  "src": "1160:8:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a0712d68",
            "id": 4085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4035,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "887:8:29"
            },
            "parameters": {
              "id": 4034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4033,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4085,
                  "src": "861:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4032,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "860:17:29"
            },
            "returnParameters": {
              "id": 4038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4037,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4085,
                  "src": "905:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4036,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "904:6:29"
            },
            "scope": 4136,
            "src": "847:326:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16383
            ],
            "body": {
              "id": 4134,
              "nodeType": "Block",
              "src": "1245:251:29",
              "statements": [
                {
                  "assignments": [
                    4094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4094,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4134,
                      "src": "1251:14:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4093,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1251:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4102,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4100,
                        "name": "mintRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3987,
                        "src": "1295:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653138",
                            "id": 4097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1285:4:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4095,
                            "name": "redeemAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4087,
                            "src": "1268:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14401,
                          "src": "1268:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1268:22:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14423,
                      "src": "1268:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:36:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1251:53:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1337:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1337:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4109,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4094,
                        "src": "1349:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4104,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3984,
                            "src": "1317:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$14718",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$14718",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 4103,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14718,
                          "src": "1310:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$14718_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1310:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14752,
                      "src": "1310:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14718_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14718_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:49:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4111,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:49:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4112,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3990,
                      "src": "1365:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4115,
                          "name": "redeemAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4087,
                          "src": "1395:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4113,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3990,
                          "src": "1379:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14367,
                        "src": "1379:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1379:29:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1365:43:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4118,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:43:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4119,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "1414:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4122,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1424:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1424:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1414:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4128,
                          "name": "redeemAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4087,
                          "src": "1464:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4123,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3995,
                            "src": "1438:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4126,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4124,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1448:3:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1448:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1438:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14367,
                        "src": "1438:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1438:39:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1414:63:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4131,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:63:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 4132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1490:1:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 4092,
                  "id": 4133,
                  "nodeType": "Return",
                  "src": "1483:8:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "db006a75",
            "id": 4135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1221:8:29"
            },
            "parameters": {
              "id": 4088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4087,
                  "mutability": "mutable",
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4135,
                  "src": "1193:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4086,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1192:19:29"
            },
            "returnParameters": {
              "id": 4092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4091,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4135,
                  "src": "1239:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1238:6:29"
            },
            "scope": 4136,
            "src": "1177:319:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4137,
        "src": "324:1174:29"
      }
    ],
    "src": "0:1499:29"
  },
  "bytecode": "6080604052670de0b6b3a7640000600155600060025534801561002157600080fd5b506040516108c83803806108c88339818101604052602081101561004457600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610852806100766000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a0712d6811610066578063a0712d6814610104578063ca0dcf1614610121578063db006a7514610129578063dbe2193f14610146578063fc0c546a1461016557610093565b806318160ddd14610098578063313ce567146100b25780636f307dc3146100ba57806370a08231146100de575b600080fd5b6100a061016d565b60408051918252519081900360200190f35b6100a0610173565b6100c2610178565b604080516001600160a01b039092168252519081900360200190f35b6100a0600480360360208110156100f457600080fd5b50356001600160a01b0316610187565b6100a06004803603602081101561011a57600080fd5b5035610199565b6100a0610222565b6100a06004803603602081101561013f57600080fd5b5035610228565b6101636004803603602081101561015c57600080fd5b5035610290565b005b6100c2610295565b60025481565b601281565b6000546001600160a01b031690565b60036020526000908152604090205481565b6000806101c3670de0b6b3a76400006101bd600154866102a490919063ffffffff16565b90610306565b6000549091506101de906001600160a01b031633308461036d565b6002546101eb90846103cd565b6002553360009081526003602052604090205461020890846103cd565b336000908152600360205260408120919091559392505050565b60015481565b60008061024c6001546101bd670de0b6b3a7640000866102a490919063ffffffff16565b600054909150610266906001600160a01b03163383610427565b600254610273908461047e565b60025533600090815260036020526040902054610208908461047e565b600155565b6000546001600160a01b031681565b6000826102b357506000610300565b828202828482816102c057fe5b04146102fd5760405162461bcd60e51b81526004018080602001828103825260218152602001806107d26021913960400191505060405180910390fd5b90505b92915050565b600080821161035c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161036557fe5b049392505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103c79085906104db565b50505050565b6000828201838110156102fd576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104799084906104db565b505050565b6000828211156104d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6060610530826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661058c9092919063ffffffff16565b8051909150156104795780806020019051602081101561054f57600080fd5b50516104795760405162461bcd60e51b815260040180806020018281038252602a8152602001806107f3602a913960400191505060405180910390fd5b606061059b84846000856105a5565b90505b9392505050565b6060824710156105e65760405162461bcd60e51b81526004018080602001828103825260268152602001806107ac6026913960400191505060405180910390fd5b6105ef85610701565b610640576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061067f5780518252601f199092019160209182019101610660565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146106e1576040519150601f19603f3d011682016040523d82523d6000602084013e6106e6565b606091505b50915091506106f6828286610707565b979650505050505050565b3b151590565b6060831561071657508161059e565b8251156107265782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610770578181015183820152602001610758565b50505050905090810190601f16801561079d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212203a290058ea219dbf5e73084ed7925a451e7bd8c761e57123583adb7fdf393a4364736f6c634300060c0033",
  "bytecodeSha1": "ce038b18c6f63e8eeccdbf7134342fced1125831",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MockCErc20_2",
  "coverageMap": {
    "branches": {
      "14": {},
      "15": {
        "SafeERC20._callOptionalReturn": {
          "30": [
            3495,
            3516,
            false
          ],
          "31": [
            3624,
            3654,
            true
          ]
        }
      },
      "16": {
        "Address._verifyCallResult": {
          "28": [
            7234,
            7241,
            false
          ],
          "29": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "26": [
            4767,
            4797,
            true
          ],
          "27": [
            4858,
            4876,
            true
          ]
        }
      },
      "29": {},
      "56": {},
      "6": {
        "SafeMath.add": {
          "35": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "34": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "32": [
            3619,
            3625,
            false
          ],
          "33": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "36": [
            3221,
            3227,
            true
          ]
        }
      }
    },
    "statements": {
      "14": {},
      "15": {
        "SafeERC20._callOptionalReturn": {
          "18": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeTransfer": {
          "15": [
            786,
            872
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "13": [
            985,
            1081
          ]
        }
      },
      "16": {
        "Address._verifyCallResult": {
          "24": [
            7257,
            7274
          ],
          "25": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "19": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "20": [
            4759,
            4840
          ],
          "21": [
            4850,
            4910
          ],
          "22": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "23": [
            1117,
            1132
          ]
        }
      },
      "29": {
        "MockCErc20_2.mint": {
          "1": [
            973,
            1040
          ],
          "2": [
            1046,
            1087
          ],
          "3": [
            1093,
            1154
          ]
        },
        "MockCErc20_2.redeem": {
          "4": [
            1310,
            1359
          ],
          "5": [
            1365,
            1408
          ],
          "6": [
            1414,
            1477
          ]
        },
        "MockCErc20_2.setMintRate": {
          "7": [
            724,
            744
          ]
        },
        "MockCErc20_2.underlying": {
          "0": [
            817,
            838
          ]
        }
      },
      "56": {},
      "6": {
        "SafeMath.add": {
          "14": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "11": [
            4294,
            4338
          ],
          "12": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "8": [
            3627,
            3635
          ],
          "9": [
            3672,
            3728
          ],
          "10": [
            3738,
            3746
          ]
        },
        "SafeMath.sub": {
          "16": [
            3213,
            3262
          ],
          "17": [
            3272,
            3284
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "ICErc20_2",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063a0712d6811610066578063a0712d6814610104578063ca0dcf1614610121578063db006a7514610129578063dbe2193f14610146578063fc0c546a1461016557610093565b806318160ddd14610098578063313ce567146100b25780636f307dc3146100ba57806370a08231146100de575b600080fd5b6100a061016d565b60408051918252519081900360200190f35b6100a0610173565b6100c2610178565b604080516001600160a01b039092168252519081900360200190f35b6100a0600480360360208110156100f457600080fd5b50356001600160a01b0316610187565b6100a06004803603602081101561011a57600080fd5b5035610199565b6100a0610222565b6100a06004803603602081101561013f57600080fd5b5035610228565b6101636004803603602081101561015c57600080fd5b5035610290565b005b6100c2610295565b60025481565b601281565b6000546001600160a01b031690565b60036020526000908152604090205481565b6000806101c3670de0b6b3a76400006101bd600154866102a490919063ffffffff16565b90610306565b6000549091506101de906001600160a01b031633308461036d565b6002546101eb90846103cd565b6002553360009081526003602052604090205461020890846103cd565b336000908152600360205260408120919091559392505050565b60015481565b60008061024c6001546101bd670de0b6b3a7640000866102a490919063ffffffff16565b600054909150610266906001600160a01b03163383610427565b600254610273908461047e565b60025533600090815260036020526040902054610208908461047e565b600155565b6000546001600160a01b031681565b6000826102b357506000610300565b828202828482816102c057fe5b04146102fd5760405162461bcd60e51b81526004018080602001828103825260218152602001806107d26021913960400191505060405180910390fd5b90505b92915050565b600080821161035c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161036557fe5b049392505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103c79085906104db565b50505050565b6000828201838110156102fd576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104799084906104db565b505050565b6000828211156104d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6060610530826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661058c9092919063ffffffff16565b8051909150156104795780806020019051602081101561054f57600080fd5b50516104795760405162461bcd60e51b815260040180806020018281038252602a8152602001806107f3602a913960400191505060405180910390fd5b606061059b84846000856105a5565b90505b9392505050565b6060824710156105e65760405162461bcd60e51b81526004018080602001828103825260268152602001806107ac6026913960400191505060405180910390fd5b6105ef85610701565b610640576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061067f5780518252601f199092019160209182019101610660565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146106e1576040519150601f19603f3d011682016040523d82523d6000602084013e6106e6565b606091505b50915091506106f6828286610707565b979650505050505050565b3b151590565b6060831561071657508161059e565b8251156107265782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610770578181015183820152602001610758565b50505050905090810190601f16801561079d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212203a290058ea219dbf5e73084ed7925a451e7bd8c761e57123583adb7fdf393a4364736f6c634300060c0033",
  "deployedSourceMap": "324:1174:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;475:27;;;:::i;:::-;;;;;;;;;;;;;;;;561:34;;;:::i;753:90::-;;;:::i;:::-;;;;-1:-1:-1;;;;;753:90:29;;;;;;;;;;;;;;506:50;;;;;;;;;;;;;;;;-1:-1:-1;506:50:29;-1:-1:-1;;;;;506:50:29;;:::i;847:326::-;;;;;;;;;;;;;;;;-1:-1:-1;847:326:29;;:::i;444:27::-;;;:::i;1177:319::-;;;;;;;;;;;;;;;;-1:-1:-1;1177:319:29;;:::i;663:86::-;;;;;;;;;;;;;;;;-1:-1:-1;663:86:29;;:::i;:::-;;421:19;;;:::i;475:27::-;;;;:::o;561:34::-;593:2;561:34;:::o;753:90::-;802:7;832:5;-1:-1:-1;;;;;832:5:29;753:90;:::o;506:50::-;;;;;;;;;;;;;:::o;847:326::-;905:4;917:13;933:34;962:4;933:24;948:8;;933:10;:14;;:24;;;;:::i;:::-;:28;;:34::i;:::-;980:5;;917:50;;-1:-1:-1;973:67:29;;-1:-1:-1;;;;;980:5:29;1004:10;1024:4;917:50;973:30;:67::i;:::-;1060:11;;:27;;1076:10;1060:15;:27::i;:::-;1046:11;:41;1127:10;1117:21;;;;:9;:21;;;;;;:37;;1143:10;1117:25;:37::i;:::-;1103:10;1093:21;;;;:9;:21;;;;;:61;;;;:21;847:326;-1:-1:-1;;;847:326:29:o;444:27::-;;;;:::o;1177:319::-;1239:4;1251:14;1268:36;1295:8;;1268:22;1285:4;1268:12;:16;;:22;;;;:::i;:36::-;1317:5;;1251:53;;-1:-1:-1;1310:49:29;;-1:-1:-1;;;;;1317:5:29;1337:10;1251:53;1310:26;:49::i;:::-;1379:11;;:29;;1395:12;1379:15;:29::i;:::-;1365:11;:43;1448:10;1438:21;;;;:9;:21;;;;;;:39;;1464:12;1438:25;:39::i;663:86::-;724:8;:20;663:86::o;421:19::-;;;-1:-1:-1;;;;;421:19:29;;:::o;3538:215:6:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:6;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;-1:-1:-1;3538:215:6;;;;;:::o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:6:o;885:203:15:-;1012:68;;;-1:-1:-1;;;;;1012:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:15;-1:-1:-1;;;1012:68:15;;;985:96;;1005:5;;985:19;:96::i;:::-;885:203;;;;:::o;2690:175:6:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;704:175:15;813:58;;;-1:-1:-1;;;;;813:58:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:15;-1:-1:-1;;;813:58:15;;;786:86;;806:5;;786:19;:86::i;:::-;704:175;;;:::o;3136:155:6:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:6;;;3136:155::o;2967:751:15:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:15;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:15;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:15;3616:85;;;;-1:-1:-1;;;3616:85:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:16;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:16;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:16:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:16;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    324,
    1498
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xCA0DCF16 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xDBE2193F EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x165 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x173 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x187 JUMP JUMPDEST PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x199 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x222 JUMP JUMPDEST PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x290 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1BD PUSH1 0x1 SLOAD DUP7 PUSH2 0x2A4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH2 0x1DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1EB SWAP1 DUP5 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x208 SWAP1 DUP5 PUSH2 0x3CD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24C PUSH1 0x1 SLOAD PUSH2 0x1BD PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x2A4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x427 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x273 SWAP1 DUP5 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x208 SWAP1 DUP5 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B3 JUMPI POP PUSH1 0x0 PUSH2 0x300 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2C0 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7D2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x35C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x365 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3C7 SWAP1 DUP6 SWAP1 PUSH2 0x4DB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x479 SWAP1 DUP5 SWAP1 PUSH2 0x4DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x530 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x58C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x479 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7F3 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x59B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x5A5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7AC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EF DUP6 PUSH2 0x701 JUMP JUMPDEST PUSH2 0x640 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x67F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x660 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6F6 DUP3 DUP3 DUP7 PUSH2 0x707 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x716 JUMPI POP DUP2 PUSH2 0x59E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x726 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x770 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x758 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x79D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212203A290058 0xEA 0x21 SWAP14 0xBF 0x5E PUSH20 0x84ED7925A451E7BD8C761E57123583ADB7FDF39 GASPRICE NUMBER PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        324,
        1498
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "6": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "7": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "8": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "12": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "REVERT",
      "path": "29"
    },
    "16": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "17": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "POP",
      "path": "29"
    },
    "18": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "21": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "LT",
      "path": "29"
    },
    "22": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "26": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "29": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "SHR",
      "path": "29"
    },
    "32": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "33": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA0712D68"
    },
    "38": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "GT",
      "path": "29"
    },
    "39": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "43": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "44": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA0712D68"
    },
    "49": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "50": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "54": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "55": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xCA0DCF16"
    },
    "60": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "61": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x121"
    },
    "64": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "65": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "66": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xDB006A75"
    },
    "71": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "72": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x129"
    },
    "75": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "76": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "77": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xDBE2193F"
    },
    "82": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "83": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x146"
    },
    "86": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "87": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "88": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "94": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x165"
    },
    "97": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "98": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x93"
    },
    "101": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMP",
      "path": "29"
    },
    "102": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "103": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "104": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x18160DDD"
    },
    "109": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "110": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "114": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "115": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x313CE567"
    },
    "120": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "121": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB2"
    },
    "124": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "125": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "126": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x6F307DC3"
    },
    "131": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "132": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xBA"
    },
    "135": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "136": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "137": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x70A08231"
    },
    "142": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "EQ",
      "path": "29"
    },
    "143": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDE"
    },
    "146": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "147": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "148": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "DUP1",
      "path": "29"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        324,
        1498
      ],
      "op": "REVERT",
      "path": "29"
    },
    "152": {
      "offset": [
        475,
        502
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "153": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA0"
    },
    "156": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x16D"
    },
    "159": {
      "fn": null,
      "jump": "i",
      "offset": [
        475,
        502
      ],
      "op": "JUMP",
      "path": "29"
    },
    "160": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "161": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "163": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "DUP1",
      "path": "29"
    },
    "164": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "165": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "166": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "DUP3",
      "path": "29"
    },
    "167": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "168": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "169": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "170": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "DUP2",
      "path": "29"
    },
    "171": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "172": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "SUB",
      "path": "29"
    },
    "173": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "175": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "ADD",
      "path": "29"
    },
    "176": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "177": {
      "fn": null,
      "offset": [
        475,
        502
      ],
      "op": "RETURN",
      "path": "29"
    },
    "178": {
      "offset": [
        561,
        595
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "179": {
      "fn": null,
      "offset": [
        561,
        595
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA0"
    },
    "182": {
      "fn": null,
      "offset": [
        561,
        595
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x173"
    },
    "185": {
      "fn": null,
      "jump": "i",
      "offset": [
        561,
        595
      ],
      "op": "JUMP",
      "path": "29"
    },
    "186": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "187": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC2"
    },
    "190": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x178"
    },
    "193": {
      "fn": "MockCErc20_2.underlying",
      "jump": "i",
      "offset": [
        753,
        843
      ],
      "op": "JUMP",
      "path": "29"
    },
    "194": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "195": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "197": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "DUP1",
      "path": "29"
    },
    "198": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "205": {
      "op": "SHL"
    },
    "206": {
      "op": "SUB"
    },
    "207": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "208": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "209": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "AND",
      "path": "29"
    },
    "210": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "DUP3",
      "path": "29"
    },
    "211": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "212": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "213": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "214": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "DUP2",
      "path": "29"
    },
    "215": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "216": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "SUB",
      "path": "29"
    },
    "217": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "219": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "ADD",
      "path": "29"
    },
    "220": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "221": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "RETURN",
      "path": "29"
    },
    "222": {
      "offset": [
        506,
        556
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "223": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA0"
    },
    "226": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "228": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "DUP1",
      "path": "29"
    },
    "229": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "230": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "SUB",
      "path": "29"
    },
    "231": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "233": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "DUP2",
      "path": "29"
    },
    "234": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "LT",
      "path": "29"
    },
    "235": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "236": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF4"
    },
    "239": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "240": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "242": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "DUP1",
      "path": "29"
    },
    "243": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "REVERT",
      "path": "29"
    },
    "244": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "245": {
      "op": "POP"
    },
    "246": {
      "offset": [
        506,
        556
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "253": {
      "op": "SHL"
    },
    "254": {
      "op": "SUB"
    },
    "255": {
      "offset": [
        506,
        556
      ],
      "op": "AND",
      "path": "29"
    },
    "256": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x187"
    },
    "259": {
      "fn": "MockCErc20_2.underlying",
      "jump": "i",
      "offset": [
        506,
        556
      ],
      "op": "JUMP",
      "path": "29"
    },
    "260": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "261": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA0"
    },
    "264": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "266": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "DUP1",
      "path": "29"
    },
    "267": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "268": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "SUB",
      "path": "29"
    },
    "269": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "271": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "DUP2",
      "path": "29"
    },
    "272": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "LT",
      "path": "29"
    },
    "273": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "274": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x11A"
    },
    "277": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "278": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "280": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "DUP1",
      "path": "29"
    },
    "281": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "REVERT",
      "path": "29"
    },
    "282": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "285": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x199"
    },
    "288": {
      "fn": "MockCErc20_2.mint",
      "jump": "i",
      "offset": [
        847,
        1173
      ],
      "op": "JUMP",
      "path": "29"
    },
    "289": {
      "offset": [
        444,
        471
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "290": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        444,
        471
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA0"
    },
    "293": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        444,
        471
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x222"
    },
    "296": {
      "fn": "MockCErc20_2.mint",
      "jump": "i",
      "offset": [
        444,
        471
      ],
      "op": "JUMP",
      "path": "29"
    },
    "297": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "298": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA0"
    },
    "301": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "303": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "DUP1",
      "path": "29"
    },
    "304": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "305": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "SUB",
      "path": "29"
    },
    "306": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "308": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "DUP2",
      "path": "29"
    },
    "309": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "LT",
      "path": "29"
    },
    "310": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "311": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x13F"
    },
    "314": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "315": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "317": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "DUP1",
      "path": "29"
    },
    "318": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "REVERT",
      "path": "29"
    },
    "319": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "322": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x228"
    },
    "325": {
      "fn": "MockCErc20_2.redeem",
      "jump": "i",
      "offset": [
        1177,
        1496
      ],
      "op": "JUMP",
      "path": "29"
    },
    "326": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "327": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x163"
    },
    "330": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "332": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "DUP1",
      "path": "29"
    },
    "333": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "334": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "SUB",
      "path": "29"
    },
    "335": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "337": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "DUP2",
      "path": "29"
    },
    "338": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "LT",
      "path": "29"
    },
    "339": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "340": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15C"
    },
    "343": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "344": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "346": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "DUP1",
      "path": "29"
    },
    "347": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "REVERT",
      "path": "29"
    },
    "348": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "349": {
      "op": "POP"
    },
    "350": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "351": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x290"
    },
    "354": {
      "fn": "MockCErc20_2.setMintRate",
      "jump": "i",
      "offset": [
        663,
        749
      ],
      "op": "JUMP",
      "path": "29"
    },
    "355": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "356": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "STOP",
      "path": "29"
    },
    "357": {
      "offset": [
        421,
        440
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "358": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        421,
        440
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC2"
    },
    "361": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        421,
        440
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x295"
    },
    "364": {
      "fn": "MockCErc20_2.setMintRate",
      "jump": "i",
      "offset": [
        421,
        440
      ],
      "op": "JUMP",
      "path": "29"
    },
    "365": {
      "offset": [
        475,
        502
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "366": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        475,
        502
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "368": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        475,
        502
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "369": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        475,
        502
      ],
      "op": "DUP2",
      "path": "29"
    },
    "370": {
      "fn": "MockCErc20_2.setMintRate",
      "jump": "o",
      "offset": [
        475,
        502
      ],
      "op": "JUMP",
      "path": "29"
    },
    "371": {
      "offset": [
        561,
        595
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "372": {
      "offset": [
        593,
        595
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x12"
    },
    "374": {
      "offset": [
        561,
        595
      ],
      "op": "DUP2",
      "path": "29"
    },
    "375": {
      "fn": "MockCErc20_2.setMintRate",
      "jump": "o",
      "offset": [
        561,
        595
      ],
      "op": "JUMP",
      "path": "29"
    },
    "376": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "377": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        802,
        809
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "379": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        832,
        837
      ],
      "op": "SLOAD",
      "path": "29",
      "statement": 0
    },
    "380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "386": {
      "op": "SHL"
    },
    "387": {
      "op": "SUB"
    },
    "388": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        832,
        837
      ],
      "op": "AND",
      "path": "29"
    },
    "389": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        753,
        843
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "390": {
      "fn": "MockCErc20_2.underlying",
      "jump": "o",
      "offset": [
        753,
        843
      ],
      "op": "JUMP",
      "path": "29"
    },
    "391": {
      "offset": [
        506,
        556
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "392": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "394": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "396": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "397": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "399": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "400": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "DUP2",
      "path": "29"
    },
    "401": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "402": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "404": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "405": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "406": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "407": {
      "fn": "MockCErc20_2.underlying",
      "offset": [
        506,
        556
      ],
      "op": "DUP2",
      "path": "29"
    },
    "408": {
      "fn": "MockCErc20_2.underlying",
      "jump": "o",
      "offset": [
        506,
        556
      ],
      "op": "JUMP",
      "path": "29"
    },
    "409": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "410": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        905,
        909
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "412": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        917,
        930
      ],
      "op": "DUP1",
      "path": "29"
    },
    "413": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        967
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C3"
    },
    "416": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        962,
        966
      ],
      "op": "PUSH8",
      "path": "29",
      "value": "0xDE0B6B3A7640000"
    },
    "425": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        957
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1BD"
    },
    "428": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        948,
        956
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "430": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        948,
        956
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "431": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        943
      ],
      "op": "DUP7",
      "path": "29"
    },
    "432": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        947
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2A4"
    },
    "435": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        947
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "436": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        957
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "437": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        957
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "438": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        957
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "443": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        957
      ],
      "op": "AND",
      "path": "29"
    },
    "444": {
      "fn": "MockCErc20_2.mint",
      "jump": "i",
      "offset": [
        933,
        957
      ],
      "op": "JUMP",
      "path": "29"
    },
    "445": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        957
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "446": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        961
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "447": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        961
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x306"
    },
    "450": {
      "fn": "MockCErc20_2.mint",
      "jump": "i",
      "offset": [
        933,
        967
      ],
      "op": "JUMP",
      "path": "29"
    },
    "451": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        933,
        967
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "452": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        980,
        985
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 1,
      "value": "0x0"
    },
    "454": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        980,
        985
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "455": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        917,
        967
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "456": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        917,
        967
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        973,
        1040
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1DE"
    },
    "461": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        973,
        1040
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        980,
        985
      ],
      "op": "AND",
      "path": "29"
    },
    "471": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1004,
        1014
      ],
      "op": "CALLER",
      "path": "29"
    },
    "472": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1024,
        1028
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "473": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        917,
        967
      ],
      "op": "DUP5",
      "path": "29"
    },
    "474": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        973,
        1003
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x36D"
    },
    "477": {
      "fn": "MockCErc20_2.mint",
      "jump": "i",
      "offset": [
        973,
        1040
      ],
      "op": "JUMP",
      "path": "29"
    },
    "478": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        973,
        1040
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "479": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1060,
        1071
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 2,
      "value": "0x2"
    },
    "481": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1060,
        1071
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "482": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1060,
        1087
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1EB"
    },
    "485": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1060,
        1087
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "486": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1076,
        1086
      ],
      "op": "DUP5",
      "path": "29"
    },
    "487": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1060,
        1075
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3CD"
    },
    "490": {
      "fn": "MockCErc20_2.mint",
      "jump": "i",
      "offset": [
        1060,
        1087
      ],
      "op": "JUMP",
      "path": "29"
    },
    "491": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1060,
        1087
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "492": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1046,
        1057
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "494": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1046,
        1087
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "495": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1127,
        1137
      ],
      "op": "CALLER",
      "path": "29",
      "statement": 3
    },
    "496": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "498": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "499": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "DUP2",
      "path": "29"
    },
    "500": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "501": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1126
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "503": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "505": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "506": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "508": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "509": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "510": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1138
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "511": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1154
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x208"
    },
    "514": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1154
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "515": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1143,
        1153
      ],
      "op": "DUP5",
      "path": "29"
    },
    "516": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3CD"
    },
    "519": {
      "fn": "MockCErc20_2.mint",
      "jump": "i",
      "offset": [
        1117,
        1154
      ],
      "op": "JUMP",
      "path": "29"
    },
    "520": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1117,
        1154
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "521": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1103,
        1113
      ],
      "op": "CALLER",
      "path": "29"
    },
    "522": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "524": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "525": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "DUP2",
      "path": "29"
    },
    "526": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "527": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1102
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "529": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "531": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "532": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "534": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "DUP2",
      "path": "29"
    },
    "535": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "536": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1154
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "537": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1154
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "538": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1154
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "539": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1154
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "540": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        1093,
        1114
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "541": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        847,
        1173
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "542": {
      "op": "POP"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "op": "POP"
    },
    "545": {
      "fn": "MockCErc20_2.mint",
      "jump": "o",
      "offset": [
        847,
        1173
      ],
      "op": "JUMP",
      "path": "29"
    },
    "546": {
      "offset": [
        444,
        471
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "547": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        444,
        471
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "549": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        444,
        471
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "550": {
      "fn": "MockCErc20_2.mint",
      "offset": [
        444,
        471
      ],
      "op": "DUP2",
      "path": "29"
    },
    "551": {
      "fn": "MockCErc20_2.mint",
      "jump": "o",
      "offset": [
        444,
        471
      ],
      "op": "JUMP",
      "path": "29"
    },
    "552": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1177,
        1496
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "553": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1239,
        1243
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "555": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1251,
        1265
      ],
      "op": "DUP1",
      "path": "29"
    },
    "556": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1304
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24C"
    },
    "559": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1295,
        1303
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "561": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1295,
        1303
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "562": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1290
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1BD"
    },
    "565": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1285,
        1289
      ],
      "op": "PUSH8",
      "path": "29",
      "value": "0xDE0B6B3A7640000"
    },
    "574": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1280
      ],
      "op": "DUP7",
      "path": "29"
    },
    "575": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2A4"
    },
    "578": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "579": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1290
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "580": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1290
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "581": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1290
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "586": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1290
      ],
      "op": "AND",
      "path": "29"
    },
    "587": {
      "fn": "MockCErc20_2.redeem",
      "jump": "i",
      "offset": [
        1268,
        1290
      ],
      "op": "JUMP",
      "path": "29"
    },
    "588": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1268,
        1304
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "589": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1317,
        1322
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 4,
      "value": "0x0"
    },
    "591": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1317,
        1322
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "592": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1251,
        1304
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "593": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1251,
        1304
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "594": {
      "op": "POP"
    },
    "595": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1310,
        1359
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x266"
    },
    "598": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1310,
        1359
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "op": "SUB"
    },
    "607": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1317,
        1322
      ],
      "op": "AND",
      "path": "29"
    },
    "608": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1337,
        1347
      ],
      "op": "CALLER",
      "path": "29"
    },
    "609": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1251,
        1304
      ],
      "op": "DUP4",
      "path": "29"
    },
    "610": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1310,
        1336
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x427"
    },
    "613": {
      "fn": "MockCErc20_2.redeem",
      "jump": "i",
      "offset": [
        1310,
        1359
      ],
      "op": "JUMP",
      "path": "29"
    },
    "614": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1310,
        1359
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "615": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1379,
        1390
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 5,
      "value": "0x2"
    },
    "617": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1379,
        1390
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "618": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1379,
        1408
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x273"
    },
    "621": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1379,
        1408
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "622": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1395,
        1407
      ],
      "op": "DUP5",
      "path": "29"
    },
    "623": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1379,
        1394
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x47E"
    },
    "626": {
      "fn": "MockCErc20_2.redeem",
      "jump": "i",
      "offset": [
        1379,
        1408
      ],
      "op": "JUMP",
      "path": "29"
    },
    "627": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1379,
        1408
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "628": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1365,
        1376
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "630": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1365,
        1408
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "631": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1448,
        1458
      ],
      "op": "CALLER",
      "path": "29",
      "statement": 6
    },
    "632": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "634": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "635": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "DUP2",
      "path": "29"
    },
    "636": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "637": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1447
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "639": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "641": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "642": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "644": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "645": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "646": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1459
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "647": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1477
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x208"
    },
    "650": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1477
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "651": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1464,
        1476
      ],
      "op": "DUP5",
      "path": "29"
    },
    "652": {
      "fn": "MockCErc20_2.redeem",
      "offset": [
        1438,
        1463
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x47E"
    },
    "655": {
      "fn": "MockCErc20_2.redeem",
      "jump": "i",
      "offset": [
        1438,
        1477
      ],
      "op": "JUMP",
      "path": "29"
    },
    "656": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        663,
        749
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "657": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        724,
        732
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 7,
      "value": "0x1"
    },
    "659": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        724,
        744
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "660": {
      "fn": "MockCErc20_2.setMintRate",
      "jump": "o",
      "offset": [
        663,
        749
      ],
      "op": "JUMP",
      "path": "29"
    },
    "661": {
      "offset": [
        421,
        440
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "662": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        421,
        440
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "664": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        421,
        440
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "671": {
      "op": "SHL"
    },
    "672": {
      "op": "SUB"
    },
    "673": {
      "offset": [
        421,
        440
      ],
      "op": "AND",
      "path": "29"
    },
    "674": {
      "fn": "MockCErc20_2.setMintRate",
      "offset": [
        421,
        440
      ],
      "op": "DUP2",
      "path": "29"
    },
    "675": {
      "fn": "MockCErc20_2.setMintRate",
      "jump": "o",
      "offset": [
        421,
        440
      ],
      "op": "JUMP",
      "path": "29"
    },
    "676": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "677": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "679": {
      "branch": 32,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "6"
    },
    "680": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B3"
    },
    "683": {
      "branch": 32,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "684": {
      "op": "POP"
    },
    "685": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x0"
    },
    "687": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x300"
    },
    "690": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "6"
    },
    "691": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "692": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "693": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "694": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "6"
    },
    "695": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "696": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "6"
    },
    "697": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "698": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "699": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 9,
      "value": "0x2C0"
    },
    "702": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "703": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "6"
    },
    "704": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "705": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "6"
    },
    "706": {
      "branch": 33,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "6"
    },
    "707": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FD"
    },
    "710": {
      "branch": 33,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "711": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "713": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "720": {
      "op": "SHL"
    },
    "721": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "722": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "723": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "725": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "726": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "727": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "728": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "730": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "731": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "732": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "733": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "6"
    },
    "734": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "735": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "736": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "738": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "739": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "740": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "742": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "743": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "744": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D2"
    },
    "747": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "749": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "750": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "751": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "753": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "754": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "755": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "6"
    },
    "756": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "6"
    },
    "757": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "759": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "760": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "761": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "762": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "6"
    },
    "763": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "764": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "6"
    },
    "765": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "766": {
      "fn": "SafeMath.mul",
      "offset": [
        3745,
        3746
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 10
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "769": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "770": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "771": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "POP",
      "path": "6"
    },
    "772": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "POP",
      "path": "6"
    },
    "773": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMP",
      "path": "6"
    },
    "774": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "775": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "777": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 11
    },
    "778": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "6"
    },
    "779": {
      "branch": 34,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "6"
    },
    "780": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35C"
    },
    "783": {
      "branch": 34,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "784": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "786": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "6"
    },
    "787": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "6"
    },
    "796": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "797": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "799": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "801": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "802": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "803": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "804": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1A"
    },
    "806": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "808": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "809": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "810": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "811": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "844": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "846": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "847": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "848": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "849": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "850": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "851": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "852": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "6"
    },
    "853": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "854": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "6"
    },
    "855": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "857": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "858": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "859": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "6"
    },
    "860": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "861": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 12
    },
    "862": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "6"
    },
    "863": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "6"
    },
    "864": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x365"
    },
    "867": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "868": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "6"
    },
    "869": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "870": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "6"
    },
    "871": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "872": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "6"
    },
    "877": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "878": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 13,
      "value": "0x40"
    },
    "880": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "15"
    },
    "881": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "15"
    },
    "891": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP7",
      "path": "15"
    },
    "892": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "15"
    },
    "893": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "895": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "15"
    },
    "896": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "15"
    },
    "897": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "898": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "15"
    },
    "899": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "15"
    },
    "900": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "902": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "15"
    },
    "903": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "15"
    },
    "904": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "905": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "907": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "15"
    },
    "908": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "15"
    },
    "909": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "15"
    },
    "910": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "15"
    },
    "911": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "912": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "913": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "15"
    },
    "914": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "915": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "15"
    },
    "916": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "15"
    },
    "917": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SUB",
      "path": "15"
    },
    "918": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "919": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "920": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "15"
    },
    "921": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "15"
    },
    "922": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "923": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x84"
    },
    "925": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "926": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "927": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "15"
    },
    "928": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "929": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "930": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "931": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "933": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "15"
    },
    "934": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "15"
    },
    "935": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "15"
    },
    "936": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "15"
    },
    "946": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "OR",
      "path": "15"
    },
    "955": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "956": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "957": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C7"
    },
    "960": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "961": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "DUP6",
      "path": "15"
    },
    "962": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "963": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4DB"
    },
    "966": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        985,
        1081
      ],
      "op": "JUMP",
      "path": "15"
    },
    "967": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "968": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "15"
    },
    "969": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "15"
    },
    "970": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "15"
    },
    "971": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "POP",
      "path": "15"
    },
    "972": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        885,
        1088
      ],
      "op": "JUMP",
      "path": "15"
    },
    "973": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "974": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "976": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "6"
    },
    "977": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "6"
    },
    "978": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "6"
    },
    "979": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 14
    },
    "980": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "6"
    },
    "981": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "6"
    },
    "982": {
      "branch": 35,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "983": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FD"
    },
    "986": {
      "branch": 35,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "987": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "989": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "6"
    },
    "990": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "997": {
      "op": "SHL"
    },
    "998": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "999": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1000": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1002": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1004": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1005": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1006": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1007": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1B"
    },
    "1009": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1011": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1012": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1013": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1014": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1047": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1049": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1050": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1051": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1052": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1053": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1054": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1055": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1056": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1057": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "6"
    },
    "1058": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1060": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1061": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1062": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1063": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1064": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 15,
      "value": "0x40"
    },
    "1066": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1067": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "op": "SUB"
    },
    "1076": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1077": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "15"
    },
    "1078": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1080": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1081": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "15"
    },
    "1082": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1083": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1085": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1086": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1087": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "15"
    },
    "1088": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1089": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1090": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1091": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1092": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1093": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1094": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1095": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SUB",
      "path": "15"
    },
    "1096": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1097": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1098": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "15"
    },
    "1099": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1100": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1101": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1103": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1104": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1105": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "15"
    },
    "1106": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1107": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1108": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1109": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1111": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1112": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "15"
    },
    "1113": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1114": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "op": "SUB"
    },
    "1123": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "15"
    },
    "1124": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "OR",
      "path": "15"
    },
    "1133": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1134": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1135": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x479"
    },
    "1138": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1139": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1140": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1141": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        805
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4DB"
    },
    "1144": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        786,
        872
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1145": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1146": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "POP",
      "path": "15"
    },
    "1147": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "POP",
      "path": "15"
    },
    "1148": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "POP",
      "path": "15"
    },
    "1149": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        704,
        879
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1150": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1151": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1153": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 16
    },
    "1154": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1155": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "6"
    },
    "1156": {
      "branch": 36,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1157": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D5"
    },
    "1160": {
      "branch": 36,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1161": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1163": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1164": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1165": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1173": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1174": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1176": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1178": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1179": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1180": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1181": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1E"
    },
    "1183": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1185": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1186": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1187": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1188": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "1221": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1223": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1224": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1225": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1226": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1227": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1228": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1229": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1230": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1231": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "6"
    },
    "1232": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1234": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1235": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1236": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1237": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 17
    },
    "1240": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "6"
    },
    "1241": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1242": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "1246": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x530"
    },
    "1249": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1250": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1252": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1256": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "15"
    },
    "1257": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1259": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1260": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1261": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1263": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1264": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1265": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1267": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "15"
    },
    "1268": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "1301": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1302": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1303": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "15"
    },
    "1304": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "15"
    },
    "1314": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x58C"
    },
    "1317": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1318": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1319": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1320": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1321": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1326": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "15"
    },
    "1327": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1328": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1329": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1330": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1331": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1332": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "branch": 30,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1335": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x479"
    },
    "1338": {
      "branch": 30,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 18
    },
    "1340": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1341": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1343": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "15"
    },
    "1344": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1348": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1349": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "LT",
      "path": "15"
    },
    "1350": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1351": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54F"
    },
    "1354": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1355": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1357": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1358": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1359": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "branch": 31,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1362": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x479"
    },
    "1365": {
      "branch": 31,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1366": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1368": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1377": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1378": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1380": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "1381": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1382": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1383": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1385": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "1386": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1387": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1388": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "15"
    },
    "1389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1390": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1391": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2A"
    },
    "1393": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1394": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1395": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "1398": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1399": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F3"
    },
    "1402": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2A"
    },
    "1404": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1405": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "1406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1408": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "1409": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1410": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "15"
    },
    "1411": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "15"
    },
    "1412": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1414": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1415": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1416": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1417": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "15"
    },
    "1418": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1419": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1420": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1421": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1423": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 19,
      "value": "0x59B"
    },
    "1426": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1427": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1428": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1430": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1431": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A5"
    },
    "1434": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1435": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1436": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1437": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "POP",
      "path": "16"
    },
    "1438": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1439": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1440": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1441": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "16"
    },
    "1442": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "16"
    },
    "1443": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "16"
    },
    "1444": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1446": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 20
    },
    "1449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "1450": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "16"
    },
    "1451": {
      "branch": 26,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E6"
    },
    "1455": {
      "branch": 26,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "1471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "1476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1478": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "16"
    },
    "1479": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x26"
    },
    "1483": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "1488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AC"
    },
    "1492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x26"
    },
    "1494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "1496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "1499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "16"
    },
    "1501": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "16"
    },
    "1502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1506": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "16"
    },
    "1508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 21,
      "value": "0x5EF"
    },
    "1514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x701"
    },
    "1518": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1519": {
      "branch": 27,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x640"
    },
    "1523": {
      "branch": 27,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "1543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1D"
    },
    "1546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "1550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "1588": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1590": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1594": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "16"
    },
    "1595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "1598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1599": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1600": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1601": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1603": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "op": "SUB"
    },
    "1614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "16"
    },
    "1615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1619": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1620": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1621": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1622": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1623": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1625": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "16"
    },
    "1637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67F"
    },
    "1640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1641": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1647": {
      "op": "NOT"
    },
    "1648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1655": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1657": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1658": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x660"
    },
    "1662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "16"
    },
    "1670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1673": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "16"
    },
    "1674": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "16"
    },
    "1675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "16"
    },
    "1677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "16"
    },
    "1680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "16"
    },
    "1684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "16"
    },
    "1687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1693": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1707": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "16"
    },
    "1709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1712": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "16"
    },
    "1713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "16"
    },
    "1714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1722": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "16"
    },
    "1724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E1"
    },
    "1727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "16"
    },
    "1736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "1738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1739": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "16"
    },
    "1741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "1756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1757": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E6"
    },
    "1760": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1765": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1767": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1768": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1769": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "1772": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 22,
      "value": "0x6F6"
    },
    "1775": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1776": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x707"
    },
    "1781": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1782": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1783": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "16"
    },
    "1784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "op": "POP"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1793": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1794": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1795": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16",
      "statement": 23
    },
    "1796": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1797": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1798": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1799": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1800": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1802": {
      "branch": 28,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1803": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1804": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x716"
    },
    "1807": {
      "branch": 28,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 24
    },
    "1810": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59E"
    },
    "1813": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1814": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1815": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1816": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1817": {
      "branch": 29,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1818": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x726"
    },
    "1821": {
      "branch": 29,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1822": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1823": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1824": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1825": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1826": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1828": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "16"
    },
    "1829": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1830": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1831": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 25
    },
    "1832": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1834": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1843": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1844": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1846": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1847": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1848": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1849": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1851": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1852": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1853": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1854": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "1855": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1856": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1857": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1858": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1859": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1860": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1861": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1862": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1863": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1865": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1866": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1867": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1868": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1869": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1870": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1871": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1873": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1874": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1875": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1876": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1877": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1878": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1880": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1881": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1882": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1883": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "LT",
      "path": "16"
    },
    "1884": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1885": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x770"
    },
    "1888": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1889": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1890": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1891": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1892": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1893": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1894": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1895": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1896": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1897": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1899": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1900": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x758"
    },
    "1903": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1904": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1905": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1906": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1907": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1908": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1909": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1910": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1911": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1912": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1913": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1914": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1915": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1917": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "16"
    },
    "1918": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1919": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1920": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x79D"
    },
    "1923": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1924": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1925": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1926": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "1927": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1928": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1929": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1931": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1932": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1934": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "1935": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1938": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "EXP",
      "path": "16"
    },
    "1939": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "1940": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "NOT",
      "path": "16"
    },
    "1941": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "16"
    },
    "1942": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1943": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1944": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1946": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "1947": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1948": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1949": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1950": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1951": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1952": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1953": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1954": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "1955": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1957": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1958": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1959": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1960": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "1961": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1962": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "REVERT",
      "path": "16"
    }
  },
  "sha1": "55b6d635fd75c723e2df74f9d8fdcf7462073f76",
  "source": "pragma solidity 0.6.12;\n\n// import 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\n\nimport '../../interfaces/ICErc20_2.sol';\n\ncontract MockCErc20_2 is ICErc20_2 {\n  using SafeMath for uint;\n  using SafeERC20 for IERC20;\n\n  IERC20 public token;\n  uint public mintRate = 1e18;\n  uint public totalSupply = 0;\n  mapping(address => uint) public override balanceOf;\n\n  uint public constant decimals = 18;\n\n  constructor(IERC20 _token) public {\n    token = _token;\n  }\n\n  function setMintRate(uint _mintRate) external override {\n    mintRate = _mintRate;\n  }\n\n  function underlying() external override returns (address) {\n    return address(token);\n  }\n\n  function mint(uint mintAmount) external override returns (uint) {\n    uint amountIn = mintAmount.mul(mintRate).div(1e18);\n    IERC20(token).safeTransferFrom(msg.sender, address(this), amountIn);\n    totalSupply = totalSupply.add(mintAmount);\n    balanceOf[msg.sender] = balanceOf[msg.sender].add(mintAmount);\n    return 0;\n  }\n\n  function redeem(uint redeemAmount) external override returns (uint) {\n    uint amountOut = redeemAmount.mul(1e18).div(mintRate);\n    IERC20(token).safeTransfer(msg.sender, amountOut);\n    totalSupply = totalSupply.sub(redeemAmount);\n    balanceOf[msg.sender] = balanceOf[msg.sender].sub(redeemAmount);\n    return 0;\n  }\n}\n",
  "sourceMap": "324:1174:29:-:0;;;467:4;444:27;;501:1;475:27;;600:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:59:29;640:5;:14;;-1:-1:-1;;;;;640:14:29;;;-1:-1:-1;;;;;;640:14:29;;;;;;;;;324:1174;;;;;;",
  "sourcePath": "contracts/mock/MockCErc20_2.sol",
  "type": "contract"
}