{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBank",
          "name": "_bank",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_werc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_celo",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "AcceptGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "SetGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "SetPendingGovernor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bank",
      "outputs": [
        {
          "internalType": "contract IBank",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "lpTokens",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "statuses",
          "type": "bool[]"
        }
      ],
      "name": "setWhitelistLPTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "werc20",
      "outputs": [
        {
          "internalType": "contract IWERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedLpTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155.sol",
    "12": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "14": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "15": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "16": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "22": "contracts/Governable.sol",
    "3": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "4": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol",
    "43": "contracts/spell/BasicSpell.sol",
    "45": "contracts/spell/WhitelistSpell.sol",
    "48": "contracts/utils/ERC1155NaiveReceiver.sol",
    "53": "interfaces/IBank.sol",
    "57": "interfaces/IERC20Wrapper.sol",
    "6": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "67": "interfaces/IWERC20.sol",
    "7": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/proxy/Initializable.sol",
    "9": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/spell/WhitelistSpell.sol",
    "exportedSymbols": {
      "WhitelistSpell": [
        12545
      ]
    },
    "id": 12546,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12456,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:45"
      },
      {
        "absolutePath": "contracts/spell/BasicSpell.sol",
        "file": "./BasicSpell.sol",
        "id": 12457,
        "nodeType": "ImportDirective",
        "scope": 12546,
        "sourceUnit": 11115,
        "src": "58:26:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Governable.sol",
        "file": "../Governable.sol",
        "id": 12458,
        "nodeType": "ImportDirective",
        "scope": 12546,
        "sourceUnit": 109,
        "src": "85:27:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12459,
              "name": "BasicSpell",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11114,
              "src": "141:10:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicSpell_$11114",
                "typeString": "contract BasicSpell"
              }
            },
            "id": 12460,
            "nodeType": "InheritanceSpecifier",
            "src": "141:10:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12461,
              "name": "Governable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 108,
              "src": "153:10:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Governable_$108",
                "typeString": "contract Governable"
              }
            },
            "id": 12462,
            "nodeType": "InheritanceSpecifier",
            "src": "153:10:45"
          }
        ],
        "contractDependencies": [
          108,
          11114,
          13157,
          14090,
          17280,
          18617,
          19186,
          19227
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12545,
        "linearizedBaseContracts": [
          12545,
          108,
          14090,
          11114,
          13157,
          17280,
          19227,
          19186,
          18617
        ],
        "name": "WhitelistSpell",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4bab09f6",
            "id": 12466,
            "mutability": "mutable",
            "name": "whitelistedLpTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 12545,
            "src": "168:51:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12465,
              "keyType": {
                "id": 12463,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "176:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "168:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 12464,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "187:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12483,
              "nodeType": "Block",
              "src": "383:31:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12480,
                      "name": "__Governable__init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "389:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "389:20:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12482,
                  "nodeType": "ExpressionStatement",
                  "src": "389:20:45"
                }
              ]
            },
            "documentation": null,
            "id": 12484,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12475,
                    "name": "_bank",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12468,
                    "src": "360:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBank_$15185",
                      "typeString": "contract IBank"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12476,
                    "name": "_werc20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12470,
                    "src": "367:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12477,
                    "name": "_celo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12472,
                    "src": "376:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12474,
                  "name": "BasicSpell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11114,
                  "src": "349:10:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BasicSpell_$11114_$",
                    "typeString": "type(contract BasicSpell)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "349:33:45"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12468,
                  "mutability": "mutable",
                  "name": "_bank",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12484,
                  "src": "286:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBank_$15185",
                    "typeString": "contract IBank"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12467,
                    "name": "IBank",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15185,
                    "src": "286:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBank_$15185",
                      "typeString": "contract IBank"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12470,
                  "mutability": "mutable",
                  "name": "_werc20",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12484,
                  "src": "303:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12472,
                  "mutability": "mutable",
                  "name": "_celo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12484,
                  "src": "324:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:61:45"
            },
            "returnParameters": {
              "id": 12479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:45"
            },
            "scope": 12545,
            "src": "269:145:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12543,
              "nodeType": "Block",
              "src": "682:326:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12497,
                            "name": "lpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12488,
                            "src": "696:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 12498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "696:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12499,
                            "name": "statuses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12491,
                            "src": "715:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                              "typeString": "bool[] calldata"
                            }
                          },
                          "id": 12500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "715:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "696:34:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c70546f6b656e732026207374617475736573206c656e677468206d69736d617463686564",
                        "id": 12502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:39:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6205e8b28bd8763a953b2d1fb045a1662559c0323f9d773f29818571aa0824ff",
                          "typeString": "literal_string \"lpTokens & statuses length mismatched\""
                        },
                        "value": "lpTokens & statuses length mismatched"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6205e8b28bd8763a953b2d1fb045a1662559c0323f9d773f29818571aa0824ff",
                          "typeString": "literal_string \"lpTokens & statuses length mismatched\""
                        }
                      ],
                      "id": 12496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "688:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:84:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12504,
                  "nodeType": "ExpressionStatement",
                  "src": "688:84:45"
                },
                {
                  "body": {
                    "id": 12541,
                    "nodeType": "Block",
                    "src": "827:177:45",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 12516,
                            "name": "statuses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12491,
                            "src": "839:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                              "typeString": "bool[] calldata"
                            }
                          },
                          "id": 12518,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 12517,
                            "name": "idx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12506,
                            "src": "848:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "839:13:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 12530,
                        "nodeType": "IfStatement",
                        "src": "835:105:45",
                        "trueBody": {
                          "id": 12529,
                          "nodeType": "Block",
                          "src": "854:86:45",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 12522,
                                          "name": "lpTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12488,
                                          "src": "885:8:45",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 12524,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 12523,
                                          "name": "idx",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12506,
                                          "src": "894:3:45",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "885:13:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 12520,
                                        "name": "bank",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10830,
                                        "src": "872:4:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IBank_$15185",
                                          "typeString": "contract IBank"
                                        }
                                      },
                                      "id": 12521,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "support",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 15184,
                                      "src": "872:12:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address) view external returns (bool)"
                                      }
                                    },
                                    "id": 12525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "872:27:45",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "6f7261636c65206e6f7420737570706f7274206c7020746f6b656e",
                                    "id": 12526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "901:29:45",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3a9ffec212fad1e5f7be7b10d1da1e3f8635c3e7f64541261836ae52fa571d21",
                                      "typeString": "literal_string \"oracle not support lp token\""
                                    },
                                    "value": "oracle not support lp token"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3a9ffec212fad1e5f7be7b10d1da1e3f8635c3e7f64541261836ae52fa571d21",
                                      "typeString": "literal_string \"oracle not support lp token\""
                                    }
                                  ],
                                  "id": 12519,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "864:7:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 12527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "864:67:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12528,
                              "nodeType": "ExpressionStatement",
                              "src": "864:67:45"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 12531,
                              "name": "whitelistedLpTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12466,
                              "src": "947:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 12535,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12532,
                                "name": "lpTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12488,
                                "src": "967:8:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 12534,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 12533,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12506,
                                "src": "976:3:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "967:13:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "947:34:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 12536,
                              "name": "statuses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12491,
                              "src": "984:8:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                                "typeString": "bool[] calldata"
                              }
                            },
                            "id": 12538,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12537,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12506,
                              "src": "993:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "984:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "947:50:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12540,
                        "nodeType": "ExpressionStatement",
                        "src": "947:50:45"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12509,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12506,
                      "src": "797:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12510,
                        "name": "lpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12488,
                        "src": "803:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 12511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "803:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "797:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12542,
                  "initializationExpression": {
                    "assignments": [
                      12506
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 12506,
                        "mutability": "mutable",
                        "name": "idx",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 12542,
                        "src": "783:8:45",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 12505,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "783:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 12508,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 12507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "794:1:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "783:12:45"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 12514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "820:5:45",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 12513,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12506,
                        "src": "820:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12515,
                    "nodeType": "ExpressionStatement",
                    "src": "820:5:45"
                  },
                  "nodeType": "ForStatement",
                  "src": "778:226:45"
                }
              ]
            },
            "documentation": {
              "id": 12485,
              "nodeType": "StructuredDocumentation",
              "src": "418:149:45",
              "text": "@dev Set whitelist LP token statuses for spell\n @param lpTokens LP tokens to set whitelist statuses\n @param statuses Whitelist statuses"
            },
            "functionSelector": "ee42c6f4",
            "id": 12544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 12494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12493,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "672:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "672:7:45"
              }
            ],
            "name": "setWhitelistLPTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12488,
                  "mutability": "mutable",
                  "name": "lpTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12544,
                  "src": "600:27:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12486,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "600:7:45",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 12487,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "600:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12491,
                  "mutability": "mutable",
                  "name": "statuses",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12544,
                  "src": "629:24:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12489,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "629:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 12490,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "629:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "599:55:45"
            },
            "returnParameters": {
              "id": 12495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:45"
            },
            "scope": 12545,
            "src": "570:438:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12546,
        "src": "114:896:45"
      }
    ],
    "src": "33:978:45"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "WhitelistSpell",
  "coverageMap": {
    "branches": {
      "10": {},
      "12": {},
      "14": {},
      "15": {
        "SafeERC20._callOptionalReturn": {
          "29": [
            3495,
            3516,
            false
          ],
          "30": [
            3624,
            3654,
            true
          ]
        }
      },
      "16": {
        "Address._verifyCallResult": {
          "26": [
            7234,
            7241,
            false
          ],
          "27": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "24": [
            4767,
            4797,
            true
          ],
          "25": [
            4858,
            4876,
            true
          ]
        }
      },
      "22": {
        "Governable.acceptGovernor": {
          "28": [
            1283,
            1312,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "43": {},
      "45": {
        "WhitelistSpell.setWhitelistLPTokens": {
          "21": [
            696,
            730,
            true
          ],
          "22": [
            839,
            852,
            false
          ],
          "23": [
            872,
            899,
            true
          ]
        }
      },
      "48": {},
      "53": {},
      "57": {},
      "6": {},
      "67": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "10": {},
      "12": {},
      "14": {},
      "15": {
        "SafeERC20._callOptionalReturn": {
          "15": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeApprove": {
          "11": [
            1704,
            1854
          ],
          "12": [
            1864,
            1954
          ]
        }
      },
      "16": {
        "Address._verifyCallResult": {
          "19": [
            7257,
            7274
          ],
          "20": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "14": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "16": [
            4759,
            4840
          ],
          "17": [
            4850,
            4910
          ],
          "18": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "13": [
            1117,
            1132
          ]
        }
      },
      "22": {
        "Governable.acceptGovernor": {
          "1": [
            1275,
            1341
          ],
          "2": [
            1347,
            1375
          ],
          "3": [
            1381,
            1402
          ],
          "4": [
            1408,
            1439
          ]
        },
        "Governable.setPendingGovernor": {
          "9": [
            1058,
            1092
          ],
          "10": [
            1098,
            1139
          ]
        }
      },
      "3": {
        "ERC165.supportsInterface": {
          "0": [
            1066,
            1106
          ]
        }
      },
      "4": {},
      "43": {},
      "45": {
        "WhitelistSpell.setWhitelistLPTokens": {
          "5": [
            688,
            772
          ],
          "6": [
            864,
            931
          ],
          "7": [
            947,
            997
          ],
          "8": [
            820,
            825
          ]
        }
      },
      "48": {},
      "53": {},
      "57": {},
      "6": {},
      "67": {},
      "7": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "BasicSpell",
    "ERC1155NaiveReceiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC165",
    "Governable",
    "IBank",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "IERC20Wrapper",
    "IWERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063e3056a3411610071578063e3056a3414610292578063e58bb6391461029a578063ee42c6f4146102a4578063f235757f14610362578063f23a6e6114610388578063f4b160451461041b576100b4565b806301ffc9a7146100b95780630c340a24146100f45780634bab09f6146101185780635741229c1461013e57806376cdb03b14610146578063bc197c811461014e575b600080fd5b6100e0600480360360208110156100cf57600080fd5b50356001600160e01b031916610449565b604080519115158252519081900360200190f35b6100fc610468565b604080516001600160a01b039092168252519081900360200190f35b6100e06004803603602081101561012e57600080fd5b50356001600160a01b031661047d565b6100fc610492565b6100fc6104b6565b610275600480360360a081101561016457600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561019757600080fd5b8201836020820111156101a957600080fd5b803590602001918460208302840111600160201b831117156101ca57600080fd5b919390929091602081019035600160201b8111156101e757600080fd5b8201836020820111156101f957600080fd5b803590602001918460208302840111600160201b8311171561021a57600080fd5b919390929091602081019035600160201b81111561023757600080fd5b82018360208201111561024957600080fd5b803590602001918460018302840111600160201b8311171561026a57600080fd5b5090925090506104da565b604080516001600160e01b03199092168252519081900360200190f35b6100fc6104ee565b6102a26104fd565b005b6102a2600480360360408110156102ba57600080fd5b810190602081018135600160201b8111156102d457600080fd5b8201836020820111156102e657600080fd5b803590602001918460208302840111600160201b8311171561030757600080fd5b919390929091602081019035600160201b81111561032457600080fd5b82018360208201111561033657600080fd5b803590602001918460208302840111600160201b8311171561035757600080fd5b5090925090506105bf565b6102a26004803603602081101561037857600080fd5b50356001600160a01b03166107e2565b610275600480360360a081101561039e57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b8111156103dd57600080fd5b8201836020820111156103ef57600080fd5b803590602001918460018302840111600160201b8311171561041057600080fd5b50909250905061088e565b6100e06004803603604081101561043157600080fd5b506001600160a01b03813581169160200135166108a0565b6001600160e01b03191660009081526020819052604090205460ff1690565b6042546201000090046001600160a01b031681565b60846020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b63bc197c8160e01b98975050505050505050565b6043546001600160a01b031681565b6043546001600160a01b0316331461055c576040805162461bcd60e51b815260206004820152601860248201527f6e6f74207468652070656e64696e6720676f7665726e6f720000000000000000604482015290519081900360640190fd5b604380546001600160a01b03191690556042805462010000600160b01b031916336201000081029190911790915560408051918252517fd345d81ce68c70b119a17eee79dc1421700bd9cb21ca148a62dc90983964e82f916020908290030190a1565b6042546201000090046001600160a01b03163314610617576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b8281146106555760405162461bcd60e51b8152600401808060200182810382526025815260200180610ccf6025913960400191505060405180910390fd5b60005b838110156107db5782828281811061066c57fe5b905060200201351561077d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e660cc088686848181106106b357fe5b905060200201356001600160a01b03166040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561070057600080fd5b505afa158015610714573d6000803e3d6000fd5b505050506040513d602081101561072a57600080fd5b505161077d576040805162461bcd60e51b815260206004820152601b60248201527f6f7261636c65206e6f7420737570706f7274206c7020746f6b656e0000000000604482015290519081900360640190fd5b82828281811061078957fe5b905060200201351515608460008787858181106107a257fe5b602090810292909201356001600160a01b0316835250810191909152604001600020805460ff1916911515919091179055600101610658565b5050505050565b6042546201000090046001600160a01b0316331461083a576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b604380546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f964dea888b00b2ab53f13dfe7ca334b46e99338c222ae232d98547a1da019f609181900360200190a150565b63f23a6e6160e01b9695505050505050565b604160209081526000928352604080842090915290825290205460ff1681565b801580610946575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561091857600080fd5b505afa15801561092c573d6000803e3d6000fd5b505050506040513d602081101561094257600080fd5b5051155b6109815760405162461bcd60e51b8152600401808060200182810382526036815260200180610d1e6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526109d39084906109f7565b505050565b3b151590565b60606109ed8484600085610aa8565b90505b9392505050565b6060610a4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109de9092919063ffffffff16565b8051909150156109d357808060200190516020811015610a6b57600080fd5b50516109d35760405162461bcd60e51b815260040180806020018281038252602a815260200180610cf4602a913960400191505060405180910390fd5b606082471015610ae95760405162461bcd60e51b8152600401808060200182810382526026815260200180610ca96026913960400191505060405180910390fd5b610af2856109d8565b610b43576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610b825780518252601f199092019160209182019101610b63565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610be4576040519150601f19603f3d011682016040523d82523d6000602084013e610be9565b606091505b5091509150610bf9828286610c04565b979650505050505050565b60608315610c135750816109f0565b825115610c235782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c6d578181015183820152602001610c55565b50505050905090810190601f168015610c9a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6c70546f6b656e732026207374617475736573206c656e677468206d69736d6174636865645361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122053e94bf6d4353465e2fae3c4fb1e2abeadbed63086fc3e45829b24692b2630dc64736f6c634300060c0033",
  "deployedSourceMap": "114:896:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:148:3;;;;;;;;;;;;;;;;-1:-1:-1;965:148:3;-1:-1:-1;;;;;;965:148:3;;:::i;:::-;;;;;;;;;;;;;;;;;;321:23:22;;;:::i;:::-;;;;-1:-1:-1;;;;;321:23:22;;;;;;;;;;;;;;168:51:45;;;;;;;;;;;;;;;;-1:-1:-1;168:51:45;-1:-1:-1;;;;;168:51:45;;:::i;509:31:43:-;;;:::i;478:27::-;;;:::i;502:273:48:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:273:48;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:273:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:273:48;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:273:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:273:48;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:273:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:273:48;;;;;;;;;;-1:-1:-1;502:273:48;;-1:-1:-1;502:273:48;-1:-1:-1;502:273:48;:::i;:::-;;;;-1:-1:-1;;;;;;502:273:48;;;;;;;;;;;;;;373:30:22;;;:::i;1234:210::-;;;:::i;:::-;;570:438:45;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;570:438:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;570:438:45;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;570:438:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;570:438:45;;;;;;;;;;-1:-1:-1;570:438:45;;-1:-1:-1;570:438:45;-1:-1:-1;570:438:45;:::i;981:163:22:-;;;;;;;;;;;;;;;;-1:-1:-1;981:163:22;-1:-1:-1;;;;;981:163:22;;:::i;259:239:48:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;259:239:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;259:239:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;259:239:48;;;;;;;;;;-1:-1:-1;259:239:48;;-1:-1:-1;259:239:48;-1:-1:-1;259:239:48;:::i;545:60:43:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;545:60:43;;;;;;;;;;:::i;965:148:3:-;-1:-1:-1;;;;;;1073:33:3;1050:4;1073:33;;;;;;;;;;;;;;965:148::o;321:23:22:-;;;;;;-1:-1:-1;;;;;321:23:22;;:::o;168:51:45:-;;;;;;;;;;;;;;;:::o;509:31:43:-;;;:::o;478:27::-;;;:::o;502:273:48:-;-1:-1:-1;;;502:273:48;;;;;;;;;;:::o;373:30:22:-;;;-1:-1:-1;;;;;373:30:22;;:::o;1234:210::-;1297:15;;-1:-1:-1;;;;;1297:15:22;1283:10;:29;1275:66;;;;;-1:-1:-1;;;1275:66:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:15;:28;;-1:-1:-1;;;;;;1347:28:22;;;1381:8;:21;;-1:-1:-1;;;;;;1381:21:22;1392:10;1381:21;;;;;;;;;;1413:26;;;;;;;;;;;;;;;;;1234:210::o;570:438:45:-;566:8:22;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;;;;696:34:45;;::::1;688:84;;;;-1:-1:-1::0;;;688:84:45::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:8;778:226;797:21:::0;;::::1;778:226;;;839:8;;848:3;839:13;;;;;;;;;;;;;;835:105;;872:4;-1:-1:-1::0;;;;;872:12:45::1;;885:8;;894:3;885:13;;;;;;;;;;;;;-1:-1:-1::0;;;;;885:13:45::1;872:27;;;;;;;;;;;;;-1:-1:-1::0;;;;;872:27:45::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;872:27:45;864:67:::1;;;::::0;;-1:-1:-1;;;864:67:45;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;984:8;;993:3;984:13;;;;;;;;;;;;;;;947:19;:34;967:8;;976:3;967:13;;;;;;;;::::0;;::::1;::::0;;;::::1;;-1:-1:-1::0;;;;;967:13:45::1;947:34:::0;;-1:-1:-1;947:34:45;::::1;::::0;;;;;;-1:-1:-1;947:34:45;:50;;-1:-1:-1;;947:50:45::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;820:5:45::1;778:226;;;;570:438:::0;;;;:::o;981:163:22:-;566:8;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;;;;1058:15:::1;:34:::0;;-1:-1:-1;;;;;1058:34:22;::::1;-1:-1:-1::0;;;;;;1058:34:22;;::::1;::::0;::::1;::::0;;;1103:36:::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;981:163:::0;:::o;259:239:48:-;-1:-1:-1;;;259:239:48;;;;;;;;:::o;545:60:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1348:613:15:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:15;;;-1:-1:-1;;;1729:39:15;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:15;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:15;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:15;-1:-1:-1;;;1891:62:15;;;1864:90;;1884:5;;1864:19;:90::i;:::-;1348:613;;;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;2967:751:15:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:15;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:15;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:15;3616:85;;;;-1:-1:-1;;;3616:85:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4608:523:16;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:16;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:16:o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:16;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept to become the new governor. Must be called by the pending governor."
      },
      "setPendingGovernor(address)": {
        "details": "Set the pending governor, which will be the governor once accepted.",
        "params": {
          "_pendingGovernor": "The address to become the pending governor."
        }
      },
      "setWhitelistLPTokens(address[],bool[])": {
        "details": "Set whitelist LP token statuses for spell",
        "params": {
          "lpTokens": "LP tokens to set whitelist statuses",
          "statuses": "Whitelist statuses"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "offset": [
    114,
    1010
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE3056A34 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xE58BB639 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xEE42C6F4 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xF235757F EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xF4B16045 EQ PUSH2 0x41B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4BAB09F6 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x5741229C EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFC PUSH2 0x492 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x88E JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x42 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x43 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x55C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x43 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x42 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND CALLER PUSH3 0x10000 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x42 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x617 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 DUP2 EQ PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCCF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7DB JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x66C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD ISZERO PUSH2 0x77D JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE660CC08 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x6B3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x714 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x77D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F7261636C65206E6F7420737570706F7274206C7020746F6B656E0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x789 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD ISZERO ISZERO PUSH1 0x84 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x7A2 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x658 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x42 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x43 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x41 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x946 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD1E PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x9D3 SWAP1 DUP5 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9ED DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA4C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9DE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x9D3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCF4 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCA9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF2 DUP6 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xB43 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB82 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBF9 DUP3 DUP3 DUP7 PUSH2 0xC04 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xC13 JUMPI POP DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xC23 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC6D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC55 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC9A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C6C70546F PUSH12 0x656E73202620737461747573 PUSH6 0x73206C656E67 PUSH21 0x68206D69736D617463686564536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A264697066735822122053E94B 0xF6 0xD4 CALLDATALOAD CALLVALUE PUSH6 0xE2FAE3C4FB1E 0x2A 0xBE 0xAD 0xBE 0xD6 ADDRESS DUP7 0xFC RETURNDATACOPY GASLIMIT DUP3 SWAP12 0x24 PUSH10 0x2B2630DC64736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        114,
        1010
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "6": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "12": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "REVERT",
      "path": "45"
    },
    "16": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "17": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "POP",
      "path": "45"
    },
    "18": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "21": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "LT",
      "path": "45"
    },
    "22": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "26": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "29": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "SHR",
      "path": "45"
    },
    "32": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "33": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xE3056A34"
    },
    "38": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "GT",
      "path": "45"
    },
    "39": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "43": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "44": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xE3056A34"
    },
    "49": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "50": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x292"
    },
    "53": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "54": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "55": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xE58BB639"
    },
    "60": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "61": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x29A"
    },
    "64": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "65": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "66": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xEE42C6F4"
    },
    "71": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "72": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A4"
    },
    "75": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "76": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "77": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF235757F"
    },
    "82": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "83": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x362"
    },
    "86": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "87": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "88": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF23A6E61"
    },
    "93": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "94": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x388"
    },
    "97": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "98": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "99": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF4B16045"
    },
    "104": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "105": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x41B"
    },
    "108": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "109": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB4"
    },
    "112": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMP",
      "path": "45"
    },
    "113": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "114": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "115": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x1FFC9A7"
    },
    "120": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "121": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "125": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "126": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xC340A24"
    },
    "131": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "132": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF4"
    },
    "135": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "136": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "137": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x4BAB09F6"
    },
    "142": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "143": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x118"
    },
    "146": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "147": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "148": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x5741229C"
    },
    "153": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "154": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13E"
    },
    "157": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "158": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "159": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x76CDB03B"
    },
    "164": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "165": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x146"
    },
    "168": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "169": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "170": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xBC197C81"
    },
    "175": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "EQ",
      "path": "45"
    },
    "176": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x14E"
    },
    "179": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "180": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "181": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "DUP1",
      "path": "45"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        114,
        1010
      ],
      "op": "REVERT",
      "path": "45"
    },
    "185": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "186": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0"
    },
    "189": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "191": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "3"
    },
    "192": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "193": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "3"
    },
    "194": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "196": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "3"
    },
    "197": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "LT",
      "path": "3"
    },
    "198": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "199": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF"
    },
    "202": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "203": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "205": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "3"
    },
    "206": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "3"
    },
    "207": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "208": {
      "op": "POP"
    },
    "209": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "op": "NOT"
    },
    "219": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "AND",
      "path": "3"
    },
    "220": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x449"
    },
    "223": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "3"
    },
    "224": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "225": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "227": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "3"
    },
    "228": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "229": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "230": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "231": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "232": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP3",
      "path": "3"
    },
    "233": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "234": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "236": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "3"
    },
    "237": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "238": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "3"
    },
    "239": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "241": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ADD",
      "path": "3"
    },
    "242": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "243": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "RETURN",
      "path": "3"
    },
    "244": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "245": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFC"
    },
    "248": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x468"
    },
    "251": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "252": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "253": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "255": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DUP1",
      "path": "22"
    },
    "256": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "263": {
      "op": "SHL"
    },
    "264": {
      "op": "SUB"
    },
    "265": {
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "266": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "267": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "22"
    },
    "268": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DUP3",
      "path": "22"
    },
    "269": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "270": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "271": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "272": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "22"
    },
    "273": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "274": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SUB",
      "path": "22"
    },
    "275": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "277": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "ADD",
      "path": "22"
    },
    "278": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "279": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "RETURN",
      "path": "22"
    },
    "280": {
      "offset": [
        168,
        219
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "281": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE0"
    },
    "284": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "286": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "DUP1",
      "path": "45"
    },
    "287": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "288": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "SUB",
      "path": "45"
    },
    "289": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "291": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "DUP2",
      "path": "45"
    },
    "292": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "LT",
      "path": "45"
    },
    "293": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "294": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12E"
    },
    "297": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "298": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "300": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "DUP1",
      "path": "45"
    },
    "301": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "REVERT",
      "path": "45"
    },
    "302": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "303": {
      "op": "POP"
    },
    "304": {
      "offset": [
        168,
        219
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "311": {
      "op": "SHL"
    },
    "312": {
      "op": "SUB"
    },
    "313": {
      "offset": [
        168,
        219
      ],
      "op": "AND",
      "path": "45"
    },
    "314": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x47D"
    },
    "317": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        168,
        219
      ],
      "op": "JUMP",
      "path": "45"
    },
    "318": {
      "offset": [
        509,
        540
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "319": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        509,
        540
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xFC"
    },
    "322": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        509,
        540
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x492"
    },
    "325": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        509,
        540
      ],
      "op": "JUMP",
      "path": "43"
    },
    "326": {
      "offset": [
        478,
        505
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "327": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        478,
        505
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xFC"
    },
    "330": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        478,
        505
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x4B6"
    },
    "333": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        478,
        505
      ],
      "op": "JUMP",
      "path": "43"
    },
    "334": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "335": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x275"
    },
    "338": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "340": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "341": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "342": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SUB",
      "path": "48"
    },
    "343": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xA0"
    },
    "345": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "346": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "LT",
      "path": "48"
    },
    "347": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "348": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x164"
    },
    "351": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "352": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "354": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "355": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "356": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "363": {
      "op": "SHL"
    },
    "364": {
      "op": "SUB"
    },
    "365": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "366": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "367": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "368": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "AND",
      "path": "48"
    },
    "369": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "370": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "372": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "373": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "374": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "375": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "376": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "377": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "AND",
      "path": "48"
    },
    "378": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "379": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "380": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "381": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "382": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x60"
    },
    "384": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "385": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "386": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "388": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "389": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "390": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "397": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "398": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "399": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x197"
    },
    "402": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "403": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "405": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "406": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "407": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "408": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "409": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "410": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "411": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "413": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "414": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "415": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "416": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "417": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1A9"
    },
    "420": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "421": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "423": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "424": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "425": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "426": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "427": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "428": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "429": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "431": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "432": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "433": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP5",
      "path": "48"
    },
    "434": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "436": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "437": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "MUL",
      "path": "48"
    },
    "438": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP5",
      "path": "48"
    },
    "439": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "440": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "447": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "448": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "OR",
      "path": "48"
    },
    "449": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "450": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1CA"
    },
    "453": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "454": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "456": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "457": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "458": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "459": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "460": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "461": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "462": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "463": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "464": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "465": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "467": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "468": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "469": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "470": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "477": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "478": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "479": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E7"
    },
    "482": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "483": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "485": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "486": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "487": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "488": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "489": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "490": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "491": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "493": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "494": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "495": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "496": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "497": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F9"
    },
    "500": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "501": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "503": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "504": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "505": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "506": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "507": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "508": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "509": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "511": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "512": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "513": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP5",
      "path": "48"
    },
    "514": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "516": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "517": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "MUL",
      "path": "48"
    },
    "518": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP5",
      "path": "48"
    },
    "519": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "520": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "527": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "528": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "OR",
      "path": "48"
    },
    "529": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "530": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A"
    },
    "533": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "534": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "536": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "537": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "538": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "539": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "540": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "541": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "542": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "543": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "544": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "545": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "547": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "548": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "549": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "550": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "555": {
      "op": "SHL"
    },
    "556": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "557": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "558": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "559": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x237"
    },
    "562": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "563": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "565": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "566": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "567": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "568": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "569": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "570": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "571": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "574": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "575": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "576": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "577": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x249"
    },
    "580": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "581": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "583": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "584": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "585": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "586": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "587": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "588": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "589": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "591": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "592": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "593": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP5",
      "path": "48"
    },
    "594": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "596": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "597": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "MUL",
      "path": "48"
    },
    "598": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP5",
      "path": "48"
    },
    "599": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "600": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP4",
      "path": "48"
    },
    "607": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "GT",
      "path": "48"
    },
    "608": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "OR",
      "path": "48"
    },
    "609": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "610": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x26A"
    },
    "613": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "614": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "616": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "617": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "REVERT",
      "path": "48"
    },
    "618": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "621": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4DA"
    },
    "628": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        502,
        775
      ],
      "op": "JUMP",
      "path": "48"
    },
    "629": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "630": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "632": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP1",
      "path": "48"
    },
    "633": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "640": {
      "op": "SHL"
    },
    "641": {
      "op": "SUB"
    },
    "642": {
      "op": "NOT"
    },
    "643": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "644": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "645": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "AND",
      "path": "48"
    },
    "646": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP3",
      "path": "48"
    },
    "647": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "648": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "649": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "650": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "DUP2",
      "path": "48"
    },
    "651": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "652": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SUB",
      "path": "48"
    },
    "653": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "655": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "ADD",
      "path": "48"
    },
    "656": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "657": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "RETURN",
      "path": "48"
    },
    "658": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "659": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFC"
    },
    "662": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4EE"
    },
    "665": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "666": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "667": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A2"
    },
    "670": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4FD"
    },
    "673": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "674": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "675": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "STOP",
      "path": "22"
    },
    "676": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "677": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A2"
    },
    "680": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "682": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "683": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "684": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SUB",
      "path": "45"
    },
    "685": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "687": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP2",
      "path": "45"
    },
    "688": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "LT",
      "path": "45"
    },
    "689": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "690": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2BA"
    },
    "693": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "694": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "696": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "697": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "45"
    },
    "698": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "699": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP2",
      "path": "45"
    },
    "700": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "701": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "702": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "704": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP2",
      "path": "45"
    },
    "705": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "706": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP2",
      "path": "45"
    },
    "707": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP2",
      "path": "45"
    },
    "714": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "715": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "716": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "719": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "720": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "722": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "723": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "45"
    },
    "724": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "725": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP3",
      "path": "45"
    },
    "726": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "727": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP4",
      "path": "45"
    },
    "728": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "730": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP3",
      "path": "45"
    },
    "731": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "732": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "733": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "734": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2E6"
    },
    "737": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "738": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "740": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "741": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "45"
    },
    "742": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "743": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "744": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "745": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "746": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "748": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "749": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "750": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP5",
      "path": "45"
    },
    "751": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "753": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP4",
      "path": "45"
    },
    "754": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "MUL",
      "path": "45"
    },
    "755": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP5",
      "path": "45"
    },
    "756": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "757": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP4",
      "path": "45"
    },
    "764": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "765": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "OR",
      "path": "45"
    },
    "766": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "767": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x307"
    },
    "770": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "771": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "773": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "774": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "45"
    },
    "775": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "776": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "777": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "778": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "779": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "780": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "781": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "782": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "784": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP2",
      "path": "45"
    },
    "785": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "786": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "787": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP2",
      "path": "45"
    },
    "794": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "795": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "796": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x324"
    },
    "799": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "800": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "802": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "803": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "45"
    },
    "804": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "805": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP3",
      "path": "45"
    },
    "806": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "807": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP4",
      "path": "45"
    },
    "808": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "810": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP3",
      "path": "45"
    },
    "811": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "812": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "813": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "814": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x336"
    },
    "817": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "818": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "820": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "821": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "45"
    },
    "822": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "823": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "824": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "825": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "826": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "828": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "829": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "830": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP5",
      "path": "45"
    },
    "831": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "833": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP4",
      "path": "45"
    },
    "834": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "MUL",
      "path": "45"
    },
    "835": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP5",
      "path": "45"
    },
    "836": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ADD",
      "path": "45"
    },
    "837": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP4",
      "path": "45"
    },
    "844": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "GT",
      "path": "45"
    },
    "845": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "OR",
      "path": "45"
    },
    "846": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "847": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x357"
    },
    "850": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "851": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "853": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "DUP1",
      "path": "45"
    },
    "854": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "REVERT",
      "path": "45"
    },
    "855": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "856": {
      "op": "POP"
    },
    "857": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "858": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5BF"
    },
    "865": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "i",
      "offset": [
        570,
        1008
      ],
      "op": "JUMP",
      "path": "45"
    },
    "866": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "867": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A2"
    },
    "870": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "872": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "22"
    },
    "873": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "874": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "SUB",
      "path": "22"
    },
    "875": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "877": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP2",
      "path": "22"
    },
    "878": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "LT",
      "path": "22"
    },
    "879": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "880": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x378"
    },
    "883": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "884": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "886": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "22"
    },
    "887": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "REVERT",
      "path": "22"
    },
    "888": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "op": "SUB"
    },
    "899": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "AND",
      "path": "22"
    },
    "900": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7E2"
    },
    "903": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "904": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "905": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x275"
    },
    "908": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "910": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "48"
    },
    "911": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "912": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SUB",
      "path": "48"
    },
    "913": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xA0"
    },
    "915": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP2",
      "path": "48"
    },
    "916": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "LT",
      "path": "48"
    },
    "917": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "918": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x39E"
    },
    "921": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "922": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "924": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "48"
    },
    "925": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "REVERT",
      "path": "48"
    },
    "926": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "933": {
      "op": "SHL"
    },
    "934": {
      "op": "SUB"
    },
    "935": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP3",
      "path": "48"
    },
    "936": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "937": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP2",
      "path": "48"
    },
    "938": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "AND",
      "path": "48"
    },
    "939": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "940": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "942": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP2",
      "path": "48"
    },
    "943": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "944": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "945": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "946": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "947": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "AND",
      "path": "48"
    },
    "948": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "949": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "951": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP3",
      "path": "48"
    },
    "952": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "953": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "954": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "955": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x60"
    },
    "957": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP2",
      "path": "48"
    },
    "958": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "959": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "960": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "961": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP2",
      "path": "48"
    },
    "962": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "963": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "964": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xA0"
    },
    "966": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP2",
      "path": "48"
    },
    "967": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "968": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x80"
    },
    "970": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP3",
      "path": "48"
    },
    "971": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "972": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP2",
      "path": "48"
    },
    "979": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "GT",
      "path": "48"
    },
    "980": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "981": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x3DD"
    },
    "984": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "985": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "987": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "48"
    },
    "988": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "REVERT",
      "path": "48"
    },
    "989": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "990": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP3",
      "path": "48"
    },
    "991": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "992": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP4",
      "path": "48"
    },
    "993": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "995": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP3",
      "path": "48"
    },
    "996": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "997": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "GT",
      "path": "48"
    },
    "998": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "999": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x3EF"
    },
    "1002": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "1003": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "1005": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1006": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1007": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1008": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1009": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "1010": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1011": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1013": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "1014": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1015": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1016": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "1018": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1019": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "MUL",
      "path": "48"
    },
    "1020": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1021": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ADD",
      "path": "48"
    },
    "1022": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "GT",
      "path": "48"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1029": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "GT",
      "path": "48"
    },
    "1030": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "OR",
      "path": "48"
    },
    "1031": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "1032": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x410"
    },
    "1035": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "1036": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "1038": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1039": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1040": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1041": {
      "op": "POP"
    },
    "1042": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1043": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x88E"
    },
    "1050": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "i",
      "offset": [
        259,
        498
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1051": {
      "offset": [
        545,
        605
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1052": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xE0"
    },
    "1055": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1057": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1058": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "1059": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SUB",
      "path": "43"
    },
    "1060": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1062": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1063": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "LT",
      "path": "43"
    },
    "1064": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1065": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x431"
    },
    "1068": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1069": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1071": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1072": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "REVERT",
      "path": "43"
    },
    "1073": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "offset": [
        545,
        605
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1084": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "CALLDATALOAD",
      "path": "43"
    },
    "1085": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1086": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "AND",
      "path": "43"
    },
    "1087": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1088": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1090": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "ADD",
      "path": "43"
    },
    "1091": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "CALLDATALOAD",
      "path": "43"
    },
    "1092": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "AND",
      "path": "43"
    },
    "1093": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x8A0"
    },
    "1096": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "i",
      "offset": [
        545,
        605
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1097": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1104": {
      "op": "SHL"
    },
    "1105": {
      "op": "SUB"
    },
    "1106": {
      "op": "NOT"
    },
    "1107": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "3",
      "statement": 0
    },
    "1108": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1050,
        1054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1110": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1111": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1112": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1113": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1115": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1116": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1117": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1118": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1120": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1121": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1122": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1123": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1125": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "3"
    },
    "1126": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1127": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1128": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1129": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x42"
    },
    "1131": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1132": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1136": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1137": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DIV",
      "path": "22"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "22"
    },
    "1147": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1148": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1149": {
      "offset": [
        168,
        219
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1150": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x84"
    },
    "1152": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1154": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1155": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1157": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1158": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1159": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1160": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1162": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1163": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "1164": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1165": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "1167": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "AND",
      "path": "45"
    },
    "1168": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        168,
        219
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1169": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        168,
        219
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1170": {
      "offset": [
        509,
        540
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1171": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        509,
        540
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0x0"
    },
    "1204": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        509,
        540
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1205": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        509,
        540
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1206": {
      "offset": [
        478,
        505
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1207": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        478,
        505
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0x0"
    },
    "1240": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        478,
        505
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1241": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        478,
        505
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1242": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1243": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP9",
      "path": "48"
    },
    "1252": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "SWAP8",
      "path": "48"
    },
    "1253": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1254": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1255": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1256": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1257": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1258": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1259": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1260": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        502,
        775
      ],
      "op": "POP",
      "path": "48"
    },
    "1261": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "o",
      "offset": [
        502,
        775
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1262": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1263": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        373,
        403
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x43"
    },
    "1265": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        373,
        403
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "op": "SUB"
    },
    "1274": {
      "offset": [
        373,
        403
      ],
      "op": "AND",
      "path": "22"
    },
    "1275": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "offset": [
        373,
        403
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1276": {
      "fn": "ERC1155NaiveReceiver.onERC1155BatchReceived",
      "jump": "o",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1277": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1278": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0x43"
    },
    "1280": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1287": {
      "op": "SHL"
    },
    "1288": {
      "op": "SUB"
    },
    "1289": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "AND",
      "path": "22"
    },
    "1290": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1293
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1291": {
      "branch": 28,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1312
      ],
      "op": "EQ",
      "path": "22"
    },
    "1292": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x55C"
    },
    "1295": {
      "branch": 28,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1296": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1298": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1299": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1308": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1309": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1311": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1313": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1314": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1315": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1316": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x18"
    },
    "1318": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1320": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1321": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1322": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1323": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000"
    },
    "1356": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1358": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1359": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1360": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1361": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1362": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1363": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1364": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1365": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1366": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SUB",
      "path": "22"
    },
    "1367": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1369": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1370": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1371": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1372": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1373": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1362
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 2,
      "value": "0x43"
    },
    "1375": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1376": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "op": "SUB"
    },
    "1385": {
      "op": "NOT"
    },
    "1386": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "AND",
      "path": "22"
    },
    "1387": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1388": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1389": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1389
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 3,
      "value": "0x42"
    },
    "1391": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1392": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1393": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "op": "SUB"
    },
    "1403": {
      "op": "NOT"
    },
    "1404": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "AND",
      "path": "22"
    },
    "1405": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1392,
        1402
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1406": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1410": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1411": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "MUL",
      "path": "22"
    },
    "1412": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1413": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1414": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1415": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "OR",
      "path": "22"
    },
    "1416": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1417": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1418": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1419": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 4,
      "value": "0x40"
    },
    "1421": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1422": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1423": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1424": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1425": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1426": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1427": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F"
    },
    "1460": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1461": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1463": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1464": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1465": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1466": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SUB",
      "path": "22"
    },
    "1467": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "ADD",
      "path": "22"
    },
    "1468": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1469": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "LOG1",
      "path": "22"
    },
    "1470": {
      "fn": "Governable.acceptGovernor",
      "jump": "o",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1471": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1472": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x42"
    },
    "1474": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1475": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1479": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1480": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1487": {
      "op": "SHL"
    },
    "1488": {
      "op": "SUB"
    },
    "1489": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "1490": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1491": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "1492": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x617"
    },
    "1495": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1496": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1498": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1499": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1506": {
      "op": "SHL"
    },
    "1507": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1508": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1509": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1511": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1513": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1514": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1515": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1516": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "1518": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1520": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1521": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1522": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1523": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1545": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1546": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1547": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1548": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1549": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1550": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1551": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1552": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1553": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "SUB",
      "path": "22"
    },
    "1554": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1556": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1557": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1558": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1559": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1560": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        696,
        730
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 5
    },
    "1561": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        696,
        730
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1562": {
      "branch": 21,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        696,
        730
      ],
      "op": "EQ",
      "path": "45"
    },
    "1563": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x655"
    },
    "1566": {
      "branch": 21,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1567": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1569": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1578": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1579": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1581": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "ADD",
      "path": "45"
    },
    "1582": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1583": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1584": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1586": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "ADD",
      "path": "45"
    },
    "1587": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1588": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1589": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "SUB",
      "path": "45"
    },
    "1590": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1591": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1592": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x25"
    },
    "1594": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1595": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1596": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1598": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "ADD",
      "path": "45"
    },
    "1599": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1600": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCCF"
    },
    "1603": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x25"
    },
    "1605": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1606": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "1607": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1609": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "ADD",
      "path": "45"
    },
    "1610": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1611": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "POP",
      "path": "45"
    },
    "1612": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "POP",
      "path": "45"
    },
    "1613": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1615": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1616": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1617": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1618": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "SUB",
      "path": "45"
    },
    "1619": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1620": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1621": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        688,
        772
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1622": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        783,
        791
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1624": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1625": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        797,
        818
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1626": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        797,
        818
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1627": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        797,
        818
      ],
      "op": "LT",
      "path": "45"
    },
    "1628": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1629": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7DB"
    },
    "1632": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1633": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        847
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1634": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        847
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1635": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        848,
        851
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1636": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1637": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1638": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "LT",
      "path": "45"
    },
    "1639": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x66C"
    },
    "1642": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1643": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "INVALID",
      "path": "45"
    },
    "1644": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1645": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1646": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "POP",
      "path": "45"
    },
    "1647": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1649": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "MUL",
      "path": "45"
    },
    "1650": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "ADD",
      "path": "45"
    },
    "1651": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1652": {
      "branch": 22,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        839,
        852
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1653": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        835,
        940
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x77D"
    },
    "1656": {
      "branch": 22,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        835,
        940
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1657": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        876
      ],
      "op": "PUSH32",
      "path": "45",
      "statement": 6,
      "value": "0x0"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1696": {
      "op": "SHL"
    },
    "1697": {
      "op": "SUB"
    },
    "1698": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        884
      ],
      "op": "AND",
      "path": "45"
    },
    "1699": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        884
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xE660CC08"
    },
    "1704": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        893
      ],
      "op": "DUP7",
      "path": "45"
    },
    "1705": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        893
      ],
      "op": "DUP7",
      "path": "45"
    },
    "1706": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        894,
        897
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1707": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1708": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1709": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "LT",
      "path": "45"
    },
    "1710": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6B3"
    },
    "1713": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1714": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "INVALID",
      "path": "45"
    },
    "1715": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1716": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1717": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "POP",
      "path": "45"
    },
    "1718": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1720": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "MUL",
      "path": "45"
    },
    "1721": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "ADD",
      "path": "45"
    },
    "1722": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "op": "SUB"
    },
    "1731": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        885,
        898
      ],
      "op": "AND",
      "path": "45"
    },
    "1732": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1734": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1735": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1736": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "1741": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "AND",
      "path": "45"
    },
    "1742": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "1744": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SHL",
      "path": "45"
    },
    "1745": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1746": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1747": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1749": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ADD",
      "path": "45"
    },
    "1750": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1751": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "AND",
      "path": "45"
    },
    "1761": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1762": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1763": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1765": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ADD",
      "path": "45"
    },
    "1766": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1767": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "45"
    },
    "1768": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "45"
    },
    "1769": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1771": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1773": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1774": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1775": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1776": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "SUB",
      "path": "45"
    },
    "1777": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1778": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP7",
      "path": "45"
    },
    "1779": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1780": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "EXTCODESIZE",
      "path": "45"
    },
    "1781": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1782": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1783": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1784": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x700"
    },
    "1787": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1788": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1790": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1791": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1792": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1793": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "45"
    },
    "1794": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "GAS",
      "path": "45"
    },
    "1795": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "1796": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1797": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1798": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1799": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x714"
    },
    "1802": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1803": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1804": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1806": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1807": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "1808": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1809": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1811": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1812": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1813": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "45"
    },
    "1814": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "45"
    },
    "1815": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "45"
    },
    "1816": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "POP",
      "path": "45"
    },
    "1817": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1819": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1820": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1821": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1823": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1824": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "LT",
      "path": "45"
    },
    "1825": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1826": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x72A"
    },
    "1829": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1830": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1832": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1833": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1834": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "branch": 23,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        872,
        899
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1837": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x77D"
    },
    "1840": {
      "branch": 23,
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1841": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1843": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1844": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1853": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1854": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1856": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1858": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1859": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "ADD",
      "path": "45"
    },
    "1860": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1861": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1B"
    },
    "1863": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "1865": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1866": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "ADD",
      "path": "45"
    },
    "1867": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1868": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x6F7261636C65206E6F7420737570706F7274206C7020746F6B656E0000000000"
    },
    "1901": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x44"
    },
    "1903": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1904": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "ADD",
      "path": "45"
    },
    "1905": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1906": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1907": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1908": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1909": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1910": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1911": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "SUB",
      "path": "45"
    },
    "1912": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x64"
    },
    "1914": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "ADD",
      "path": "45"
    },
    "1915": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1916": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1917": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        864,
        931
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1918": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        992
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 7
    },
    "1919": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        992
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1920": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        993,
        996
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1921": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1922": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1923": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "LT",
      "path": "45"
    },
    "1924": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x789"
    },
    "1927": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1928": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "INVALID",
      "path": "45"
    },
    "1929": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1930": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1931": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "POP",
      "path": "45"
    },
    "1932": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1934": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "MUL",
      "path": "45"
    },
    "1935": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "ADD",
      "path": "45"
    },
    "1936": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1937": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1938": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        984,
        997
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1939": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        966
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x84"
    },
    "1941": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1943": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        975
      ],
      "op": "DUP8",
      "path": "45"
    },
    "1944": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        975
      ],
      "op": "DUP8",
      "path": "45"
    },
    "1945": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        976,
        979
      ],
      "op": "DUP6",
      "path": "45"
    },
    "1946": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1947": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1948": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "LT",
      "path": "45"
    },
    "1949": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7A2"
    },
    "1952": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1953": {
      "dev": "Index out of range",
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "INVALID",
      "path": "45"
    },
    "1954": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1955": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1957": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1958": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1959": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "MUL",
      "path": "45"
    },
    "1960": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1961": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1962": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1963": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "ADD",
      "path": "45"
    },
    "1964": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        967,
        980
      ],
      "op": "AND",
      "path": "45"
    },
    "1974": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1975": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1976": {
      "op": "POP"
    },
    "1977": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1978": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "ADD",
      "path": "45"
    },
    "1979": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1980": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1981": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1982": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1983": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1985": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "ADD",
      "path": "45"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1988": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        981
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "1989": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1990": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1993": {
      "op": "NOT"
    },
    "1994": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "AND",
      "path": "45"
    },
    "1995": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1996": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1997": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1998": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1999": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2000": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2001": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "OR",
      "path": "45"
    },
    "2002": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2003": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        947,
        997
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        820,
        825
      ],
      "op": "ADD",
      "path": "45",
      "statement": 8
    },
    "2007": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x658"
    },
    "2010": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2011": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2012": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        778,
        1004
      ],
      "op": "POP",
      "path": "45"
    },
    "2013": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "45"
    },
    "2014": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "45"
    },
    "2015": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "45"
    },
    "2016": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "offset": [
        570,
        1008
      ],
      "op": "POP",
      "path": "45"
    },
    "2017": {
      "fn": "WhitelistSpell.setWhitelistLPTokens",
      "jump": "o",
      "offset": [
        570,
        1008
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2018": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2019": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x42"
    },
    "2021": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2022": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "2026": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2027": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "op": "SUB"
    },
    "2036": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "2037": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2038": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "2039": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x83A"
    },
    "2042": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2043": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2045": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2046": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2053": {
      "op": "SHL"
    },
    "2054": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2055": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2056": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2058": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2060": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2061": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "2062": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2063": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "2065": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2067": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2068": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "2069": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2070": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2089": {
      "op": "SHL"
    },
    "2090": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2092": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2093": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "2094": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2095": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2096": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2097": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2098": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2099": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2100": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SUB",
      "path": "22"
    },
    "2101": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2103": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "2104": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2105": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2106": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2107": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1073
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 9,
      "value": "0x43"
    },
    "2109": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2110": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2117": {
      "op": "SHL"
    },
    "2118": {
      "op": "SUB"
    },
    "2119": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2120": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2127": {
      "op": "SHL"
    },
    "2128": {
      "op": "SUB"
    },
    "2129": {
      "op": "NOT"
    },
    "2130": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2131": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2132": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "2133": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2134": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "OR",
      "path": "22"
    },
    "2135": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2136": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2137": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2138": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 10,
      "value": "0x40"
    },
    "2140": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2141": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2142": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2143": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2144": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2145": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2146": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60"
    },
    "2179": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2180": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2181": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2182": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SUB",
      "path": "22"
    },
    "2183": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2185": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "ADD",
      "path": "22"
    },
    "2186": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2187": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "LOG1",
      "path": "22"
    },
    "2188": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "POP",
      "path": "22"
    },
    "2189": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2190": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2191": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP7",
      "path": "48"
    },
    "2200": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "SWAP6",
      "path": "48"
    },
    "2201": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "48"
    },
    "2202": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "48"
    },
    "2203": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "48"
    },
    "2204": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "48"
    },
    "2205": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "48"
    },
    "2206": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        259,
        498
      ],
      "op": "POP",
      "path": "48"
    },
    "2207": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "o",
      "offset": [
        259,
        498
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2208": {
      "offset": [
        545,
        605
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2209": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x41"
    },
    "2211": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "2213": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2214": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP2",
      "path": "43"
    },
    "2215": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "2216": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "2218": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "2219": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP4",
      "path": "43"
    },
    "2220": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "2221": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "2223": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2224": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP5",
      "path": "43"
    },
    "2225": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "2226": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2227": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "2228": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "2229": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2230": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP3",
      "path": "43"
    },
    "2231": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "2232": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2233": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "2234": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "2235": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0xFF"
    },
    "2237": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "AND",
      "path": "43"
    },
    "2238": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "offset": [
        545,
        605
      ],
      "op": "DUP2",
      "path": "43"
    },
    "2239": {
      "fn": "ERC1155NaiveReceiver.onERC1155Received",
      "jump": "o",
      "offset": [
        545,
        605
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2240": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2241": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1713,
        1723
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 11
    },
    "2242": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1713,
        1723
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2243": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1713,
        1723
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2244": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1712,
        1774
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x946"
    },
    "2247": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1712,
        1774
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2248": {
      "op": "POP"
    },
    "2249": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2251": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2252": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2253": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2262": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2263": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1753,
        1757
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "2264": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2266": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2267": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "15"
    },
    "2268": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "op": "SUB"
    },
    "2277": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2278": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2279": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "AND",
      "path": "15"
    },
    "2280": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2282": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2283": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "15"
    },
    "2284": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2285": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2286": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2287": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2288": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2289": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "AND",
      "path": "15"
    },
    "2290": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2291": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDD62ED3E"
    },
    "2296": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2297": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2299": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2300": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2301": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "15"
    },
    "2302": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2303": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2305": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2306": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2307": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2308": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2309": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2310": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2311": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "SUB",
      "path": "15"
    },
    "2312": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ADD",
      "path": "15"
    },
    "2313": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2314": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1744
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2315": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2316": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2317": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2318": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2319": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2320": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x918"
    },
    "2323": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2324": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2326": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2327": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2328": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2329": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "15"
    },
    "2330": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "GAS",
      "path": "15"
    },
    "2331": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "2332": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2333": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2334": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2335": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x92C"
    },
    "2338": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2339": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2340": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2342": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2343": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "2344": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2345": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2347": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2348": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2349": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "15"
    },
    "2350": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "15"
    },
    "2351": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "15"
    },
    "2352": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "POP",
      "path": "15"
    },
    "2353": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2355": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2356": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2357": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2359": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2360": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "LT",
      "path": "15"
    },
    "2361": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2362": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x942"
    },
    "2365": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2366": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2368": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2369": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2370": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1768
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2373": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1729,
        1773
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2374": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1712,
        1774
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2375": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x981"
    },
    "2378": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2379": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2381": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2382": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2388": {
      "op": "SHL"
    },
    "2389": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2390": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2391": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2393": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "ADD",
      "path": "15"
    },
    "2394": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2395": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2396": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2398": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "ADD",
      "path": "15"
    },
    "2399": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2400": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2401": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "SUB",
      "path": "15"
    },
    "2402": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2403": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2404": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x36"
    },
    "2406": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2407": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2408": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2410": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "ADD",
      "path": "15"
    },
    "2411": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2412": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD1E"
    },
    "2415": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x36"
    },
    "2417": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2418": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "2419": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2421": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "ADD",
      "path": "15"
    },
    "2422": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2423": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "POP",
      "path": "15"
    },
    "2424": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "POP",
      "path": "15"
    },
    "2425": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2427": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2428": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2429": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2430": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "SUB",
      "path": "15"
    },
    "2431": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2432": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2433": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1704,
        1854
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2434": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 12,
      "value": "0x40"
    },
    "2436": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2437": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "op": "SUB"
    },
    "2446": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2447": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "AND",
      "path": "15"
    },
    "2448": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2450": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2451": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "15"
    },
    "2452": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2453": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2455": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2456": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2457": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "15"
    },
    "2458": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2459": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2460": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2461": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2462": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2463": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2464": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2465": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SUB",
      "path": "15"
    },
    "2466": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2467": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2468": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "15"
    },
    "2469": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2470": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2471": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2473": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2474": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2475": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "15"
    },
    "2476": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2477": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2478": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2479": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2481": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2482": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "ADD",
      "path": "15"
    },
    "2483": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2484": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "op": "SUB"
    },
    "2493": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "AND",
      "path": "15"
    },
    "2494": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "OR",
      "path": "15"
    },
    "2503": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2504": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1891,
        1953
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2505": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1864,
        1954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D3"
    },
    "2508": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1864,
        1954
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2509": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1884,
        1889
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2510": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1884,
        1889
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2511": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1864,
        1883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9F7"
    },
    "2514": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1864,
        1954
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2515": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1864,
        1954
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2516": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "POP",
      "path": "15"
    },
    "2517": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "POP",
      "path": "15"
    },
    "2518": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1348,
        1961
      ],
      "op": "POP",
      "path": "15"
    },
    "2519": {
      "fn": "SafeERC20.safeApprove",
      "jump": "o",
      "offset": [
        1348,
        1961
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2520": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2521": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2522": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16",
      "statement": 13
    },
    "2523": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2524": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2525": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2526": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2527": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2529": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 14,
      "value": "0x9ED"
    },
    "2532": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2533": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2534": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2536": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2537": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAA8"
    },
    "2540": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2541": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2542": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2543": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "POP",
      "path": "16"
    },
    "2544": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2545": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2546": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2547": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "16"
    },
    "2548": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "16"
    },
    "2549": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "16"
    },
    "2550": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2554": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA4C"
    },
    "2557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2558": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "15"
    },
    "2565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2569": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "15"
    },
    "2576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "2609": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2610": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2611": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "15"
    },
    "2612": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "15"
    },
    "2622": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9DE"
    },
    "2625": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2626": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2627": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2628": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2629": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2634": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "15"
    },
    "2635": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2636": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2637": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2638": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2639": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2640": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "branch": 29,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2643": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D3"
    },
    "2646": {
      "branch": 29,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2647": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 15
    },
    "2648": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2649": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2651": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "15"
    },
    "2652": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2653": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2654": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2656": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2657": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "LT",
      "path": "15"
    },
    "2658": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2659": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA6B"
    },
    "2662": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2663": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2665": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2666": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2667": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "branch": 30,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2670": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D3"
    },
    "2673": {
      "branch": 30,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2674": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2676": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2683": {
      "op": "SHL"
    },
    "2684": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2685": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2686": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2688": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "2689": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2690": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2691": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2693": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "2694": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2695": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2696": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "15"
    },
    "2697": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2698": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2699": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2A"
    },
    "2701": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2702": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2703": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2705": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "2706": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2707": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCF4"
    },
    "2710": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2A"
    },
    "2712": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2713": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "2714": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2716": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "15"
    },
    "2717": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2718": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "15"
    },
    "2719": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "15"
    },
    "2720": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2722": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2723": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2724": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2725": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "15"
    },
    "2726": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2729": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 16
    },
    "2732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "2733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "16"
    },
    "2734": {
      "branch": 24,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAE9"
    },
    "2738": {
      "branch": 24,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2739": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2753": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "2754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "2759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2760": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "16"
    },
    "2762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x26"
    },
    "2766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2767": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2768": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "2771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2772": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA9"
    },
    "2775": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x26"
    },
    "2777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "2779": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2781": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "16"
    },
    "2782": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2783": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "16"
    },
    "2784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "16"
    },
    "2785": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2787": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2788": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2789": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "16"
    },
    "2791": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2793": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 17,
      "value": "0xAF2"
    },
    "2797": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9D8"
    },
    "2801": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2802": {
      "branch": 25,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB43"
    },
    "2806": {
      "branch": 25,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2809": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2820": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2822": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "2826": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2827": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1D"
    },
    "2829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2832": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "2833": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2834": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2867": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2869": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "2871": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2872": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2876": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "16"
    },
    "2878": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2880": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "16"
    },
    "2881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "op": "SUB"
    },
    "2897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "16"
    },
    "2898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "2911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2912": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "16"
    },
    "2920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB82"
    },
    "2923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2924": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2930": {
      "op": "NOT"
    },
    "2931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "2934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "2940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "2942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB63"
    },
    "2945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "16"
    },
    "2953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "16"
    },
    "2957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "16"
    },
    "2958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "16"
    },
    "2960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "16"
    },
    "2963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "16"
    },
    "2967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "16"
    },
    "2970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "2981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2989": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "16"
    },
    "2992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "16"
    },
    "2996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "16"
    },
    "2997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "2999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "3000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "3001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "16"
    },
    "3007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE4"
    },
    "3010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3014": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "3016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "16"
    },
    "3019": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "3021": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3022": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "3023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "16"
    },
    "3024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "3026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3029": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3030": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "16"
    },
    "3039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3040": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE9"
    },
    "3043": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "3047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "3049": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3050": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "3051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "3053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "16"
    },
    "3055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 18,
      "value": "0xBF9"
    },
    "3058": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC04"
    },
    "3064": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3065": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "16"
    },
    "3067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "3068": {
      "op": "POP"
    },
    "3069": {
      "op": "POP"
    },
    "3070": {
      "op": "POP"
    },
    "3071": {
      "op": "POP"
    },
    "3072": {
      "op": "POP"
    },
    "3073": {
      "op": "POP"
    },
    "3074": {
      "op": "POP"
    },
    "3075": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3076": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3077": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "3079": {
      "branch": 26,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3080": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3081": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC13"
    },
    "3084": {
      "branch": 26,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3085": {
      "op": "POP"
    },
    "3086": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 19
    },
    "3087": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9F0"
    },
    "3090": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3091": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3092": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3093": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3094": {
      "branch": 27,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3095": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC23"
    },
    "3098": {
      "branch": 27,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3099": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3100": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3101": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3102": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3103": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3105": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "16"
    },
    "3106": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3107": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3108": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 20
    },
    "3109": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3111": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3118": {
      "op": "SHL"
    },
    "3119": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3120": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3121": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3123": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3124": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3125": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3126": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3128": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3129": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3130": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3131": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "3132": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3133": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3134": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3135": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3136": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3137": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3138": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3139": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3140": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3142": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3143": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3144": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3145": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3146": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3147": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3148": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3150": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3151": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3152": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3153": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3154": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3155": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3157": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3158": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3159": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3160": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "LT",
      "path": "16"
    },
    "3161": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3162": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC6D"
    },
    "3165": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3166": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3167": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3168": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3169": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3170": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3171": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3172": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3173": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3174": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3176": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3177": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC55"
    },
    "3180": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3181": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3182": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3183": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3184": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3185": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3186": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3187": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3188": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3189": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3190": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3191": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3192": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3194": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "16"
    },
    "3195": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3196": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3197": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC9A"
    },
    "3200": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3201": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3202": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3203": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "3204": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3205": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3206": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3208": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3209": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3211": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "3212": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "3215": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "EXP",
      "path": "16"
    },
    "3216": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "3217": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "NOT",
      "path": "16"
    },
    "3218": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "16"
    },
    "3219": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3220": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3221": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3223": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "16"
    },
    "3224": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3225": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3226": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3227": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3228": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3229": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3230": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3231": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "16"
    },
    "3232": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3234": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3235": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3236": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3237": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "16"
    },
    "3238": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3239": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "REVERT",
      "path": "16"
    }
  },
  "sha1": "cfbc026407d9b925545b093f9d024f29b2415ae6",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport './BasicSpell.sol';\nimport '../Governable.sol';\n\ncontract WhitelistSpell is BasicSpell, Governable {\n  mapping(address => bool) public whitelistedLpTokens; // mapping from lp token to whitelist status\n\n  constructor(\n    IBank _bank,\n    address _werc20,\n    address _celo\n  ) public BasicSpell(_bank, _werc20, _celo) {\n    __Governable__init();\n  }\n\n  /// @dev Set whitelist LP token statuses for spell\n  /// @param lpTokens LP tokens to set whitelist statuses\n  /// @param statuses Whitelist statuses\n  function setWhitelistLPTokens(address[] calldata lpTokens, bool[] calldata statuses)\n    external\n    onlyGov\n  {\n    require(lpTokens.length == statuses.length, 'lpTokens & statuses length mismatched');\n    for (uint idx = 0; idx < lpTokens.length; idx++) {\n      if (statuses[idx]) {\n        require(bank.support(lpTokens[idx]), 'oracle not support lp token');\n      }\n      whitelistedLpTokens[lpTokens[idx]] = statuses[idx];\n    }\n  }\n}\n",
  "sourceMap": "114:896:45:-:0;;;269:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:145:45;;;;;;;;;;;;;;;;;768:40:3;-1:-1:-1;;;768:18:3;:40::i;:::-;282:170:9;-1:-1:-1;;;282:18:9;:170::i;:::-;-1:-1:-1;;;;;;761:12:43;;;;;;;;779:25;;;;;;810:36;824:5;768;810:13;:36::i;:::-;852:56;;;-1:-1:-1;;;852:56:43;;-1:-1:-1;;;;;852:56:43;;;;;;;903:4;852:56;;;;;;:34;;;;;;:56;;;;;-1:-1:-1;;852:56:43;;;;;;;;-1:-1:-1;852:34:43;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:238;;;389:20:45::1;:18;;;:20;;:::i;:::-;269:145:::0;;;114:896;;1507:198:3;-1:-1:-1;;;;;;1590:25:3;;;;;1582:66;;;;;-1:-1:-1;;;1582:66:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:33:3;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1658:40:3;1694:4;1658:40;;;1507:198::o;1178:203:43:-;-1:-1:-1;;;;;1253:15:43;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;1248:129;;1287:44;1313:7;-1:-1:-1;;1294:5:43;-1:-1:-1;;;;;1287:25:43;;;;;;;:44;;;;;:::i;:::-;-1:-1:-1;;;;;1339:15:43;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;:31;;-1:-1:-1;;1339:31:43;1366:4;1339:31;;;1248:129;1178:203;;:::o;673:151:22:-;1501:13:7;;;;;;;;:33;;-1:-1:-1;1518:16:7;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:7;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:13;;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:7;;;;;1727:19;1709:4;1727:19;;;1659:98;730:8:22::1;:21:::0;;-1:-1:-1;;;;;;730:21:22::1;741:10;730:21:::0;;::::1;::::0;;;::::1;::::0;;;757:15:::1;:28:::0;;-1:-1:-1;;;;;;757:28:22::1;::::0;;796:23:::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;::::1;1783:14:7::0;1779:66;;;1813:13;:21;;-1:-1:-1;;1813:21:7;;;1779:66;673:151:22;:::o;1348:613:15:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:15;;;-1:-1:-1;;;1729:39:15;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:15;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:15;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:15;;;-1:-1:-1;;;1891:62:15;;;;1864:90;;1884:5;;1864:19;:90;:::i;:::-;1348:613;;;:::o;1941:112:7:-;1989:4;2013:33;2040:4;2013:18;;;;;:33;;:::i;:::-;2012:34;2005:41;;1941:112;:::o;2967:751:15:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:15;;;;;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:15;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:15;3616:85;;;;-1:-1:-1;;;3616:85:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:413:16;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:16;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4980:75:16;;-1:-1:-1;4980:75:16;-1:-1:-1;5072:52:16;4980:75;;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:16:o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:16;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;114:896:45;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/spell/WhitelistSpell.sol",
  "type": "contract"
}