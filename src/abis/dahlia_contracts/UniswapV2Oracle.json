{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBaseOracle",
          "name": "_base",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "internalType": "contract IBaseOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "name": "getCELOPx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "39": "contracts/oracle/UniswapV2Oracle.sol",
    "41": "contracts/oracle/UsingBaseOracle.sol",
    "50": "contracts/utils/HomoraMath.sol",
    "54": "interfaces/IBaseOracle.sol",
    "6": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "64": "interfaces/IUniswapV2Pair.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle/UniswapV2Oracle.sol",
    "exportedSymbols": {
      "UniswapV2Oracle": [
        10629
      ]
    },
    "id": 10630,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10506,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:39"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 10507,
        "nodeType": "ImportDirective",
        "scope": 10630,
        "sourceUnit": 14519,
        "src": "58:79:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/oracle/UsingBaseOracle.sol",
        "file": "./UsingBaseOracle.sol",
        "id": 10508,
        "nodeType": "ImportDirective",
        "scope": 10630,
        "sourceUnit": 10753,
        "src": "139:31:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/HomoraMath.sol",
        "file": "../utils/HomoraMath.sol",
        "id": 10509,
        "nodeType": "ImportDirective",
        "scope": 10630,
        "sourceUnit": 13601,
        "src": "171:33:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IBaseOracle.sol",
        "file": "../../interfaces/IBaseOracle.sol",
        "id": 10510,
        "nodeType": "ImportDirective",
        "scope": 10630,
        "sourceUnit": 16445,
        "src": "205:42:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Pair.sol",
        "file": "../../interfaces/IUniswapV2Pair.sol",
        "id": 10511,
        "nodeType": "ImportDirective",
        "scope": 10630,
        "sourceUnit": 15662,
        "src": "248:45:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10512,
              "name": "UsingBaseOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10752,
              "src": "323:15:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingBaseOracle_$10752",
                "typeString": "contract UsingBaseOracle"
              }
            },
            "id": 10513,
            "nodeType": "InheritanceSpecifier",
            "src": "323:15:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10514,
              "name": "IBaseOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16444,
              "src": "340:11:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                "typeString": "contract IBaseOracle"
              }
            },
            "id": 10515,
            "nodeType": "InheritanceSpecifier",
            "src": "340:11:39"
          }
        ],
        "contractDependencies": [
          10752,
          16444
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10629,
        "linearizedBaseContracts": [
          10629,
          16444,
          10752
        ],
        "name": "UniswapV2Oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10518,
            "libraryName": {
              "contractScope": null,
              "id": 10516,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14518,
              "src": "362:8:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$14518",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "356:24:39",
            "typeName": {
              "id": 10517,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "375:4:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 10521,
            "libraryName": {
              "contractScope": null,
              "id": 10519,
              "name": "HomoraMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13600,
              "src": "389:10:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HomoraMath_$13600",
                "typeString": "library HomoraMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "383:26:39",
            "typeName": {
              "id": 10520,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "404:4:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 10529,
              "nodeType": "Block",
              "src": "474:2:39",
              "statements": []
            },
            "documentation": null,
            "id": 10530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10526,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10523,
                    "src": "467:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                      "typeString": "contract IBaseOracle"
                    }
                  }
                ],
                "id": 10527,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10525,
                  "name": "UsingBaseOracle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "451:15:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UsingBaseOracle_$10752_$",
                    "typeString": "type(contract UsingBaseOracle)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "451:22:39"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10523,
                  "mutability": "mutable",
                  "name": "_base",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10530,
                  "src": "425:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                    "typeString": "contract IBaseOracle"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10522,
                    "name": "IBaseOracle",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16444,
                    "src": "425:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                      "typeString": "contract IBaseOracle"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "424:19:39"
            },
            "returnParameters": {
              "id": 10528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:0:39"
            },
            "scope": 10629,
            "src": "413:63:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16443
            ],
            "body": {
              "id": 10627,
              "nodeType": "Block",
              "src": "692:730:39",
              "statements": [
                {
                  "assignments": [
                    10540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10540,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "698:14:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10539,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "698:7:39",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10546,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10542,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10533,
                            "src": "730:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10541,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15661,
                          "src": "715:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$15661_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 10543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "715:20:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$15661",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 10544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15589,
                      "src": "715:27:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 10545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "715:29:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "698:46:39"
                },
                {
                  "assignments": [
                    10548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10548,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "750:14:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10547,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "750:7:39",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10554,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10550,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10533,
                            "src": "782:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10549,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15661,
                          "src": "767:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$15661_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 10551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "767:20:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$15661",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 10552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15594,
                      "src": "767:27:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 10553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:29:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "750:46:39"
                },
                {
                  "assignments": [
                    10556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10556,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "802:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10555,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "802:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10562,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10558,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10533,
                            "src": "836:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10557,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15661,
                          "src": "821:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$15661_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 10559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "821:20:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$15661",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 10560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15457,
                      "src": "821:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 10561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:34:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "802:53:39"
                },
                {
                  "assignments": [
                    10564,
                    10566,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10564,
                      "mutability": "mutable",
                      "name": "r0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "862:7:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10563,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "862:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10566,
                      "mutability": "mutable",
                      "name": "r1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "871:7:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10565,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "871:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 10572,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10568,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10533,
                            "src": "899:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10567,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15661,
                          "src": "884:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$15661_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 10569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "884:20:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$15661",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 10570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15603,
                      "src": "884:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 10571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "884:34:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "861:57:39"
                },
                {
                  "assignments": [
                    10574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10574,
                      "mutability": "mutable",
                      "name": "sqrtK",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "924:10:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10573,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "924:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10585,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10583,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10556,
                        "src": "970:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10579,
                                "name": "r1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10566,
                                "src": "960:2:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10577,
                                "name": "r0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10564,
                                "src": "953:2:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14401,
                              "src": "953:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "953:10:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10575,
                            "name": "HomoraMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13600,
                            "src": "937:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_HomoraMath_$13600_$",
                              "typeString": "type(library HomoraMath)"
                            }
                          },
                          "id": 10576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13599,
                          "src": "937:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "937:27:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fdiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13399,
                      "src": "937:32:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "937:45:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "924:58:39"
                },
                {
                  "assignments": [
                    10587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10587,
                      "mutability": "mutable",
                      "name": "px0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "1001:8:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10586,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1001:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10592,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10590,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10540,
                        "src": "1027:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10588,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10741,
                        "src": "1012:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                          "typeString": "contract IBaseOracle"
                        }
                      },
                      "id": 10589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCELOPx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "1012:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:22:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1001:33:39"
                },
                {
                  "assignments": [
                    10594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10594,
                      "mutability": "mutable",
                      "name": "px1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10627,
                      "src": "1053:8:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10593,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1053:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10599,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10597,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10548,
                        "src": "1079:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10595,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10741,
                        "src": "1064:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                          "typeString": "contract IBaseOracle"
                        }
                      },
                      "id": 10596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCELOPx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "1064:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:22:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1053:33:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_72057594037927936_by_1",
                          "typeString": "int_const 72057594037927936"
                        },
                        "id": 10624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 10622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1411:1:39",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3536",
                          "id": 10623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1414:2:39",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_56_by_1",
                            "typeString": "int_const 56"
                          },
                          "value": "56"
                        },
                        "src": "1411:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_72057594037927936_by_1",
                          "typeString": "int_const 72057594037927936"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_72057594037927936_by_1",
                          "typeString": "int_const 72057594037927936"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10618,
                                "name": "px1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10594,
                                "src": "1401:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10616,
                                "name": "HomoraMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13600,
                                "src": "1385:10:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_HomoraMath_$13600_$",
                                  "typeString": "type(library HomoraMath)"
                                }
                              },
                              "id": 10617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13599,
                              "src": "1385:15:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1385:20:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_rational_72057594037927936_by_1",
                                  "typeString": "int_const 72057594037927936"
                                },
                                "id": 10613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 10611,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1374:1:39",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3536",
                                  "id": 10612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1377:2:39",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_56_by_1",
                                    "typeString": "int_const 56"
                                  },
                                  "value": "56"
                                },
                                "src": "1374:5:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_72057594037927936_by_1",
                                  "typeString": "int_const 72057594037927936"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_72057594037927936_by_1",
                                  "typeString": "int_const 72057594037927936"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 10607,
                                        "name": "px0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10587,
                                        "src": "1364:3:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 10605,
                                        "name": "HomoraMath",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13600,
                                        "src": "1348:10:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_HomoraMath_$13600_$",
                                          "typeString": "type(library HomoraMath)"
                                        }
                                      },
                                      "id": 10606,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sqrt",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13599,
                                      "src": "1348:15:39",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 10608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1348:20:39",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 10602,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1341:1:39",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 10600,
                                        "name": "sqrtK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10574,
                                        "src": "1331:5:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 10601,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 14401,
                                      "src": "1331:9:39",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 10603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1331:12:39",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14401,
                                  "src": "1331:16:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1331:38:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14423,
                              "src": "1331:42:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1331:49:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14401,
                          "src": "1331:53:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 10620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1331:75:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14423,
                      "src": "1331:79:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:86:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10538,
                  "id": 10626,
                  "nodeType": "Return",
                  "src": "1324:93:39"
                }
              ]
            },
            "documentation": {
              "id": 10531,
              "nodeType": "StructuredDocumentation",
              "src": "480:138:39",
              "text": "@dev Return the value of the given input as ETH per unit, multiplied by 2**112.\n @param pair The Uniswap pair to check the value."
            },
            "functionSelector": "11e56aff",
            "id": 10628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCELOPx",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10535,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "668:8:39"
            },
            "parameters": {
              "id": 10534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10533,
                  "mutability": "mutable",
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10628,
                  "src": "640:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "639:14:39"
            },
            "returnParameters": {
              "id": 10538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10537,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10628,
                  "src": "686:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10536,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "685:6:39"
            },
            "scope": 10629,
            "src": "621:801:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10630,
        "src": "295:1129:39"
      }
    ],
    "src": "33:1392:39"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516107323803806107328339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b03166106c16100716000398061029a5280610359528061042152506106c16000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806311e56aff1461003b5780635001f3b514610073575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610097565b60408051918252519081900360200190f35b61007b61041f565b604080516001600160a01b039092168252519081900360200190f35b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100d357600080fd5b505afa1580156100e7573d6000803e3d6000fd5b505050506040513d60208110156100fd57600080fd5b50516040805163d21220a760e01b815290519192506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b15801561014557600080fd5b505afa158015610159573d6000803e3d6000fd5b505050506040513d602081101561016f57600080fd5b5051604080516318160ddd60e01b815290519192506000916001600160a01b038716916318160ddd916004808301926020929190829003018186803b1580156101b757600080fd5b505afa1580156101cb573d6000803e3d6000fd5b505050506040513d60208110156101e157600080fd5b505160408051630240bc6b60e21b8152905191925060009182916001600160a01b03891691630902f1ac91600480820192606092909190829003018186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d606081101561025657600080fd5b5080516020909101516dffffffffffffffffffffffffffff918216935016905060006102948461028e6102898686610443565b6104a5565b906105eb565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311e56aff886040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561030557600080fd5b505afa158015610319573d6000803e3d6000fd5b505050506040513d602081101561032f57600080fd5b5051604080516311e56aff60e01b81526001600160a01b03898116600483015291519293506000927f0000000000000000000000000000000000000000000000000000000000000000909216916311e56aff91602480820192602092909190829003018186803b1580156103a257600080fd5b505afa1580156103b6573d6000803e3d6000fd5b505050506040513d60208110156103cc57600080fd5b5051905061040f600160381b6104096103e4846104a5565b610403600160381b6104096103f8896104a5565b6104038b6002610443565b90610443565b9061060b565b985050505050505050505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000826104525750600061049f565b8282028284828161045f57fe5b041461049c5760405162461bcd60e51b815260040180806020018281038252602181526020018061066b6021913960400191505060405180910390fd5b90505b92915050565b6000816104b45750600061041a565b816001600160801b82106104cd5760809190911c9060401b5b6801000000000000000082106104e85760409190911c9060201b5b64010000000082106104ff5760209190911c9060101b5b6201000082106105145760109190911c9060081b5b61010082106105285760089190911c9060041b5b6010821061053b5760049190911c9060021b5b600882106105475760011b5b600181858161055257fe5b048201901c9050600181858161056457fe5b048201901c9050600181858161057657fe5b048201901c9050600181858161058857fe5b048201901c9050600181858161059a57fe5b048201901c905060018185816105ac57fe5b048201901c905060018185816105be57fe5b048201901c905060008185816105d057fe5b0490508082106105e057806105e2565b815b95945050505050565b6000816105fc84600160701b610443565b8161060357fe5b049392505050565b6000808211610661576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161060357fefe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122068fa333a8e63d1168439c0bf57a2307f217b8ee547a0b57bb31e2c129fd9556a64736f6c634300060c0033",
  "bytecodeSha1": "e6ddfb2ad1cbc756261550aefdd52153b584e744",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "UniswapV2Oracle",
  "coverageMap": {
    "branches": {
      "39": {},
      "41": {},
      "50": {
        "HomoraMath.sqrt": {
          "29": [
            814,
            820,
            false
          ],
          "30": [
            874,
            915,
            false
          ],
          "31": [
            968,
            993,
            false
          ],
          "32": [
            1044,
            1061,
            false
          ],
          "33": [
            1112,
            1125,
            false
          ],
          "34": [
            1175,
            1186,
            false
          ],
          "35": [
            1235,
            1245,
            false
          ],
          "36": [
            1294,
            1303,
            false
          ],
          "37": [
            1581,
            1587,
            true
          ]
        }
      },
      "54": {},
      "6": {
        "SafeMath.div": {
          "40": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "38": [
            3619,
            3625,
            false
          ],
          "39": [
            3680,
            3690,
            true
          ]
        }
      },
      "64": {}
    },
    "statements": {
      "39": {
        "UniswapV2Oracle.getCELOPx": {
          "0": [
            1324,
            1417
          ]
        }
      },
      "41": {},
      "50": {
        "HomoraMath.fdiv": {
          "26": [
            480,
            508
          ]
        },
        "HomoraMath.sqrt": {
          "4": [
            822,
            830
          ],
          "5": [
            925,
            935
          ],
          "6": [
            943,
            951
          ],
          "7": [
            1003,
            1012
          ],
          "8": [
            1020,
            1028
          ],
          "9": [
            1071,
            1080
          ],
          "10": [
            1088,
            1096
          ],
          "11": [
            1135,
            1144
          ],
          "12": [
            1152,
            1159
          ],
          "13": [
            1196,
            1204
          ],
          "14": [
            1212,
            1219
          ],
          "15": [
            1255,
            1263
          ],
          "16": [
            1271,
            1278
          ],
          "17": [
            1313,
            1320
          ],
          "18": [
            1333,
            1353
          ],
          "19": [
            1359,
            1379
          ],
          "20": [
            1385,
            1405
          ],
          "21": [
            1411,
            1431
          ],
          "22": [
            1437,
            1457
          ],
          "23": [
            1463,
            1483
          ],
          "24": [
            1489,
            1509
          ],
          "25": [
            1573,
            1597
          ]
        }
      },
      "54": {},
      "6": {
        "SafeMath.div": {
          "27": [
            4294,
            4338
          ],
          "28": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "1": [
            3627,
            3635
          ],
          "2": [
            3672,
            3728
          ],
          "3": [
            3738,
            3746
          ]
        }
      },
      "64": {}
    }
  },
  "dependencies": [
    "HomoraMath",
    "IBaseOracle",
    "IUniswapV2Pair",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "UsingBaseOracle"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806311e56aff1461003b5780635001f3b514610073575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610097565b60408051918252519081900360200190f35b61007b61041f565b604080516001600160a01b039092168252519081900360200190f35b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156100d357600080fd5b505afa1580156100e7573d6000803e3d6000fd5b505050506040513d60208110156100fd57600080fd5b50516040805163d21220a760e01b815290519192506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b15801561014557600080fd5b505afa158015610159573d6000803e3d6000fd5b505050506040513d602081101561016f57600080fd5b5051604080516318160ddd60e01b815290519192506000916001600160a01b038716916318160ddd916004808301926020929190829003018186803b1580156101b757600080fd5b505afa1580156101cb573d6000803e3d6000fd5b505050506040513d60208110156101e157600080fd5b505160408051630240bc6b60e21b8152905191925060009182916001600160a01b03891691630902f1ac91600480820192606092909190829003018186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d606081101561025657600080fd5b5080516020909101516dffffffffffffffffffffffffffff918216935016905060006102948461028e6102898686610443565b6104a5565b906105eb565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311e56aff886040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561030557600080fd5b505afa158015610319573d6000803e3d6000fd5b505050506040513d602081101561032f57600080fd5b5051604080516311e56aff60e01b81526001600160a01b03898116600483015291519293506000927f0000000000000000000000000000000000000000000000000000000000000000909216916311e56aff91602480820192602092909190829003018186803b1580156103a257600080fd5b505afa1580156103b6573d6000803e3d6000fd5b505050506040513d60208110156103cc57600080fd5b5051905061040f600160381b6104096103e4846104a5565b610403600160381b6104096103f8896104a5565b6104038b6002610443565b90610443565b9061060b565b985050505050505050505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000826104525750600061049f565b8282028284828161045f57fe5b041461049c5760405162461bcd60e51b815260040180806020018281038252602181526020018061066b6021913960400191505060405180910390fd5b90505b92915050565b6000816104b45750600061041a565b816001600160801b82106104cd5760809190911c9060401b5b6801000000000000000082106104e85760409190911c9060201b5b64010000000082106104ff5760209190911c9060101b5b6201000082106105145760109190911c9060081b5b61010082106105285760089190911c9060041b5b6010821061053b5760049190911c9060021b5b600882106105475760011b5b600181858161055257fe5b048201901c9050600181858161056457fe5b048201901c9050600181858161057657fe5b048201901c9050600181858161058857fe5b048201901c9050600181858161059a57fe5b048201901c905060018185816105ac57fe5b048201901c905060018185816105be57fe5b048201901c905060008185816105d057fe5b0490508082106105e057806105e2565b815b95945050505050565b6000816105fc84600160701b610443565b8161060357fe5b049392505050565b6000808211610661576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161060357fefe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122068fa333a8e63d1168439c0bf57a2307f217b8ee547a0b57bb31e2c129fd9556a64736f6c634300060c0033",
  "deployedSourceMap": "295:1129:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;621:801;;;;;;;;;;;;;;;;-1:-1:-1;621:801:39;-1:-1:-1;;;;;621:801:39;;:::i;:::-;;;;;;;;;;;;;;;;131:33:41;;;:::i;:::-;;;;-1:-1:-1;;;;;131:33:41;;;;;;;;;;;;;;621:801:39;686:4;698:14;730:4;-1:-1:-1;;;;;715:27:39;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;715:29:39;767;;;-1:-1:-1;;;767:29:39;;;;715;;-1:-1:-1;750:14:39;;-1:-1:-1;;;;;767:27:39;;;;;:29;;;;;715;;767;;;;;;;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;767:29:39;821:34;;;-1:-1:-1;;;821:34:39;;;;767:29;;-1:-1:-1;802:16:39;;-1:-1:-1;;;;;821:32:39;;;;;:34;;;;;767:29;;821:34;;;;;;;:32;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;821:34:39;884;;;-1:-1:-1;;;884:34:39;;;;821;;-1:-1:-1;862:7:39;;;;-1:-1:-1;;;;;884:32:39;;;;;:34;;;;;;;;;;;;;;;:32;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;884:34:39;;;;;;;861:57;;;;;-1:-1:-1;861:57:39;;-1:-1:-1;924:10:39;937:45;970:11;937:27;953:10;861:57;;953:6;:10::i;:::-;937:15;:27::i;:::-;:32;;:45::i;:::-;924:58;;1001:8;1012:4;-1:-1:-1;;;;;1012:14:39;;1027:6;1012:22;;;;;;;;;;;;;-1:-1:-1;;;;;1012:22:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1012:22:39;1064;;;-1:-1:-1;;;1064:22:39;;-1:-1:-1;;;;;1064:22:39;;;;;;;;;1012;;-1:-1:-1;;;1064:4:39;:14;;;;;;:22;;;;;1012;;1064;;;;;;;;:14;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1064:22:39;;-1:-1:-1;1331:86:39;-1:-1:-1;;;1331:75:39;1385:20;1064:22;1385:15;:20::i;:::-;1331:49;-1:-1:-1;;;1331:38:39;1348:20;1364:3;1348:15;:20::i;:::-;1331:12;:5;1341:1;1331:9;:12::i;:::-;:16;;:38::i;:::-;:42;;:49::i;:86::-;1324:93;;;;;;;;;;621:801;;;;:::o;131:33:41:-;;;:::o;3538:215:6:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:6;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;-1:-1:-1;3538:215:6;;;;;:::o;753:849:50:-;798:4;814:6;810:20;;-1:-1:-1;829:1:50;822:8;;810:20;846:1;862;-1:-1:-1;;;874:41:50;;870:88;;932:3;925:10;;;;;949:2;943:8;870:88;974:19;968:2;:25;964:71;;1010:2;1003:9;;;;;1026:2;1020:8;964:71;1050:11;1044:2;:17;1040:63;;1078:2;1071:9;;;;;1094:2;1088:8;1040:63;1118:7;1112:2;:13;1108:58;;1142:2;1135:9;;;;;1158:1;1152:7;1108:58;1181:5;1175:2;:11;1171:55;;1203:1;1196:8;;;;;1218:1;1212:7;1171:55;1241:4;1235:2;:10;1231:54;;1262:1;1255:8;;;;;1277:1;1271:7;1231:54;1300:3;1294:2;:9;1290:37;;1319:1;1313:7;1290:37;1352:1;1346;1342;:5;;;;;;1338:1;:9;1337:16;;1333:20;;1378:1;1372;1368;:5;;;;;;1364:1;:9;1363:16;;1359:20;;1404:1;1398;1394;:5;;;;;;1390:1;:9;1389:16;;1385:20;;1430:1;1424;1420;:5;;;;;;1416:1;:9;1415:16;;1411:20;;1456:1;1450;1446;:5;;;;;;1442:1;:9;1441:16;;1437:20;;1482:1;1476;1472;:5;;;;;;1468:1;:9;1467:16;;1463:20;;1508:1;1502;1498;:5;;;;;;1494:1;:9;1493:16;;1489:20;;1552:7;1566:1;1562;:5;;;;;;1552:15;;1585:2;1581:1;:6;:15;;1594:2;1581:15;;;1590:1;1581:15;1573:24;753:849;-1:-1:-1;;;;;753:849:50:o;411:102::-;468:4;505:3;487:15;:3;-1:-1:-1;;;487:7:50;:15::i;:::-;:21;;;;;;;411:102;-1:-1:-1;;;411:102:50:o;4217:150:6:-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getCELOPx(address)": {
        "details": "Return the value of the given input as ETH per unit, multiplied by 2**112.",
        "params": {
          "pair": "The Uniswap pair to check the value."
        }
      }
    },
    "version": 1
  },
  "offset": [
    295,
    1424
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11E56AFF EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x240BC6B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x902F1AC SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x60 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x240 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH1 0x0 PUSH2 0x294 DUP5 PUSH2 0x28E PUSH2 0x289 DUP7 DUP7 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST SWAP1 PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x11E56AFF DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x319 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x11E56AFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x11E56AFF SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x40F PUSH1 0x1 PUSH1 0x38 SHL PUSH2 0x409 PUSH2 0x3E4 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x1 PUSH1 0x38 SHL PUSH2 0x409 PUSH2 0x3F8 DUP10 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x403 DUP12 PUSH1 0x2 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x60B JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x452 JUMPI POP PUSH1 0x0 PUSH2 0x49F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x45F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x66B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4B4 JUMPI POP PUSH1 0x0 PUSH2 0x41A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x4CD JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 SHL JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x4E8 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 SHL JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x4FF JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 SHL JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x514 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 SHL JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x528 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 SHL JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x53B JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 SHL JUMPDEST PUSH1 0x8 DUP3 LT PUSH2 0x547 JUMPI PUSH1 0x1 SHL JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x552 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x564 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x576 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x588 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x59A JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x5AC JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x5BE JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x0 DUP2 DUP6 DUP2 PUSH2 0x5D0 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 DUP3 LT PUSH2 0x5E0 JUMPI DUP1 PUSH2 0x5E2 JUMP JUMPDEST DUP2 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x5FC DUP5 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x443 JUMP JUMPDEST DUP2 PUSH2 0x603 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x661 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x603 JUMPI INVALID INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 PUSH9 0xFA333A8E63D1168439 0xC0 0xBF JUMPI LOG2 ADDRESS PUSH32 0x217B8EE547A0B57BB31E2C129FD9556A64736F6C634300060C00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        295,
        1424
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "6": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "DUP1",
      "path": "39"
    },
    "7": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "8": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "12": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "DUP1",
      "path": "39"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "REVERT",
      "path": "39"
    },
    "16": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "17": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "POP",
      "path": "39"
    },
    "18": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "21": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "LT",
      "path": "39"
    },
    "22": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "26": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "29": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "SHR",
      "path": "39"
    },
    "32": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "DUP1",
      "path": "39"
    },
    "33": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x11E56AFF"
    },
    "38": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "EQ",
      "path": "39"
    },
    "39": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "43": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "DUP1",
      "path": "39"
    },
    "44": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x5001F3B5"
    },
    "49": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "EQ",
      "path": "39"
    },
    "50": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x73"
    },
    "53": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "54": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "55": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "DUP1",
      "path": "39"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        295,
        1424
      ],
      "op": "REVERT",
      "path": "39"
    },
    "59": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "60": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x61"
    },
    "63": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "65": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "DUP1",
      "path": "39"
    },
    "66": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "67": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SUB",
      "path": "39"
    },
    "68": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "70": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "DUP2",
      "path": "39"
    },
    "71": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "LT",
      "path": "39"
    },
    "72": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "73": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x51"
    },
    "76": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "77": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "79": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "DUP1",
      "path": "39"
    },
    "80": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "REVERT",
      "path": "39"
    },
    "81": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "82": {
      "op": "POP"
    },
    "83": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "84": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "86": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "88": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "90": {
      "op": "SHL"
    },
    "91": {
      "op": "SUB"
    },
    "92": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "AND",
      "path": "39"
    },
    "93": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x97"
    },
    "96": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        621,
        1422
      ],
      "op": "JUMP",
      "path": "39"
    },
    "97": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "98": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "100": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "DUP1",
      "path": "39"
    },
    "101": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "102": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "103": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "DUP3",
      "path": "39"
    },
    "104": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "105": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "106": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "107": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "DUP2",
      "path": "39"
    },
    "108": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "109": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SUB",
      "path": "39"
    },
    "110": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "112": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "ADD",
      "path": "39"
    },
    "113": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "114": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "RETURN",
      "path": "39"
    },
    "115": {
      "offset": [
        131,
        164
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "116": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7B"
    },
    "119": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x41F"
    },
    "122": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        131,
        164
      ],
      "op": "JUMP",
      "path": "41"
    },
    "123": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "124": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "126": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "DUP1",
      "path": "41"
    },
    "127": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "134": {
      "op": "SHL"
    },
    "135": {
      "op": "SUB"
    },
    "136": {
      "offset": [
        131,
        164
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "137": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "138": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "AND",
      "path": "41"
    },
    "139": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "DUP3",
      "path": "41"
    },
    "140": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "141": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "142": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "143": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "DUP2",
      "path": "41"
    },
    "144": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "145": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "SUB",
      "path": "41"
    },
    "146": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "148": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "ADD",
      "path": "41"
    },
    "149": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "150": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "RETURN",
      "path": "41"
    },
    "151": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "152": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        686,
        690
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "154": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        698,
        712
      ],
      "op": "DUP1",
      "path": "39"
    },
    "155": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        730,
        734
      ],
      "op": "DUP3",
      "path": "39"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "162": {
      "op": "SHL"
    },
    "163": {
      "op": "SUB"
    },
    "164": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        742
      ],
      "op": "AND",
      "path": "39"
    },
    "165": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        742
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xDFE1681"
    },
    "170": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "172": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "173": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP2",
      "path": "39"
    },
    "174": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "179": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "AND",
      "path": "39"
    },
    "180": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "182": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "SHL",
      "path": "39"
    },
    "183": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP2",
      "path": "39"
    },
    "184": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "185": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "187": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "ADD",
      "path": "39"
    },
    "188": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "190": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "192": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "193": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP1",
      "path": "39"
    },
    "194": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP4",
      "path": "39"
    },
    "195": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "SUB",
      "path": "39"
    },
    "196": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP2",
      "path": "39"
    },
    "197": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP7",
      "path": "39"
    },
    "198": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP1",
      "path": "39"
    },
    "199": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "EXTCODESIZE",
      "path": "39"
    },
    "200": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "201": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP1",
      "path": "39"
    },
    "202": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "203": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD3"
    },
    "206": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "207": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "209": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP1",
      "path": "39"
    },
    "210": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "REVERT",
      "path": "39"
    },
    "211": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "212": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "POP",
      "path": "39"
    },
    "213": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "GAS",
      "path": "39"
    },
    "214": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "215": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "216": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP1",
      "path": "39"
    },
    "217": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "218": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xE7"
    },
    "221": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "222": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "223": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "225": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP1",
      "path": "39"
    },
    "226": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "227": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "228": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "230": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "REVERT",
      "path": "39"
    },
    "231": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "232": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "POP",
      "path": "39"
    },
    "233": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "POP",
      "path": "39"
    },
    "234": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "POP",
      "path": "39"
    },
    "235": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "POP",
      "path": "39"
    },
    "236": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "238": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "239": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "240": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "242": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP2",
      "path": "39"
    },
    "243": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "LT",
      "path": "39"
    },
    "244": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "245": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFD"
    },
    "248": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "249": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "251": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "DUP1",
      "path": "39"
    },
    "252": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "REVERT",
      "path": "39"
    },
    "253": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "254": {
      "op": "POP"
    },
    "255": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "256": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "258": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "259": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "260": {
      "op": "PUSH4",
      "value": "0xD21220A7"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "267": {
      "op": "SHL"
    },
    "268": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP2",
      "path": "39"
    },
    "269": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "270": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "271": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "272": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "273": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "274": {
      "op": "POP"
    },
    "275": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        750,
        764
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "277": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        750,
        764
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "284": {
      "op": "SHL"
    },
    "285": {
      "op": "SUB"
    },
    "286": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        794
      ],
      "op": "DUP7",
      "path": "39"
    },
    "287": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        794
      ],
      "op": "AND",
      "path": "39"
    },
    "288": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        794
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "289": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        794
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xD21220A7"
    },
    "294": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        794
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "295": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "297": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "298": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP4",
      "path": "39"
    },
    "299": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "ADD",
      "path": "39"
    },
    "300": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "301": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "303": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        715,
        744
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "304": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "305": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "306": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP3",
      "path": "39"
    },
    "307": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "308": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SUB",
      "path": "39"
    },
    "309": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "ADD",
      "path": "39"
    },
    "310": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP2",
      "path": "39"
    },
    "311": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        794
      ],
      "op": "DUP7",
      "path": "39"
    },
    "312": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "313": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "EXTCODESIZE",
      "path": "39"
    },
    "314": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "315": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "316": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "317": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x145"
    },
    "320": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "321": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "323": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "324": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "REVERT",
      "path": "39"
    },
    "325": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "326": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "POP",
      "path": "39"
    },
    "327": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "GAS",
      "path": "39"
    },
    "328": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "329": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "330": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "331": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "332": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x159"
    },
    "335": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "336": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "337": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "339": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "340": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "341": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "342": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "344": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "REVERT",
      "path": "39"
    },
    "345": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "346": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "POP",
      "path": "39"
    },
    "347": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "POP",
      "path": "39"
    },
    "348": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "POP",
      "path": "39"
    },
    "349": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "POP",
      "path": "39"
    },
    "350": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "352": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "353": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "354": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "356": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP2",
      "path": "39"
    },
    "357": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "LT",
      "path": "39"
    },
    "358": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "359": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x16F"
    },
    "362": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "363": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "365": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "DUP1",
      "path": "39"
    },
    "366": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "REVERT",
      "path": "39"
    },
    "367": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "368": {
      "op": "POP"
    },
    "369": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "370": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "372": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "373": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "374": {
      "op": "PUSH4",
      "value": "0x18160DDD"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP2",
      "path": "39"
    },
    "383": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "384": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "385": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "386": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "387": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "388": {
      "op": "POP"
    },
    "389": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        802,
        818
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "391": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        802,
        818
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        853
      ],
      "op": "DUP8",
      "path": "39"
    },
    "401": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        853
      ],
      "op": "AND",
      "path": "39"
    },
    "402": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        853
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "403": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        853
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x18160DDD"
    },
    "408": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        853
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "409": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "411": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "412": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP4",
      "path": "39"
    },
    "413": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "ADD",
      "path": "39"
    },
    "414": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "415": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "417": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        767,
        796
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "418": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "419": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "420": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP3",
      "path": "39"
    },
    "421": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "422": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SUB",
      "path": "39"
    },
    "423": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "ADD",
      "path": "39"
    },
    "424": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP2",
      "path": "39"
    },
    "425": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        853
      ],
      "op": "DUP7",
      "path": "39"
    },
    "426": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "427": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "EXTCODESIZE",
      "path": "39"
    },
    "428": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "429": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "430": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "431": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1B7"
    },
    "434": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "435": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "437": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "438": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "REVERT",
      "path": "39"
    },
    "439": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "440": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "POP",
      "path": "39"
    },
    "441": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "GAS",
      "path": "39"
    },
    "442": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "443": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "444": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "445": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "446": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1CB"
    },
    "449": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "450": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "451": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "453": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "454": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "455": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "456": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "458": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "REVERT",
      "path": "39"
    },
    "459": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "460": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "POP",
      "path": "39"
    },
    "461": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "POP",
      "path": "39"
    },
    "462": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "POP",
      "path": "39"
    },
    "463": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "POP",
      "path": "39"
    },
    "464": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "466": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "467": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "468": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "470": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP2",
      "path": "39"
    },
    "471": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "LT",
      "path": "39"
    },
    "472": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "473": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1E1"
    },
    "476": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "477": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "479": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "DUP1",
      "path": "39"
    },
    "480": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "REVERT",
      "path": "39"
    },
    "481": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "484": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "486": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "487": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "488": {
      "op": "PUSH4",
      "value": "0x240BC6B"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP2",
      "path": "39"
    },
    "497": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "498": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "499": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "500": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "501": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        821,
        855
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "502": {
      "op": "POP"
    },
    "503": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        862,
        869
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "505": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        862,
        869
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "506": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        862,
        869
      ],
      "op": "DUP3",
      "path": "39"
    },
    "507": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        862,
        869
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        916
      ],
      "op": "DUP10",
      "path": "39"
    },
    "517": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        916
      ],
      "op": "AND",
      "path": "39"
    },
    "518": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        916
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "519": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        916
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x902F1AC"
    },
    "524": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        916
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "525": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "527": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "528": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP3",
      "path": "39"
    },
    "529": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ADD",
      "path": "39"
    },
    "530": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "531": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x60"
    },
    "533": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "534": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "535": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "536": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "537": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP3",
      "path": "39"
    },
    "538": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "539": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SUB",
      "path": "39"
    },
    "540": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ADD",
      "path": "39"
    },
    "541": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP2",
      "path": "39"
    },
    "542": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        916
      ],
      "op": "DUP7",
      "path": "39"
    },
    "543": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "544": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "EXTCODESIZE",
      "path": "39"
    },
    "545": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "546": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "547": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "548": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x22C"
    },
    "551": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "552": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "554": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "555": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "REVERT",
      "path": "39"
    },
    "556": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "557": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "POP",
      "path": "39"
    },
    "558": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "GAS",
      "path": "39"
    },
    "559": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "560": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "561": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "562": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "563": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x240"
    },
    "566": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "567": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "568": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "570": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "571": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "572": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "573": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "575": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "REVERT",
      "path": "39"
    },
    "576": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "577": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "POP",
      "path": "39"
    },
    "578": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "POP",
      "path": "39"
    },
    "579": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "POP",
      "path": "39"
    },
    "580": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "POP",
      "path": "39"
    },
    "581": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "583": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "584": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "585": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x60"
    },
    "587": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP2",
      "path": "39"
    },
    "588": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "LT",
      "path": "39"
    },
    "589": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "590": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x256"
    },
    "593": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "594": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "596": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "597": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "REVERT",
      "path": "39"
    },
    "598": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "DUP1",
      "path": "39"
    },
    "601": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "602": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "604": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "605": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "606": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "ADD",
      "path": "39"
    },
    "607": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        884,
        918
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "608": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "PUSH14",
      "path": "39",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "623": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "624": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "DUP3",
      "path": "39"
    },
    "625": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "AND",
      "path": "39"
    },
    "626": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "AND",
      "path": "39"
    },
    "629": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        924,
        934
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "633": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        937,
        982
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x294"
    },
    "636": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        970,
        981
      ],
      "op": "DUP5",
      "path": "39"
    },
    "637": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        937,
        964
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x28E"
    },
    "640": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        953,
        963
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x289"
    },
    "643": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "DUP7",
      "path": "39"
    },
    "644": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        861,
        918
      ],
      "op": "DUP7",
      "path": "39"
    },
    "645": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        953,
        959
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x443"
    },
    "648": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        953,
        963
      ],
      "op": "JUMP",
      "path": "39"
    },
    "649": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        953,
        963
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "650": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        937,
        952
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4A5"
    },
    "653": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        937,
        964
      ],
      "op": "JUMP",
      "path": "39"
    },
    "654": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        937,
        964
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "655": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        937,
        969
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "656": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        937,
        969
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5EB"
    },
    "659": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        937,
        982
      ],
      "op": "JUMP",
      "path": "39"
    },
    "660": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        937,
        982
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "661": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        924,
        982
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "662": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        924,
        982
      ],
      "op": "POP",
      "path": "39"
    },
    "663": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1001,
        1009
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "665": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1016
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x0"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "SUB"
    },
    "706": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1026
      ],
      "op": "AND",
      "path": "39"
    },
    "707": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1026
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x11E56AFF"
    },
    "712": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1027,
        1033
      ],
      "op": "DUP9",
      "path": "39"
    },
    "713": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "715": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "716": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP3",
      "path": "39"
    },
    "717": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "722": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "AND",
      "path": "39"
    },
    "723": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "725": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "SHL",
      "path": "39"
    },
    "726": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP2",
      "path": "39"
    },
    "727": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "728": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "730": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "ADD",
      "path": "39"
    },
    "731": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "732": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP3",
      "path": "39"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "AND",
      "path": "39"
    },
    "742": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP2",
      "path": "39"
    },
    "743": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "744": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "746": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "ADD",
      "path": "39"
    },
    "747": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "748": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "POP",
      "path": "39"
    },
    "749": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "POP",
      "path": "39"
    },
    "750": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "752": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "754": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "755": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "756": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP4",
      "path": "39"
    },
    "757": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "SUB",
      "path": "39"
    },
    "758": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP2",
      "path": "39"
    },
    "759": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP7",
      "path": "39"
    },
    "760": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "761": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "EXTCODESIZE",
      "path": "39"
    },
    "762": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "763": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "764": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "765": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x305"
    },
    "768": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "769": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "771": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "772": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "REVERT",
      "path": "39"
    },
    "773": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "774": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "POP",
      "path": "39"
    },
    "775": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "GAS",
      "path": "39"
    },
    "776": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "777": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "778": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "779": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "780": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x319"
    },
    "783": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "784": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "785": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "787": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "788": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "789": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "790": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "792": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "REVERT",
      "path": "39"
    },
    "793": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "794": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "POP",
      "path": "39"
    },
    "795": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "POP",
      "path": "39"
    },
    "796": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "POP",
      "path": "39"
    },
    "797": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "POP",
      "path": "39"
    },
    "798": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "800": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "801": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "802": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "804": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP2",
      "path": "39"
    },
    "805": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "LT",
      "path": "39"
    },
    "806": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "807": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x32F"
    },
    "810": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "811": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "813": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "DUP1",
      "path": "39"
    },
    "814": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "REVERT",
      "path": "39"
    },
    "815": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "818": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "820": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "821": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "822": {
      "op": "PUSH4",
      "value": "0x11E56AFF"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP2",
      "path": "39"
    },
    "831": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP10",
      "path": "39"
    },
    "841": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP2",
      "path": "39"
    },
    "842": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "AND",
      "path": "39"
    },
    "843": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "845": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP4",
      "path": "39"
    },
    "846": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ADD",
      "path": "39"
    },
    "847": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "848": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "849": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "850": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "851": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "855": {
      "op": "SWAP3"
    },
    "856": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1068
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x0"
    },
    "889": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1078
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "890": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1078
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "891": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1078
      ],
      "op": "AND",
      "path": "39"
    },
    "892": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1078
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "893": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1078
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x11E56AFF"
    },
    "898": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1078
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "899": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x24"
    },
    "901": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "902": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP3",
      "path": "39"
    },
    "903": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ADD",
      "path": "39"
    },
    "904": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "905": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "907": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1012,
        1034
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "908": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "909": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "910": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "911": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP3",
      "path": "39"
    },
    "912": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "913": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SUB",
      "path": "39"
    },
    "914": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ADD",
      "path": "39"
    },
    "915": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP2",
      "path": "39"
    },
    "916": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1078
      ],
      "op": "DUP7",
      "path": "39"
    },
    "917": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "918": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "EXTCODESIZE",
      "path": "39"
    },
    "919": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "920": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "921": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "922": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3A2"
    },
    "925": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "926": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "928": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "929": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "REVERT",
      "path": "39"
    },
    "930": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "931": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "POP",
      "path": "39"
    },
    "932": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "GAS",
      "path": "39"
    },
    "933": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "934": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "935": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "936": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "937": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3B6"
    },
    "940": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "941": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "942": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "944": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "945": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "946": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "947": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "949": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "REVERT",
      "path": "39"
    },
    "950": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "951": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "POP",
      "path": "39"
    },
    "952": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "POP",
      "path": "39"
    },
    "953": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "POP",
      "path": "39"
    },
    "954": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "POP",
      "path": "39"
    },
    "955": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "957": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "958": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "959": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "961": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP2",
      "path": "39"
    },
    "962": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "LT",
      "path": "39"
    },
    "963": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "964": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3CC"
    },
    "967": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "968": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "970": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP1",
      "path": "39"
    },
    "971": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "REVERT",
      "path": "39"
    },
    "972": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "973": {
      "op": "POP"
    },
    "974": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "975": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1417
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 0,
      "value": "0x40F"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1406
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x409"
    },
    "988": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1385,
        1405
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3E4"
    },
    "991": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1064,
        1086
      ],
      "op": "DUP5",
      "path": "39"
    },
    "992": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1385,
        1400
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4A5"
    },
    "995": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        1385,
        1405
      ],
      "op": "JUMP",
      "path": "39"
    },
    "996": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1385,
        1405
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "997": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1380
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x403"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1004": {
      "op": "SHL"
    },
    "1005": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1369
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x409"
    },
    "1008": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1348,
        1368
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3F8"
    },
    "1011": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1364,
        1367
      ],
      "op": "DUP10",
      "path": "39"
    },
    "1012": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1348,
        1363
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4A5"
    },
    "1015": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        1348,
        1368
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1016": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1348,
        1368
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1017": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1343
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x403"
    },
    "1020": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1336
      ],
      "op": "DUP12",
      "path": "39"
    },
    "1021": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1341,
        1342
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x2"
    },
    "1023": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1340
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x443"
    },
    "1026": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        1331,
        1343
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1027": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1343
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1028": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1347
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1029": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1347
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x443"
    },
    "1032": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        1331,
        1369
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1033": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1369
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1034": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1373
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1035": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1373
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x60B"
    },
    "1038": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "i",
      "offset": [
        1331,
        1380
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1039": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1331,
        1417
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1040": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "SWAP9",
      "path": "39"
    },
    "1041": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1042": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1043": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1044": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1045": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1046": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1047": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1048": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1049": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        1324,
        1417
      ],
      "op": "POP",
      "path": "39"
    },
    "1050": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1051": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1052": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1053": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        621,
        1422
      ],
      "op": "POP",
      "path": "39"
    },
    "1054": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "o",
      "offset": [
        621,
        1422
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1055": {
      "offset": [
        131,
        164
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1056": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "PUSH32",
      "path": "41",
      "value": "0x0"
    },
    "1089": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "offset": [
        131,
        164
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1090": {
      "fn": "UniswapV2Oracle.getCELOPx",
      "jump": "o",
      "offset": [
        131,
        164
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1091": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1092": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1094": {
      "branch": 38,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1095": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x452"
    },
    "1098": {
      "branch": 38,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x0"
    },
    "1102": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x49F"
    },
    "1105": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1106": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1107": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1108": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1109": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "6"
    },
    "1110": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1111": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1112": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1113": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1114": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 2,
      "value": "0x45F"
    },
    "1117": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1118": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "6"
    },
    "1119": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1120": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "6"
    },
    "1121": {
      "branch": 39,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "6"
    },
    "1122": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x49C"
    },
    "1125": {
      "branch": 39,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1126": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1128": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1137": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1138": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1140": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1141": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1142": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1143": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1145": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1146": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1147": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1148": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "6"
    },
    "1149": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1150": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1151": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "1153": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1154": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1155": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1157": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1158": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1159": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66B"
    },
    "1162": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "1164": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1165": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1166": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1168": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1169": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1170": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "6"
    },
    "1171": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "6"
    },
    "1172": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1174": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1175": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1176": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1177": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "6"
    },
    "1178": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1179": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1180": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1181": {
      "fn": "SafeMath.mul",
      "offset": [
        3745,
        3746
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 3
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1184": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1185": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1186": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "POP",
      "path": "6"
    },
    "1187": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "POP",
      "path": "6"
    },
    "1188": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1189": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        753,
        1602
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1190": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        798,
        802
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1192": {
      "branch": 29,
      "fn": "HomoraMath.sqrt",
      "offset": [
        814,
        820
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1193": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        810,
        830
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4B4"
    },
    "1196": {
      "branch": 29,
      "fn": "HomoraMath.sqrt",
      "offset": [
        810,
        830
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        829,
        830
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 4,
      "value": "0x0"
    },
    "1200": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        822,
        830
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x41A"
    },
    "1203": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        822,
        830
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1204": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        810,
        830
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1205": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        846,
        847
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1206": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        862,
        863
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        874,
        915
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1214": {
      "branch": 30,
      "fn": "HomoraMath.sqrt",
      "offset": [
        874,
        915
      ],
      "op": "LT",
      "path": "50"
    },
    "1215": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        870,
        958
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4CD"
    },
    "1218": {
      "branch": 30,
      "fn": "HomoraMath.sqrt",
      "offset": [
        870,
        958
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1219": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        932,
        935
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 5,
      "value": "0x80"
    },
    "1221": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1222": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1223": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1224": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SHR",
      "path": "50"
    },
    "1225": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        925,
        935
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1226": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        949,
        951
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 6,
      "value": "0x40"
    },
    "1228": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        943,
        951
      ],
      "op": "SHL",
      "path": "50"
    },
    "1229": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        870,
        958
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1230": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        974,
        993
      ],
      "op": "PUSH9",
      "path": "50",
      "value": "0x10000000000000000"
    },
    "1240": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        968,
        970
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1241": {
      "branch": 31,
      "fn": "HomoraMath.sqrt",
      "offset": [
        968,
        993
      ],
      "op": "LT",
      "path": "50"
    },
    "1242": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        964,
        1035
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4E8"
    },
    "1245": {
      "branch": 31,
      "fn": "HomoraMath.sqrt",
      "offset": [
        964,
        1035
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1246": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1010,
        1012
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 7,
      "value": "0x40"
    },
    "1248": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1249": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1250": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1251": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SHR",
      "path": "50"
    },
    "1252": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1003,
        1012
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1253": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1026,
        1028
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 8,
      "value": "0x20"
    },
    "1255": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1020,
        1028
      ],
      "op": "SHL",
      "path": "50"
    },
    "1256": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        964,
        1035
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1257": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1050,
        1061
      ],
      "op": "PUSH5",
      "path": "50",
      "value": "0x100000000"
    },
    "1263": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1044,
        1046
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1264": {
      "branch": 32,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1044,
        1061
      ],
      "op": "LT",
      "path": "50"
    },
    "1265": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1040,
        1103
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4FF"
    },
    "1268": {
      "branch": 32,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1040,
        1103
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1269": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1078,
        1080
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 9,
      "value": "0x20"
    },
    "1271": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1272": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1273": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1274": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SHR",
      "path": "50"
    },
    "1275": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1071,
        1080
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1276": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1094,
        1096
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 10,
      "value": "0x10"
    },
    "1278": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1088,
        1096
      ],
      "op": "SHL",
      "path": "50"
    },
    "1279": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1040,
        1103
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1280": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1118,
        1125
      ],
      "op": "PUSH3",
      "path": "50",
      "value": "0x10000"
    },
    "1284": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1112,
        1114
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1285": {
      "branch": 33,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1112,
        1125
      ],
      "op": "LT",
      "path": "50"
    },
    "1286": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1108,
        1166
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x514"
    },
    "1289": {
      "branch": 33,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1108,
        1166
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1290": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1142,
        1144
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 11,
      "value": "0x10"
    },
    "1292": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1293": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1294": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1295": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SHR",
      "path": "50"
    },
    "1296": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1135,
        1144
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1297": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1158,
        1159
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 12,
      "value": "0x8"
    },
    "1299": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1152,
        1159
      ],
      "op": "SHL",
      "path": "50"
    },
    "1300": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1108,
        1166
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1301": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1181,
        1186
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "1304": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1175,
        1177
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1305": {
      "branch": 34,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1175,
        1186
      ],
      "op": "LT",
      "path": "50"
    },
    "1306": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1171,
        1226
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x528"
    },
    "1309": {
      "branch": 34,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1171,
        1226
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1310": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1203,
        1204
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 13,
      "value": "0x8"
    },
    "1312": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1313": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1314": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1315": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SHR",
      "path": "50"
    },
    "1316": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1196,
        1204
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1317": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1218,
        1219
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 14,
      "value": "0x4"
    },
    "1319": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1212,
        1219
      ],
      "op": "SHL",
      "path": "50"
    },
    "1320": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1171,
        1226
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1321": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1241,
        1245
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x10"
    },
    "1323": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1235,
        1237
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1324": {
      "branch": 35,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1235,
        1245
      ],
      "op": "LT",
      "path": "50"
    },
    "1325": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1231,
        1285
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x53B"
    },
    "1328": {
      "branch": 35,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1231,
        1285
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1329": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1262,
        1263
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 15,
      "value": "0x4"
    },
    "1331": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1332": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1333": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1334": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SHR",
      "path": "50"
    },
    "1335": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1263
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1336": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1277,
        1278
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 16,
      "value": "0x2"
    },
    "1338": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1271,
        1278
      ],
      "op": "SHL",
      "path": "50"
    },
    "1339": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1231,
        1285
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1340": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1300,
        1303
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "1342": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1294,
        1296
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1343": {
      "branch": 36,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1294,
        1303
      ],
      "op": "LT",
      "path": "50"
    },
    "1344": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1290,
        1327
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x547"
    },
    "1347": {
      "branch": 36,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1290,
        1327
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1348": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1319,
        1320
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 17,
      "value": "0x1"
    },
    "1350": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1313,
        1320
      ],
      "op": "SHL",
      "path": "50"
    },
    "1351": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1290,
        1327
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1352": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1352,
        1353
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 18,
      "value": "0x1"
    },
    "1354": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1346,
        1347
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1355": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1343
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1356": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1357": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x552"
    },
    "1360": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1361": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1362": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1363": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1342,
        1347
      ],
      "op": "DIV",
      "path": "50"
    },
    "1364": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1338,
        1339
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1365": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1338,
        1347
      ],
      "op": "ADD",
      "path": "50"
    },
    "1366": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1337,
        1353
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1367": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1337,
        1353
      ],
      "op": "SHR",
      "path": "50"
    },
    "1368": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1333,
        1353
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1369": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1333,
        1353
      ],
      "op": "POP",
      "path": "50"
    },
    "1370": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1378,
        1379
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 19,
      "value": "0x1"
    },
    "1372": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1372,
        1373
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1373": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1369
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1374": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1375": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x564"
    },
    "1378": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1379": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1380": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1381": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1368,
        1373
      ],
      "op": "DIV",
      "path": "50"
    },
    "1382": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1364,
        1365
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1383": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1364,
        1373
      ],
      "op": "ADD",
      "path": "50"
    },
    "1384": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1363,
        1379
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1385": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1363,
        1379
      ],
      "op": "SHR",
      "path": "50"
    },
    "1386": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1359,
        1379
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1387": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1359,
        1379
      ],
      "op": "POP",
      "path": "50"
    },
    "1388": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1404,
        1405
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 20,
      "value": "0x1"
    },
    "1390": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1398,
        1399
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1391": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1395
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1392": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1393": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x576"
    },
    "1396": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1397": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1398": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1399": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1394,
        1399
      ],
      "op": "DIV",
      "path": "50"
    },
    "1400": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1390,
        1391
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1401": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1390,
        1399
      ],
      "op": "ADD",
      "path": "50"
    },
    "1402": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1389,
        1405
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1403": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1389,
        1405
      ],
      "op": "SHR",
      "path": "50"
    },
    "1404": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1385,
        1405
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1405": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1385,
        1405
      ],
      "op": "POP",
      "path": "50"
    },
    "1406": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1430,
        1431
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 21,
      "value": "0x1"
    },
    "1408": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1424,
        1425
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1409": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1421
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1410": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1411": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x588"
    },
    "1414": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1415": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1416": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1417": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1420,
        1425
      ],
      "op": "DIV",
      "path": "50"
    },
    "1418": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1416,
        1417
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1419": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1416,
        1425
      ],
      "op": "ADD",
      "path": "50"
    },
    "1420": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1415,
        1431
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1421": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1415,
        1431
      ],
      "op": "SHR",
      "path": "50"
    },
    "1422": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1411,
        1431
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1423": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1411,
        1431
      ],
      "op": "POP",
      "path": "50"
    },
    "1424": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1456,
        1457
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 22,
      "value": "0x1"
    },
    "1426": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1450,
        1451
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1427": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1447
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1428": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1429": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x59A"
    },
    "1432": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1433": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1434": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1435": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1446,
        1451
      ],
      "op": "DIV",
      "path": "50"
    },
    "1436": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1442,
        1443
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1437": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1442,
        1451
      ],
      "op": "ADD",
      "path": "50"
    },
    "1438": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1441,
        1457
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1439": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1441,
        1457
      ],
      "op": "SHR",
      "path": "50"
    },
    "1440": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1437,
        1457
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1441": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1437,
        1457
      ],
      "op": "POP",
      "path": "50"
    },
    "1442": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1482,
        1483
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 23,
      "value": "0x1"
    },
    "1444": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1476,
        1477
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1445": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1473
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1446": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1447": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5AC"
    },
    "1450": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1451": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1452": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1453": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1472,
        1477
      ],
      "op": "DIV",
      "path": "50"
    },
    "1454": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1468,
        1469
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1455": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1468,
        1477
      ],
      "op": "ADD",
      "path": "50"
    },
    "1456": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1467,
        1483
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1457": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1467,
        1483
      ],
      "op": "SHR",
      "path": "50"
    },
    "1458": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1463,
        1483
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1459": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1463,
        1483
      ],
      "op": "POP",
      "path": "50"
    },
    "1460": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1508,
        1509
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 24,
      "value": "0x1"
    },
    "1462": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1502,
        1503
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1463": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1499
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1464": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1465": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5BE"
    },
    "1468": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1469": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1470": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1471": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1498,
        1503
      ],
      "op": "DIV",
      "path": "50"
    },
    "1472": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1494,
        1495
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1473": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1494,
        1503
      ],
      "op": "ADD",
      "path": "50"
    },
    "1474": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1493,
        1509
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1475": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1493,
        1509
      ],
      "op": "SHR",
      "path": "50"
    },
    "1476": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1489,
        1509
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1477": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1489,
        1509
      ],
      "op": "POP",
      "path": "50"
    },
    "1478": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1552,
        1559
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1480": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1566,
        1567
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1481": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1563
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1482": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1483": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5D0"
    },
    "1486": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1487": {
      "dev": "Division by zero",
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1488": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1489": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1562,
        1567
      ],
      "op": "DIV",
      "path": "50"
    },
    "1490": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1552,
        1567
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1491": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1552,
        1567
      ],
      "op": "POP",
      "path": "50"
    },
    "1492": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1585,
        1587
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 25
    },
    "1493": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1582
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1494": {
      "branch": 37,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1587
      ],
      "op": "LT",
      "path": "50"
    },
    "1495": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5E0"
    },
    "1498": {
      "branch": 37,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1499": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1594,
        1596
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1500": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5E2"
    },
    "1503": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1504": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1505": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1590,
        1591
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1506": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1581,
        1596
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1507": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1573,
        1597
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "1508": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        753,
        1602
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "op": "POP"
    },
    "1514": {
      "fn": "HomoraMath.sqrt",
      "jump": "o",
      "offset": [
        753,
        1602
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1515": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        411,
        513
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1516": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        468,
        472
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1518": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        505,
        508
      ],
      "op": "DUP2",
      "path": "50",
      "statement": 26
    },
    "1519": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        502
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5FC"
    },
    "1522": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        490
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        494
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x443"
    },
    "1531": {
      "fn": "HomoraMath.fdiv",
      "jump": "i",
      "offset": [
        487,
        502
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1532": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        502
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1533": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        508
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1534": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        508
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x603"
    },
    "1537": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        508
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1538": {
      "dev": "Division by zero",
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        508
      ],
      "op": "INVALID",
      "path": "50"
    },
    "1539": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        508
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1540": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        508
      ],
      "op": "DIV",
      "path": "50"
    },
    "1541": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        487,
        508
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1542": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        411,
        513
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1543": {
      "op": "POP"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "fn": "HomoraMath.fdiv",
      "jump": "o",
      "offset": [
        411,
        513
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1547": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1548": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1550": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 27
    },
    "1551": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1552": {
      "branch": 40,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "6"
    },
    "1553": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x661"
    },
    "1556": {
      "branch": 40,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1557": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1559": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1560": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1567": {
      "op": "SHL"
    },
    "1568": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1569": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1570": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1572": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1574": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1575": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1576": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1577": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1A"
    },
    "1579": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1581": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1582": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1583": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1584": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "1617": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1619": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1620": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1621": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1622": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1623": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1624": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1625": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1626": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1627": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "6"
    },
    "1628": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1630": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1631": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1632": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1633": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1634": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 28
    },
    "1635": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1636": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1637": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x603"
    },
    "1640": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1641": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "6"
    }
  },
  "sha1": "aaa05a7ae765e8c66adf5ddad58576ffff682f7f",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\n\nimport './UsingBaseOracle.sol';\nimport '../utils/HomoraMath.sol';\nimport '../../interfaces/IBaseOracle.sol';\nimport '../../interfaces/IUniswapV2Pair.sol';\n\ncontract UniswapV2Oracle is UsingBaseOracle, IBaseOracle {\n  using SafeMath for uint;\n  using HomoraMath for uint;\n\n  constructor(IBaseOracle _base) public UsingBaseOracle(_base) {}\n\n  /// @dev Return the value of the given input as ETH per unit, multiplied by 2**112.\n  /// @param pair The Uniswap pair to check the value.\n  function getCELOPx(address pair) external view override returns (uint) {\n    address token0 = IUniswapV2Pair(pair).token0();\n    address token1 = IUniswapV2Pair(pair).token1();\n    uint totalSupply = IUniswapV2Pair(pair).totalSupply();\n    (uint r0, uint r1, ) = IUniswapV2Pair(pair).getReserves();\n    uint sqrtK = HomoraMath.sqrt(r0.mul(r1)).fdiv(totalSupply); // in 2**112\n    uint px0 = base.getCELOPx(token0); // in 2**112\n    uint px1 = base.getCELOPx(token1); // in 2**112\n    // fair token0 amt: sqrtK * sqrt(px1/px0)\n    // fair token1 amt: sqrtK * sqrt(px0/px1)\n    // fair lp price = 2 * sqrt(px0 * px1)\n    // split into 2 sqrts multiplication to prevent uint overflow (note the 2**112)\n    return sqrtK.mul(2).mul(HomoraMath.sqrt(px0)).div(2**56).mul(HomoraMath.sqrt(px1)).div(2**56);\n  }\n}\n",
  "sourceMap": "295:1129:39:-:0;;;413:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;413:63:39;235:12:41;;;;-1:-1:-1;;;;;;235:12:41;;;-1:-1:-1;;;;;295:1129:39;;;;;;;;",
  "sourcePath": "contracts/oracle/UniswapV2Oracle.sol",
  "type": "contract"
}