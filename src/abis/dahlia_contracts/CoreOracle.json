{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "AcceptGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "SetGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "SetPendingGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "route",
          "type": "address"
        }
      ],
      "name": "SetRoute",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getCELOPx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "routes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        }
      ],
      "name": "setRoute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "22": "contracts/Governable.sol",
    "34": "contracts/oracle/CoreOracle.sol",
    "54": "interfaces/IBaseOracle.sol",
    "7": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/proxy/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle/CoreOracle.sol",
    "exportedSymbols": {
      "CoreOracle": [
        9232
      ]
    },
    "id": 9233,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9124,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:34"
      },
      {
        "absolutePath": "interfaces/IBaseOracle.sol",
        "file": "../../interfaces/IBaseOracle.sol",
        "id": 9125,
        "nodeType": "ImportDirective",
        "scope": 9233,
        "sourceUnit": 16445,
        "src": "58:42:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Governable.sol",
        "file": "../Governable.sol",
        "id": 9126,
        "nodeType": "ImportDirective",
        "scope": 9233,
        "sourceUnit": 109,
        "src": "101:27:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9127,
              "name": "IBaseOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16444,
              "src": "153:11:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                "typeString": "contract IBaseOracle"
              }
            },
            "id": 9128,
            "nodeType": "InheritanceSpecifier",
            "src": "153:11:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9129,
              "name": "Governable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 108,
              "src": "166:10:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Governable_$108",
                "typeString": "contract Governable"
              }
            },
            "id": 9130,
            "nodeType": "InheritanceSpecifier",
            "src": "166:10:34"
          }
        ],
        "contractDependencies": [
          108,
          14090,
          16444
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9232,
        "linearizedBaseContracts": [
          9232,
          108,
          14090,
          16444
        ],
        "name": "CoreOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 9136,
            "name": "SetRoute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9132,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9136,
                  "src": "196:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "route",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9136,
                  "src": "219:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "195:38:34"
            },
            "src": "181:53:34"
          },
          {
            "constant": false,
            "functionSelector": "d7409659",
            "id": 9140,
            "mutability": "mutable",
            "name": "routes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9232,
            "src": "237:41:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 9139,
              "keyType": {
                "id": 9137,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "245:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "237:27:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 9138,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:34",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9146,
              "nodeType": "Block",
              "src": "343:31:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9143,
                      "name": "__Governable__init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "349:18:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:20:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9145,
                  "nodeType": "ExpressionStatement",
                  "src": "349:20:34"
                }
              ]
            },
            "documentation": null,
            "id": 9147,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:2:34"
            },
            "returnParameters": {
              "id": 9142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:34"
            },
            "scope": 9232,
            "src": "322:52:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9200,
              "nodeType": "Block",
              "src": "600:223:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9160,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9151,
                            "src": "614:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 9161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "614:13:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9162,
                            "name": "targets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9154,
                            "src": "631:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 9163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "631:14:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "614:31:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f6e73697374656e74206c656e677468",
                        "id": 9165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "647:21:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e39bb8790077c3776fc27d43a4a6ec16cc20ec68b47f9e789badccd37562c187",
                          "typeString": "literal_string \"inconsistent length\""
                        },
                        "value": "inconsistent length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e39bb8790077c3776fc27d43a4a6ec16cc20ec68b47f9e789badccd37562c187",
                          "typeString": "literal_string \"inconsistent length\""
                        }
                      ],
                      "id": 9159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "606:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:63:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9167,
                  "nodeType": "ExpressionStatement",
                  "src": "606:63:34"
                },
                {
                  "body": {
                    "id": 9198,
                    "nodeType": "Block",
                    "src": "722:97:34",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 9187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9179,
                              "name": "routes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9140,
                              "src": "730:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 9183,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9180,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9151,
                                "src": "737:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 9182,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9181,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9169,
                                "src": "744:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "737:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "730:19:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9184,
                              "name": "targets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9154,
                              "src": "752:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 9186,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9185,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9169,
                              "src": "760:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "752:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "730:34:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 9188,
                        "nodeType": "ExpressionStatement",
                        "src": "730:34:34"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9190,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9151,
                                "src": "786:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 9192,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9191,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9169,
                                "src": "793:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "786:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9193,
                                "name": "targets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9154,
                                "src": "799:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 9195,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9194,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9169,
                                "src": "807:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "799:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9189,
                            "name": "SetRoute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9136,
                            "src": "777:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 9196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "777:35:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9197,
                        "nodeType": "EmitStatement",
                        "src": "772:40:34"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9172,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9169,
                      "src": "694:3:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9173,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9151,
                        "src": "700:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 9174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "700:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "694:19:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9199,
                  "initializationExpression": {
                    "assignments": [
                      9169
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9169,
                        "mutability": "mutable",
                        "name": "idx",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 9199,
                        "src": "680:8:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9168,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 9171,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "691:1:34",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "680:12:34"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 9177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "715:5:34",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 9176,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9169,
                        "src": "715:3:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9178,
                    "nodeType": "ExpressionStatement",
                    "src": "715:5:34"
                  },
                  "nodeType": "ForStatement",
                  "src": "675:144:34"
                }
              ]
            },
            "documentation": {
              "id": 9148,
              "nodeType": "StructuredDocumentation",
              "src": "378:129:34",
              "text": "@dev Set oracle source routes for tokens\n @param tokens List of tokens\n @param targets List of oracle source routes"
            },
            "functionSelector": "573f775a",
            "id": 9201,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9156,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "592:7:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "592:7:34"
              }
            ],
            "name": "setRoute",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9151,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9201,
                  "src": "528:25:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9149,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "528:7:34",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9150,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "528:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9154,
                  "mutability": "mutable",
                  "name": "targets",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9201,
                  "src": "555:26:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9152,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "555:7:34",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9153,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "555:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "527:55:34"
            },
            "returnParameters": {
              "id": 9158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:34"
            },
            "scope": 9232,
            "src": "510:313:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16443
            ],
            "body": {
              "id": 9230,
              "nodeType": "Block",
              "src": "1041:125:34",
              "statements": [
                {
                  "assignments": [
                    9211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9211,
                      "mutability": "mutable",
                      "name": "px",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 9230,
                      "src": "1047:7:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9210,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1047:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9220,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9218,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9204,
                        "src": "1094:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9213,
                              "name": "routes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9140,
                              "src": "1069:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 9215,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9214,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9204,
                              "src": "1076:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1069:13:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9212,
                          "name": "IBaseOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16444,
                          "src": "1057:11:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBaseOracle_$16444_$",
                            "typeString": "type(contract IBaseOracle)"
                          }
                        },
                        "id": 9216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1057:26:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseOracle_$16444",
                          "typeString": "contract IBaseOracle"
                        }
                      },
                      "id": 9217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCELOPx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "1057:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:43:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1047:53:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9222,
                          "name": "px",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9211,
                          "src": "1114:2:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:1:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1114:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7072696365206f7261636c65206661696c757265",
                        "id": 9225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1123:22:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6180f7b6a79675b250958a1c90e7906891af7545e42f313ec27203d69de0a82",
                          "typeString": "literal_string \"price oracle failure\""
                        },
                        "value": "price oracle failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6180f7b6a79675b250958a1c90e7906891af7545e42f313ec27203d69de0a82",
                          "typeString": "literal_string \"price oracle failure\""
                        }
                      ],
                      "id": 9221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1106:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:40:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9227,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:40:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9228,
                    "name": "px",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9211,
                    "src": "1159:2:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9209,
                  "id": 9229,
                  "nodeType": "Return",
                  "src": "1152:9:34"
                }
              ]
            },
            "documentation": {
              "id": 9202,
              "nodeType": "StructuredDocumentation",
              "src": "827:139:34",
              "text": "@dev Return the value of the given input as ETH per unit, multiplied by 2**112.\n @param token The ERC-20 token to check the value."
            },
            "functionSelector": "11e56aff",
            "id": 9231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCELOPx",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9206,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1017:8:34"
            },
            "parameters": {
              "id": 9205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9204,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9231,
                  "src": "988:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "987:15:34"
            },
            "returnParameters": {
              "id": 9209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9208,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9231,
                  "src": "1035:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9207,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:6:34"
            },
            "scope": 9232,
            "src": "969:197:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9233,
        "src": "130:1038:34"
      }
    ],
    "src": "33:1136:34"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001961001e565b610142565b600054610100900460ff16806100375750610037610121565b80610045575060005460ff16155b6100805760405162461bcd60e51b815260040180806020018281038252602e8152602001806107ce602e913960400191505060405180910390fd5b600054610100900460ff161580156100ab576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b0319163362010000810291909117909155600180546001600160a01b031916905560408051918252517fbce074c8369e26e70e1ae2f14fc944da352cfe6f52e2de9572f0c9942a24b7fc916020908290030190a1801561011e576000805461ff00191690555b50565b60006101363061013c60201b6106411760201c565b15905090565b3b151590565b61067d806101516000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d74096591161005b578063d7409659146101a2578063e3056a34146101c8578063e58bb639146101d0578063f235757f146101d85761007d565b80630c340a241461008257806311e56aff146100a6578063573f775a146100de575b600080fd5b61008a6101fe565b604080516001600160a01b039092168252519081900360200190f35b6100cc600480360360208110156100bc57600080fd5b50356001600160a01b0316610213565b60408051918252519081900360200190f35b6101a0600480360360408110156100f457600080fd5b81019060208101813564010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184602083028401116401000000008311171561014357600080fd5b91939092909160208101903564010000000081111561016157600080fd5b82018360208201111561017357600080fd5b8035906020019184602083028401116401000000008311171561019557600080fd5b5090925090506102ed565b005b61008a600480360360208110156101b857600080fd5b50356001600160a01b03166104a9565b61008a6104c4565b6101a06104d3565b6101a0600480360360208110156101ee57600080fd5b50356001600160a01b0316610595565b6000546201000090046001600160a01b031681565b6001600160a01b0380821660008181526042602090815260408083205481516311e56aff60e01b815260048101959095529051929485949116926311e56aff92602480840193919291829003018186803b15801561027057600080fd5b505afa158015610284573d6000803e3d6000fd5b505050506040513d602081101561029a57600080fd5b50519050806102e7576040805162461bcd60e51b81526020600482015260146024820152737072696365206f7261636c65206661696c75726560601b604482015290519081900360640190fd5b92915050565b6000546201000090046001600160a01b03163314610345576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b82811461038f576040805162461bcd60e51b81526020600482015260136024820152720d2dcc6dedce6d2e6e8cadce840d8cadccee8d606b1b604482015290519081900360640190fd5b60005b838110156104a2578282828181106103a657fe5b905060200201356001600160a01b0316604260008787858181106103c657fe5b905060200201356001600160a01b03166001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555084848281811061042657fe5b905060200201356001600160a01b03166001600160a01b03167fa8c96090e146ce1076efa81e5424d56e13d5c3854943f7926406c12d15d6dbe984848481811061046c57fe5b905060200201356001600160a01b031660405180826001600160a01b0316815260200191505060405180910390a2600101610392565b5050505050565b6042602052600090815260409020546001600160a01b031681565b6001546001600160a01b031681565b6001546001600160a01b03163314610532576040805162461bcd60e51b815260206004820152601860248201527f6e6f74207468652070656e64696e6720676f7665726e6f720000000000000000604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000081029190911790915560408051918252517fd345d81ce68c70b119a17eee79dc1421700bd9cb21ca148a62dc90983964e82f916020908290030190a1565b6000546201000090046001600160a01b031633146105ed576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b600180546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f964dea888b00b2ab53f13dfe7ca334b46e99338c222ae232d98547a1da019f609181900360200190a150565b3b15159056fea2646970667358221220a918d99521f421979c2d0b7e33390c0a61d7a22a9bf7ea557f755bf7c9d8964c64736f6c634300060c0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CoreOracle",
  "coverageMap": {
    "branches": {
      "16": {},
      "22": {
        "Governable.acceptGovernor": {
          "15": [
            1283,
            1312,
            true
          ]
        }
      },
      "34": {
        "CoreOracle.getCELOPx": {
          "13": [
            1114,
            1121,
            true
          ]
        },
        "CoreOracle.setRoute": {
          "14": [
            614,
            645,
            true
          ]
        }
      },
      "54": {},
      "7": {}
    },
    "statements": {
      "16": {
        "Address.isContract": {
          "12": [
            1117,
            1132
          ]
        }
      },
      "22": {
        "Governable.acceptGovernor": {
          "6": [
            1275,
            1341
          ],
          "7": [
            1347,
            1375
          ],
          "8": [
            1381,
            1402
          ],
          "9": [
            1408,
            1439
          ]
        },
        "Governable.setPendingGovernor": {
          "10": [
            1058,
            1092
          ],
          "11": [
            1098,
            1139
          ]
        }
      },
      "34": {
        "CoreOracle.getCELOPx": {
          "0": [
            1106,
            1146
          ],
          "1": [
            1152,
            1161
          ]
        },
        "CoreOracle.setRoute": {
          "2": [
            606,
            669
          ],
          "3": [
            730,
            764
          ],
          "4": [
            772,
            812
          ],
          "5": [
            715,
            720
          ]
        }
      },
      "54": {},
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "Governable",
    "IBaseOracle",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d74096591161005b578063d7409659146101a2578063e3056a34146101c8578063e58bb639146101d0578063f235757f146101d85761007d565b80630c340a241461008257806311e56aff146100a6578063573f775a146100de575b600080fd5b61008a6101fe565b604080516001600160a01b039092168252519081900360200190f35b6100cc600480360360208110156100bc57600080fd5b50356001600160a01b0316610213565b60408051918252519081900360200190f35b6101a0600480360360408110156100f457600080fd5b81019060208101813564010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184602083028401116401000000008311171561014357600080fd5b91939092909160208101903564010000000081111561016157600080fd5b82018360208201111561017357600080fd5b8035906020019184602083028401116401000000008311171561019557600080fd5b5090925090506102ed565b005b61008a600480360360208110156101b857600080fd5b50356001600160a01b03166104a9565b61008a6104c4565b6101a06104d3565b6101a0600480360360208110156101ee57600080fd5b50356001600160a01b0316610595565b6000546201000090046001600160a01b031681565b6001600160a01b0380821660008181526042602090815260408083205481516311e56aff60e01b815260048101959095529051929485949116926311e56aff92602480840193919291829003018186803b15801561027057600080fd5b505afa158015610284573d6000803e3d6000fd5b505050506040513d602081101561029a57600080fd5b50519050806102e7576040805162461bcd60e51b81526020600482015260146024820152737072696365206f7261636c65206661696c75726560601b604482015290519081900360640190fd5b92915050565b6000546201000090046001600160a01b03163314610345576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b82811461038f576040805162461bcd60e51b81526020600482015260136024820152720d2dcc6dedce6d2e6e8cadce840d8cadccee8d606b1b604482015290519081900360640190fd5b60005b838110156104a2578282828181106103a657fe5b905060200201356001600160a01b0316604260008787858181106103c657fe5b905060200201356001600160a01b03166001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555084848281811061042657fe5b905060200201356001600160a01b03166001600160a01b03167fa8c96090e146ce1076efa81e5424d56e13d5c3854943f7926406c12d15d6dbe984848481811061046c57fe5b905060200201356001600160a01b031660405180826001600160a01b0316815260200191505060405180910390a2600101610392565b5050505050565b6042602052600090815260409020546001600160a01b031681565b6001546001600160a01b031681565b6001546001600160a01b03163314610532576040805162461bcd60e51b815260206004820152601860248201527f6e6f74207468652070656e64696e6720676f7665726e6f720000000000000000604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000081029190911790915560408051918252517fd345d81ce68c70b119a17eee79dc1421700bd9cb21ca148a62dc90983964e82f916020908290030190a1565b6000546201000090046001600160a01b031633146105ed576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b600180546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f964dea888b00b2ab53f13dfe7ca334b46e99338c222ae232d98547a1da019f609181900360200190a150565b3b15159056fea2646970667358221220a918d99521f421979c2d0b7e33390c0a61d7a22a9bf7ea557f755bf7c9d8964c64736f6c634300060c0033",
  "deployedSourceMap": "130:1038:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:23:22;;;:::i;:::-;;;;-1:-1:-1;;;;;321:23:22;;;;;;;;;;;;;;969:197:34;;;;;;;;;;;;;;;;-1:-1:-1;969:197:34;-1:-1:-1;;;;;969:197:34;;:::i;:::-;;;;;;;;;;;;;;;;510:313;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:313:34;;-1:-1:-1;510:313:34;-1:-1:-1;510:313:34;:::i;:::-;;237:41;;;;;;;;;;;;;;;;-1:-1:-1;237:41:34;-1:-1:-1;;;;;237:41:34;;:::i;373:30:22:-;;;:::i;1234:210::-;;;:::i;981:163::-;;;;;;;;;;;;;;;;-1:-1:-1;981:163:22;-1:-1:-1;;;;;981:163:22;;:::i;321:23::-;;;;;;-1:-1:-1;;;;;321:23:22;;:::o;969:197:34:-;-1:-1:-1;;;;;1069:13:34;;;1035:4;1069:13;;;:6;:13;;;;;;;;;1057:43;;-1:-1:-1;;;1057:43:34;;;;;;;;;;;1035:4;;;;1069:13;;;1057:36;;:43;;;;;1069:13;;1057:43;;;;;;1069:13;1057:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1057:43:34;;-1:-1:-1;1114:7:34;1106:40;;;;;-1:-1:-1;;;1106:40:34;;;;;;;;;;;;-1:-1:-1;;;1106:40:34;;;;;;;;;;;;;;;1159:2;969:197;-1:-1:-1;;969:197:34:o;510:313::-;566:8:22;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;;;;614:31:34;;::::1;606:63;;;::::0;;-1:-1:-1;;;606:63:34;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;606:63:34;;;;;;;;;;;;;::::1;;680:8;675:144;694:19:::0;;::::1;675:144;;;752:7;;760:3;752:12;;;;;;;;;;;;;-1:-1:-1::0;;;;;752:12:34::1;730:6;:19;737:6;;744:3;737:11;;;;;;;;;;;;;-1:-1:-1::0;;;;;737:11:34::1;-1:-1:-1::0;;;;;730:19:34::1;-1:-1:-1::0;;;;;730:19:34::1;;;;;;;;;;;;;:34;;;;;-1:-1:-1::0;;;;;730:34:34::1;;;;;-1:-1:-1::0;;;;;730:34:34::1;;;;;;786:6;;793:3;786:11;;;;;;;;;;;;;-1:-1:-1::0;;;;;786:11:34::1;-1:-1:-1::0;;;;;777:35:34::1;;799:7;;807:3;799:12;;;;;;;;;;;;;-1:-1:-1::0;;;;;799:12:34::1;777:35;;;;-1:-1:-1::0;;;;;777:35:34::1;;;;;;;;;;;;;;;715:5;;675:144;;;;510:313:::0;;;;:::o;237:41::-;;;;;;;;;;;;-1:-1:-1;;;;;237:41:34;;:::o;373:30:22:-;;;-1:-1:-1;;;;;373:30:22;;:::o;1234:210::-;1297:15;;-1:-1:-1;;;;;1297:15:22;1283:10;:29;1275:66;;;;;-1:-1:-1;;;1275:66:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:15;:28;;-1:-1:-1;;;;;;1347:28:22;;;-1:-1:-1;1381:21:22;;-1:-1:-1;;;;;;1381:21:22;1392:10;1381:21;;;;;;;;;;1413:26;;;;;;;;;;;;;;;;;1234:210::o;981:163::-;566:8;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;;;;1058:15:::1;:34:::0;;-1:-1:-1;;;;;1058:34:22;::::1;-1:-1:-1::0;;;;;;1058:34:22;;::::1;::::0;::::1;::::0;;;1103:36:::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;981:163:::0;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept to become the new governor. Must be called by the pending governor."
      },
      "getCELOPx(address)": {
        "details": "Return the value of the given input as ETH per unit, multiplied by 2**112.",
        "params": {
          "token": "The ERC-20 token to check the value."
        }
      },
      "setPendingGovernor(address)": {
        "details": "Set the pending governor, which will be the governor once accepted.",
        "params": {
          "_pendingGovernor": "The address to become the pending governor."
        }
      },
      "setRoute(address[],address[])": {
        "details": "Set oracle source routes for tokens",
        "params": {
          "targets": "List of oracle source routes",
          "tokens": "List of tokens"
        }
      }
    },
    "version": 1
  },
  "offset": [
    130,
    1168
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7409659 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xD7409659 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xE58BB639 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xF235757F EQ PUSH2 0x1D8 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x11E56AFF EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x573F775A EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x8A PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x595 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x11E56AFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP1 MLOAD SWAP3 SWAP5 DUP6 SWAP5 SWAP2 AND SWAP3 PUSH4 0x11E56AFF SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x284 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x2E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x7072696365206F7261636C65206661696C757265 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x345 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xD2DCC6DEDCE6D2E6E8CADCE840D8CADCCEE8D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A2 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x3A6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x42 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x3C6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x426 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA8C96090E146CE1076EFA81E5424D56E13D5C3854943F7926406C12D15D6DBE9 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x46C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x392 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x532 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND CALLER PUSH3 0x10000 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 XOR 0xD9 SWAP6 0x21 DELEGATECALL 0x21 SWAP8 SWAP13 0x2D SIGNEXTEND PUSH31 0x33390C0A61D7A22A9BF7EA557F755BF7C9D8964C64736F6C634300060C0033 ",
  "pcMap": {
    "0": {
      "offset": [
        130,
        1168
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "5": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "6": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "7": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "8": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "12": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "REVERT",
      "path": "34"
    },
    "16": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "17": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "POP",
      "path": "34"
    },
    "18": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "21": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "LT",
      "path": "34"
    },
    "22": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "26": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "29": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "SHR",
      "path": "34"
    },
    "32": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "33": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0xD7409659"
    },
    "38": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "GT",
      "path": "34"
    },
    "39": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "43": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "44": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0xD7409659"
    },
    "49": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "EQ",
      "path": "34"
    },
    "50": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1A2"
    },
    "53": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "54": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "55": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0xE3056A34"
    },
    "60": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "EQ",
      "path": "34"
    },
    "61": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1C8"
    },
    "64": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "65": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "66": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0xE58BB639"
    },
    "71": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "EQ",
      "path": "34"
    },
    "72": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1D0"
    },
    "75": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "76": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "77": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0xF235757F"
    },
    "82": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "EQ",
      "path": "34"
    },
    "83": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1D8"
    },
    "86": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "87": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x7D"
    },
    "90": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMP",
      "path": "34"
    },
    "91": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "92": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "93": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0xC340A24"
    },
    "98": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "EQ",
      "path": "34"
    },
    "99": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "103": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "104": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0x11E56AFF"
    },
    "109": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "EQ",
      "path": "34"
    },
    "110": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xA6"
    },
    "113": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "114": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "115": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0x573F775A"
    },
    "120": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "EQ",
      "path": "34"
    },
    "121": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xDE"
    },
    "124": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "125": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "126": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "DUP1",
      "path": "34"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        130,
        1168
      ],
      "op": "REVERT",
      "path": "34"
    },
    "130": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "131": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A"
    },
    "134": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FE"
    },
    "137": {
      "fn": null,
      "jump": "i",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "138": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "139": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "141": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "DUP1",
      "path": "22"
    },
    "142": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "149": {
      "op": "SHL"
    },
    "150": {
      "op": "SUB"
    },
    "151": {
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "152": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "153": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "DUP3",
      "path": "22"
    },
    "155": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "156": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "157": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "22"
    },
    "159": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "160": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SUB",
      "path": "22"
    },
    "161": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "163": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "ADD",
      "path": "22"
    },
    "164": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "165": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "RETURN",
      "path": "22"
    },
    "166": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "167": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xCC"
    },
    "170": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "172": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "DUP1",
      "path": "34"
    },
    "173": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "174": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "SUB",
      "path": "34"
    },
    "175": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "177": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "DUP2",
      "path": "34"
    },
    "178": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "LT",
      "path": "34"
    },
    "179": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "180": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xBC"
    },
    "183": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "184": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "186": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "DUP1",
      "path": "34"
    },
    "187": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "REVERT",
      "path": "34"
    },
    "188": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "189": {
      "op": "POP"
    },
    "190": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "op": "SUB"
    },
    "199": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "AND",
      "path": "34"
    },
    "200": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x213"
    },
    "203": {
      "fn": "CoreOracle.getCELOPx",
      "jump": "i",
      "offset": [
        969,
        1166
      ],
      "op": "JUMP",
      "path": "34"
    },
    "204": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "205": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "207": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "DUP1",
      "path": "34"
    },
    "208": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "209": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "210": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "DUP3",
      "path": "34"
    },
    "211": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "212": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "213": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "214": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "DUP2",
      "path": "34"
    },
    "215": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "216": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "SUB",
      "path": "34"
    },
    "217": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "219": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "ADD",
      "path": "34"
    },
    "220": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "221": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "RETURN",
      "path": "34"
    },
    "222": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "223": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1A0"
    },
    "226": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "228": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "229": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "230": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SUB",
      "path": "34"
    },
    "231": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "233": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP2",
      "path": "34"
    },
    "234": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "LT",
      "path": "34"
    },
    "235": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "236": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xF4"
    },
    "239": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "240": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "242": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "243": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "REVERT",
      "path": "34"
    },
    "244": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "245": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP2",
      "path": "34"
    },
    "246": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "247": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "248": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "250": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP2",
      "path": "34"
    },
    "251": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "252": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP2",
      "path": "34"
    },
    "253": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "254": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH5",
      "path": "34",
      "value": "0x100000000"
    },
    "260": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP2",
      "path": "34"
    },
    "261": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "262": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "263": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x10F"
    },
    "266": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "267": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "269": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "270": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "REVERT",
      "path": "34"
    },
    "271": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "272": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP3",
      "path": "34"
    },
    "273": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "274": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP4",
      "path": "34"
    },
    "275": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "277": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP3",
      "path": "34"
    },
    "278": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "279": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "280": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "281": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x121"
    },
    "284": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "285": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "287": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "288": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "REVERT",
      "path": "34"
    },
    "289": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "290": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "291": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "292": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "293": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "295": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "296": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "297": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP5",
      "path": "34"
    },
    "298": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "300": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP4",
      "path": "34"
    },
    "301": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "MUL",
      "path": "34"
    },
    "302": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP5",
      "path": "34"
    },
    "303": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "304": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "305": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH5",
      "path": "34",
      "value": "0x100000000"
    },
    "311": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP4",
      "path": "34"
    },
    "312": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "313": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "OR",
      "path": "34"
    },
    "314": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "315": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x143"
    },
    "318": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "319": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "321": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "322": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "REVERT",
      "path": "34"
    },
    "323": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "324": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "325": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "326": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "327": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "328": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "329": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "330": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "332": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP2",
      "path": "34"
    },
    "333": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "334": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "335": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "336": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH5",
      "path": "34",
      "value": "0x100000000"
    },
    "342": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP2",
      "path": "34"
    },
    "343": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "344": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "345": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x161"
    },
    "348": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "349": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "351": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "352": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "REVERT",
      "path": "34"
    },
    "353": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "354": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP3",
      "path": "34"
    },
    "355": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "356": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP4",
      "path": "34"
    },
    "357": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "359": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP3",
      "path": "34"
    },
    "360": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "361": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "362": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "363": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x173"
    },
    "366": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "367": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "369": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "370": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "REVERT",
      "path": "34"
    },
    "371": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "372": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "373": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "374": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "375": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "377": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "378": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "379": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP5",
      "path": "34"
    },
    "380": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "382": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP4",
      "path": "34"
    },
    "383": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "MUL",
      "path": "34"
    },
    "384": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP5",
      "path": "34"
    },
    "385": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ADD",
      "path": "34"
    },
    "386": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "387": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH5",
      "path": "34",
      "value": "0x100000000"
    },
    "393": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP4",
      "path": "34"
    },
    "394": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "GT",
      "path": "34"
    },
    "395": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "OR",
      "path": "34"
    },
    "396": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "397": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x195"
    },
    "400": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "401": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "403": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "DUP1",
      "path": "34"
    },
    "404": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "REVERT",
      "path": "34"
    },
    "405": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "406": {
      "op": "POP"
    },
    "407": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "408": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "409": {
      "op": "POP"
    },
    "410": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2ED"
    },
    "415": {
      "fn": "CoreOracle.setRoute",
      "jump": "i",
      "offset": [
        510,
        823
      ],
      "op": "JUMP",
      "path": "34"
    },
    "416": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "417": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "STOP",
      "path": "34"
    },
    "418": {
      "offset": [
        237,
        278
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "419": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x8A"
    },
    "422": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "424": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "DUP1",
      "path": "34"
    },
    "425": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "426": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "SUB",
      "path": "34"
    },
    "427": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "429": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "DUP2",
      "path": "34"
    },
    "430": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "LT",
      "path": "34"
    },
    "431": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "432": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1B8"
    },
    "435": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "436": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "438": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "DUP1",
      "path": "34"
    },
    "439": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "REVERT",
      "path": "34"
    },
    "440": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "441": {
      "op": "POP"
    },
    "442": {
      "offset": [
        237,
        278
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "offset": [
        237,
        278
      ],
      "op": "AND",
      "path": "34"
    },
    "452": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4A9"
    },
    "455": {
      "fn": "CoreOracle.setRoute",
      "jump": "i",
      "offset": [
        237,
        278
      ],
      "op": "JUMP",
      "path": "34"
    },
    "456": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "457": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A"
    },
    "460": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4C4"
    },
    "463": {
      "fn": "CoreOracle.setRoute",
      "jump": "i",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "464": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "465": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A0"
    },
    "468": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4D3"
    },
    "471": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "472": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "473": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A0"
    },
    "476": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "478": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "22"
    },
    "479": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "480": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "SUB",
      "path": "22"
    },
    "481": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "483": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP2",
      "path": "22"
    },
    "484": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "LT",
      "path": "22"
    },
    "485": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "486": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EE"
    },
    "489": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "490": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "492": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "22"
    },
    "493": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "REVERT",
      "path": "22"
    },
    "494": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "495": {
      "op": "POP"
    },
    "496": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "503": {
      "op": "SHL"
    },
    "504": {
      "op": "SUB"
    },
    "505": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "AND",
      "path": "22"
    },
    "506": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x595"
    },
    "509": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "510": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "511": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "513": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "514": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "518": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "519": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "DIV",
      "path": "22"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "op": "SUB"
    },
    "528": {
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "22"
    },
    "529": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "22"
    },
    "530": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "531": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "538": {
      "op": "SHL"
    },
    "539": {
      "op": "SUB"
    },
    "540": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP1",
      "path": "34"
    },
    "541": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP3",
      "path": "34"
    },
    "542": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "AND",
      "path": "34"
    },
    "543": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1035,
        1039
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "545": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP2",
      "path": "34"
    },
    "546": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP2",
      "path": "34"
    },
    "547": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "548": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1075
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x42"
    },
    "550": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "552": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "553": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP2",
      "path": "34"
    },
    "554": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "555": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "557": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP1",
      "path": "34"
    },
    "558": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP4",
      "path": "34"
    },
    "559": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "560": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "561": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP2",
      "path": "34"
    },
    "562": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "563": {
      "op": "PUSH4",
      "value": "0x11E56AFF"
    },
    "568": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "570": {
      "op": "SHL"
    },
    "571": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP2",
      "path": "34"
    },
    "572": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "573": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "575": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP2",
      "path": "34"
    },
    "576": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ADD",
      "path": "34"
    },
    "577": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP6",
      "path": "34"
    },
    "578": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "579": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP6",
      "path": "34"
    },
    "580": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "581": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "582": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "583": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1035,
        1039
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "584": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1035,
        1039
      ],
      "op": "SWAP5",
      "path": "34"
    },
    "585": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1035,
        1039
      ],
      "op": "DUP6",
      "path": "34"
    },
    "586": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1035,
        1039
      ],
      "op": "SWAP5",
      "path": "34"
    },
    "587": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "588": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "AND",
      "path": "34"
    },
    "589": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "590": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1093
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0x11E56AFF"
    },
    "595": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1093
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "596": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x24"
    },
    "598": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP1",
      "path": "34"
    },
    "599": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP5",
      "path": "34"
    },
    "600": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ADD",
      "path": "34"
    },
    "601": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "602": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "603": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "604": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "605": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP3",
      "path": "34"
    },
    "606": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "607": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SUB",
      "path": "34"
    },
    "608": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ADD",
      "path": "34"
    },
    "609": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP2",
      "path": "34"
    },
    "610": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1069,
        1082
      ],
      "op": "DUP7",
      "path": "34"
    },
    "611": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP1",
      "path": "34"
    },
    "612": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "EXTCODESIZE",
      "path": "34"
    },
    "613": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "614": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP1",
      "path": "34"
    },
    "615": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "616": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x270"
    },
    "619": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "620": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "622": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP1",
      "path": "34"
    },
    "623": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "REVERT",
      "path": "34"
    },
    "624": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "625": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "POP",
      "path": "34"
    },
    "626": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "GAS",
      "path": "34"
    },
    "627": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "STATICCALL",
      "path": "34"
    },
    "628": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "629": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP1",
      "path": "34"
    },
    "630": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "631": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x284"
    },
    "634": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "635": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "RETURNDATASIZE",
      "path": "34"
    },
    "636": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "638": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP1",
      "path": "34"
    },
    "639": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "RETURNDATACOPY",
      "path": "34"
    },
    "640": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "RETURNDATASIZE",
      "path": "34"
    },
    "641": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "643": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "REVERT",
      "path": "34"
    },
    "644": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "645": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "POP",
      "path": "34"
    },
    "646": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "POP",
      "path": "34"
    },
    "647": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "POP",
      "path": "34"
    },
    "648": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "POP",
      "path": "34"
    },
    "649": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "651": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "652": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "RETURNDATASIZE",
      "path": "34"
    },
    "653": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "655": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP2",
      "path": "34"
    },
    "656": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "LT",
      "path": "34"
    },
    "657": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "658": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x29A"
    },
    "661": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "662": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "664": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "DUP1",
      "path": "34"
    },
    "665": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "REVERT",
      "path": "34"
    },
    "666": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "669": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1057,
        1100
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "branch": 13,
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1114,
        1121
      ],
      "op": "DUP1",
      "path": "34",
      "statement": 0
    },
    "672": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2E7"
    },
    "675": {
      "branch": 13,
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "676": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "678": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "DUP1",
      "path": "34"
    },
    "679": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "DUP2",
      "path": "34"
    },
    "688": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "689": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "691": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "693": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "DUP3",
      "path": "34"
    },
    "694": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "ADD",
      "path": "34"
    },
    "695": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "696": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x14"
    },
    "698": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x24"
    },
    "700": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "DUP3",
      "path": "34"
    },
    "701": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "ADD",
      "path": "34"
    },
    "702": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "703": {
      "op": "PUSH20",
      "value": "0x7072696365206F7261636C65206661696C757265"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x44"
    },
    "729": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "DUP3",
      "path": "34"
    },
    "730": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "ADD",
      "path": "34"
    },
    "731": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "732": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "733": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "734": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "735": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "DUP2",
      "path": "34"
    },
    "736": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "737": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "SUB",
      "path": "34"
    },
    "738": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x64"
    },
    "740": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "ADD",
      "path": "34"
    },
    "741": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "742": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "REVERT",
      "path": "34"
    },
    "743": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1106,
        1146
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "744": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        1159,
        1161
      ],
      "op": "SWAP3",
      "path": "34",
      "statement": 1
    },
    "745": {
      "fn": "CoreOracle.getCELOPx",
      "offset": [
        969,
        1166
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "op": "POP"
    },
    "748": {
      "fn": "CoreOracle.getCELOPx",
      "jump": "o",
      "offset": [
        969,
        1166
      ],
      "op": "JUMP",
      "path": "34"
    },
    "749": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "750": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "752": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "753": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "757": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "758": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "765": {
      "op": "SHL"
    },
    "766": {
      "op": "SUB"
    },
    "767": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "768": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "769": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "770": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x345"
    },
    "773": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "774": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "776": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "DUP1",
      "path": "22"
    },
    "777": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "786": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "787": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "789": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "791": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "792": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "793": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "794": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "796": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "798": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "799": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "800": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "801": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "823": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "824": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "825": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "826": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "827": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "828": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "829": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "830": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "831": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "SUB",
      "path": "22"
    },
    "832": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "834": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "835": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "836": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "REVERT",
      "path": "22"
    },
    "837": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "838": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        614,
        645
      ],
      "op": "DUP3",
      "path": "34",
      "statement": 2
    },
    "839": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        614,
        645
      ],
      "op": "DUP2",
      "path": "34"
    },
    "840": {
      "branch": 14,
      "fn": "CoreOracle.setRoute",
      "offset": [
        614,
        645
      ],
      "op": "EQ",
      "path": "34"
    },
    "841": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x38F"
    },
    "844": {
      "branch": 14,
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "845": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "847": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "DUP1",
      "path": "34"
    },
    "848": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "849": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "853": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "855": {
      "op": "SHL"
    },
    "856": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "DUP2",
      "path": "34"
    },
    "857": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "858": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "860": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "862": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "DUP3",
      "path": "34"
    },
    "863": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "ADD",
      "path": "34"
    },
    "864": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "865": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x13"
    },
    "867": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x24"
    },
    "869": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "DUP3",
      "path": "34"
    },
    "870": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "ADD",
      "path": "34"
    },
    "871": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "872": {
      "op": "PUSH19",
      "value": "0xD2DCC6DEDCE6D2E6E8CADCE840D8CADCCEE8D"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x6B"
    },
    "894": {
      "op": "SHL"
    },
    "895": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x44"
    },
    "897": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "DUP3",
      "path": "34"
    },
    "898": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "ADD",
      "path": "34"
    },
    "899": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "900": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "901": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "902": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "903": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "DUP2",
      "path": "34"
    },
    "904": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "905": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "SUB",
      "path": "34"
    },
    "906": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x64"
    },
    "908": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "ADD",
      "path": "34"
    },
    "909": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "910": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "REVERT",
      "path": "34"
    },
    "911": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        606,
        669
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "912": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        680,
        688
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "914": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "915": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        694,
        713
      ],
      "op": "DUP4",
      "path": "34"
    },
    "916": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        694,
        713
      ],
      "op": "DUP2",
      "path": "34"
    },
    "917": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        694,
        713
      ],
      "op": "LT",
      "path": "34"
    },
    "918": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "919": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4A2"
    },
    "922": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "923": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        759
      ],
      "op": "DUP3",
      "path": "34",
      "statement": 3
    },
    "924": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        759
      ],
      "op": "DUP3",
      "path": "34"
    },
    "925": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        760,
        763
      ],
      "op": "DUP3",
      "path": "34"
    },
    "926": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "DUP2",
      "path": "34"
    },
    "927": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "DUP2",
      "path": "34"
    },
    "928": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "LT",
      "path": "34"
    },
    "929": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3A6"
    },
    "932": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "933": {
      "dev": "Index out of range",
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "INVALID",
      "path": "34"
    },
    "934": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "935": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "936": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "POP",
      "path": "34"
    },
    "937": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "939": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "MUL",
      "path": "34"
    },
    "940": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "ADD",
      "path": "34"
    },
    "941": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "948": {
      "op": "SHL"
    },
    "949": {
      "op": "SUB"
    },
    "950": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        752,
        764
      ],
      "op": "AND",
      "path": "34"
    },
    "951": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        736
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x42"
    },
    "953": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "955": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        743
      ],
      "op": "DUP8",
      "path": "34"
    },
    "956": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        743
      ],
      "op": "DUP8",
      "path": "34"
    },
    "957": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        744,
        747
      ],
      "op": "DUP6",
      "path": "34"
    },
    "958": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "DUP2",
      "path": "34"
    },
    "959": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "DUP2",
      "path": "34"
    },
    "960": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "LT",
      "path": "34"
    },
    "961": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3C6"
    },
    "964": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "965": {
      "dev": "Index out of range",
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "INVALID",
      "path": "34"
    },
    "966": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "967": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "968": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "POP",
      "path": "34"
    },
    "969": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "971": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "MUL",
      "path": "34"
    },
    "972": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "ADD",
      "path": "34"
    },
    "973": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "980": {
      "op": "SHL"
    },
    "981": {
      "op": "SUB"
    },
    "982": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        737,
        748
      ],
      "op": "AND",
      "path": "34"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "SUB"
    },
    "991": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "AND",
      "path": "34"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "SUB"
    },
    "1000": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "AND",
      "path": "34"
    },
    "1001": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1002": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "1003": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "1005": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "ADD",
      "path": "34"
    },
    "1006": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1007": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1008": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "1009": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "1011": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "ADD",
      "path": "34"
    },
    "1012": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1014": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "1015": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        749
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1017": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x100"
    },
    "1020": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "EXP",
      "path": "34"
    },
    "1021": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1022": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1023": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1030": {
      "op": "SHL"
    },
    "1031": {
      "op": "SUB"
    },
    "1032": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "MUL",
      "path": "34"
    },
    "1033": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "NOT",
      "path": "34"
    },
    "1034": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "AND",
      "path": "34"
    },
    "1035": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1036": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "op": "SUB"
    },
    "1045": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "AND",
      "path": "34"
    },
    "1046": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "MUL",
      "path": "34"
    },
    "1047": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "OR",
      "path": "34"
    },
    "1048": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1049": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "1050": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        730,
        764
      ],
      "op": "POP",
      "path": "34"
    },
    "1051": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        792
      ],
      "op": "DUP5",
      "path": "34",
      "statement": 4
    },
    "1052": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        792
      ],
      "op": "DUP5",
      "path": "34"
    },
    "1053": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        793,
        796
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1054": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1055": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1056": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "LT",
      "path": "34"
    },
    "1057": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x426"
    },
    "1060": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1061": {
      "dev": "Index out of range",
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "INVALID",
      "path": "34"
    },
    "1062": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1063": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1064": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "POP",
      "path": "34"
    },
    "1065": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "1067": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "MUL",
      "path": "34"
    },
    "1068": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "ADD",
      "path": "34"
    },
    "1069": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        786,
        797
      ],
      "op": "AND",
      "path": "34"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "AND",
      "path": "34"
    },
    "1088": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0xA8C96090E146CE1076EFA81E5424D56E13D5C3854943F7926406C12D15D6DBE9"
    },
    "1121": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        806
      ],
      "op": "DUP5",
      "path": "34"
    },
    "1122": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        806
      ],
      "op": "DUP5",
      "path": "34"
    },
    "1123": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        807,
        810
      ],
      "op": "DUP5",
      "path": "34"
    },
    "1124": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1125": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1126": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "LT",
      "path": "34"
    },
    "1127": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x46C"
    },
    "1130": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1131": {
      "dev": "Index out of range",
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "INVALID",
      "path": "34"
    },
    "1132": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1133": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1134": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "POP",
      "path": "34"
    },
    "1135": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "1137": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "MUL",
      "path": "34"
    },
    "1138": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "ADD",
      "path": "34"
    },
    "1139": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        799,
        811
      ],
      "op": "AND",
      "path": "34"
    },
    "1149": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "1151": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "1152": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1153": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "op": "SUB"
    },
    "1162": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "AND",
      "path": "34"
    },
    "1163": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1164": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "1165": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "1167": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "ADD",
      "path": "34"
    },
    "1168": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1169": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "POP",
      "path": "34"
    },
    "1170": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "POP",
      "path": "34"
    },
    "1171": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "1173": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "1174": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1175": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1176": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "SUB",
      "path": "34"
    },
    "1177": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1178": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        777,
        812
      ],
      "op": "LOG2",
      "path": "34"
    },
    "1179": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        715,
        720
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 5,
      "value": "0x1"
    },
    "1181": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        715,
        720
      ],
      "op": "ADD",
      "path": "34"
    },
    "1182": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x392"
    },
    "1185": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1186": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1187": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        675,
        819
      ],
      "op": "POP",
      "path": "34"
    },
    "1188": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "POP",
      "path": "34"
    },
    "1189": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "POP",
      "path": "34"
    },
    "1190": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "POP",
      "path": "34"
    },
    "1191": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        510,
        823
      ],
      "op": "POP",
      "path": "34"
    },
    "1192": {
      "fn": "CoreOracle.setRoute",
      "jump": "o",
      "offset": [
        510,
        823
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1193": {
      "offset": [
        237,
        278
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1194": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x42"
    },
    "1196": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "1198": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "1199": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1201": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1202": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1203": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "1204": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "1206": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1207": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "1208": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "op": "SUB"
    },
    "1217": {
      "offset": [
        237,
        278
      ],
      "op": "AND",
      "path": "34"
    },
    "1218": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        237,
        278
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1219": {
      "fn": "CoreOracle.setRoute",
      "jump": "o",
      "offset": [
        237,
        278
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1220": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1221": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        373,
        403
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1223": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        373,
        403
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1230": {
      "op": "SHL"
    },
    "1231": {
      "op": "SUB"
    },
    "1232": {
      "offset": [
        373,
        403
      ],
      "op": "AND",
      "path": "22"
    },
    "1233": {
      "fn": "CoreOracle.setRoute",
      "offset": [
        373,
        403
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1234": {
      "fn": "CoreOracle.setRoute",
      "jump": "o",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1235": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1236": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 6,
      "value": "0x1"
    },
    "1238": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "AND",
      "path": "22"
    },
    "1248": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1293
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1249": {
      "branch": 15,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1312
      ],
      "op": "EQ",
      "path": "22"
    },
    "1250": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x532"
    },
    "1253": {
      "branch": 15,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1254": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1256": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1257": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1266": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1267": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1269": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1271": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1272": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1273": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1274": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x18"
    },
    "1276": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1278": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1279": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1280": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1281": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000"
    },
    "1314": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1316": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1317": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1318": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1319": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1320": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1321": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1322": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1323": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1324": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SUB",
      "path": "22"
    },
    "1325": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1327": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1328": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1329": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1330": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1331": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1362
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 7,
      "value": "0x1"
    },
    "1333": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1334": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "op": "NOT"
    },
    "1344": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "AND",
      "path": "22"
    },
    "1345": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1346": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1349": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 8
    },
    "1350": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1351": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "SUB"
    },
    "1361": {
      "op": "NOT"
    },
    "1362": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "AND",
      "path": "22"
    },
    "1363": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1392,
        1402
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1364": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1368": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1369": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "MUL",
      "path": "22"
    },
    "1370": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1371": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1372": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1373": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "OR",
      "path": "22"
    },
    "1374": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1375": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1376": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1377": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 9,
      "value": "0x40"
    },
    "1379": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1380": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1381": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1382": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1383": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1384": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1385": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F"
    },
    "1418": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1419": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1421": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1422": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1423": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1424": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SUB",
      "path": "22"
    },
    "1425": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "ADD",
      "path": "22"
    },
    "1426": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1427": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "LOG1",
      "path": "22"
    },
    "1428": {
      "fn": "Governable.acceptGovernor",
      "jump": "o",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1429": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1430": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1432": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1433": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1437": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1438": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "1448": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1449": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "1450": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5ED"
    },
    "1453": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1454": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1456": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1457": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1464": {
      "op": "SHL"
    },
    "1465": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1466": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1467": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1469": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1471": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1472": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1473": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1474": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "1476": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1478": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1479": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1480": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1481": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1503": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1504": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1505": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1506": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1507": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1508": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1509": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1510": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1511": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SUB",
      "path": "22"
    },
    "1512": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1514": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1515": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1516": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1517": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1518": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1073
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 10,
      "value": "0x1"
    },
    "1520": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1521": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1528": {
      "op": "SHL"
    },
    "1529": {
      "op": "SUB"
    },
    "1530": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1531": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1538": {
      "op": "SHL"
    },
    "1539": {
      "op": "SUB"
    },
    "1540": {
      "op": "NOT"
    },
    "1541": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1542": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1543": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "1544": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1545": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "OR",
      "path": "22"
    },
    "1546": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1547": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1548": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1549": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 11,
      "value": "0x40"
    },
    "1551": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1552": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1553": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1554": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1555": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1556": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1557": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60"
    },
    "1590": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1591": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1592": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1593": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SUB",
      "path": "22"
    },
    "1594": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1596": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "ADD",
      "path": "22"
    },
    "1597": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1598": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "LOG1",
      "path": "22"
    },
    "1599": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "POP",
      "path": "22"
    },
    "1600": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1601": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1602": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1603": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16",
      "statement": 12
    },
    "1604": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1605": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1606": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "16"
    }
  },
  "sha1": "645929b764c39ba56d935e5a1fe76407e8bb8838",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport '../../interfaces/IBaseOracle.sol';\nimport '../Governable.sol';\n\ncontract CoreOracle is IBaseOracle, Governable {\n  event SetRoute(address indexed token, address route);\n  mapping(address => address) public routes; // Mapping from token to oracle source\n\n  constructor() public {\n    __Governable__init();\n  }\n\n  /// @dev Set oracle source routes for tokens\n  /// @param tokens List of tokens\n  /// @param targets List of oracle source routes\n  function setRoute(address[] calldata tokens, address[] calldata targets) external onlyGov {\n    require(tokens.length == targets.length, 'inconsistent length');\n    for (uint idx = 0; idx < tokens.length; idx++) {\n      routes[tokens[idx]] = targets[idx];\n      emit SetRoute(tokens[idx], targets[idx]);\n    }\n  }\n\n  /// @dev Return the value of the given input as ETH per unit, multiplied by 2**112.\n  /// @param token The ERC-20 token to check the value.\n  function getCELOPx(address token) external view override returns (uint) {\n    uint px = IBaseOracle(routes[token]).getCELOPx(token);\n    require(px != 0, 'price oracle failure');\n    return px;\n  }\n}\n",
  "sourceMap": "130:1038:34:-:0;;;322:52;;;;;;;;;-1:-1:-1;349:20:34;:18;:20::i;:::-;130:1038;;673:151:22;1501:13:7;;;;;;;;:33;;-1:-1:-1;1518:16:7;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:7;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:7;;;;;1727:19;1709:4;1727:19;;;1659:98;730:8:22::1;:21:::0;;-1:-1:-1;;;;;;730:21:22::1;741:10;730:21:::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;757:28:22;;-1:-1:-1;;;;;;757:28:22::1;::::0;;796:23:::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;::::1;1783:14:7::0;1779:66;;;1829:5;1813:21;;-1:-1:-1;;1813:21:7;;;1779:66;673:151:22;:::o;1941:112:7:-;1989:4;2013:33;2040:4;2013:18;;;;;:33;;:::i;:::-;2012:34;2005:41;;1941:112;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o;130:1038:34:-;;;;;;;",
  "sourcePath": "contracts/oracle/CoreOracle.sol",
  "type": "contract"
}