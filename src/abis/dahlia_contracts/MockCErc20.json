{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrows",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interestPerYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "repayBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "14": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "28": "contracts/mock/MockCErc20.sol",
    "55": "interfaces/ICErc20.sol",
    "6": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/mock/MockCErc20.sol",
    "exportedSymbols": {
      "MockCErc20": [
        3969
      ]
    },
    "id": 3970,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3731,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "id": 3732,
        "nodeType": "ImportDirective",
        "scope": 3970,
        "sourceUnit": 14719,
        "src": "25:84:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 3733,
        "nodeType": "ImportDirective",
        "scope": 3970,
        "sourceUnit": 14519,
        "src": "110:79:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ICErc20.sol",
        "file": "../../interfaces/ICErc20.sol",
        "id": 3734,
        "nodeType": "ImportDirective",
        "scope": 3970,
        "sourceUnit": 15248,
        "src": "191:38:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3735,
              "name": "ICErc20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15247,
              "src": "254:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICErc20_$15247",
                "typeString": "contract ICErc20"
              }
            },
            "id": 3736,
            "nodeType": "InheritanceSpecifier",
            "src": "254:7:28"
          }
        ],
        "contractDependencies": [
          15247
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3969,
        "linearizedBaseContracts": [
          3969,
          15247
        ],
        "name": "MockCErc20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3739,
            "libraryName": {
              "contractScope": null,
              "id": 3737,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14518,
              "src": "272:8:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$14518",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "266:24:28",
            "typeName": {
              "id": 3738,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "285:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 3741,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3969,
            "src": "294:19:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$14718",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3740,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14718,
              "src": "294:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$14718",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c3efd2f",
            "id": 3744,
            "mutability": "mutable",
            "name": "interestPerYear",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3969,
            "src": "317:35:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3742,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "317:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130653136",
              "id": 3743,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "347:5:28",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "10e16"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "54a5706f",
            "id": 3748,
            "mutability": "mutable",
            "name": "borrows",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3969,
            "src": "373:39:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3747,
              "keyType": {
                "id": 3745,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "381:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "373:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3746,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "392:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "952ca92c",
            "id": 3752,
            "mutability": "mutable",
            "name": "lastBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3969,
            "src": "416:41:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3751,
              "keyType": {
                "id": 3749,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "424:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "416:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3750,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "435:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3761,
              "nodeType": "Block",
              "src": "496:25:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3757,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3741,
                      "src": "502:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14718",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3758,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3754,
                      "src": "510:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$14718",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "502:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14718",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3760,
                  "nodeType": "ExpressionStatement",
                  "src": "502:14:28"
                }
              ]
            },
            "documentation": null,
            "id": 3762,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3754,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3762,
                  "src": "474:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$14718",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3753,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 14718,
                    "src": "474:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$14718",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:15:28"
            },
            "returnParameters": {
              "id": 3756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:28"
            },
            "scope": 3969,
            "src": "462:59:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15192
            ],
            "body": {
              "id": 3770,
              "nodeType": "Block",
              "src": "579:19:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "38",
                    "id": 3768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "592:1:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "functionReturnParameters": 3767,
                  "id": 3769,
                  "nodeType": "Return",
                  "src": "585:8:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "313ce567",
            "id": 3771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3764,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "554:8:28"
            },
            "parameters": {
              "id": 3763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:2:28"
            },
            "returnParameters": {
              "id": 3767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3766,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3771,
                  "src": "572:5:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3765,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "571:7:28"
            },
            "scope": 3969,
            "src": "525:73:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15197
            ],
            "body": {
              "id": 3782,
              "nodeType": "Block",
              "src": "660:32:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3779,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3741,
                        "src": "681:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 3778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "673:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3777,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "673:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 3780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:14:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3776,
                  "id": 3781,
                  "nodeType": "Return",
                  "src": "666:21:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6f307dc3",
            "id": 3783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3773,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "633:8:28"
            },
            "parameters": {
              "id": 3772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:2:28"
            },
            "returnParameters": {
              "id": 3776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3775,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3783,
                  "src": "651:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:9:28"
            },
            "scope": 3969,
            "src": "602:90:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15204
            ],
            "body": {
              "id": 3793,
              "nodeType": "Block",
              "src": "760:42:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "796:1:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 3790,
                  "id": 3792,
                  "nodeType": "Return",
                  "src": "789:8:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a0712d68",
            "id": 3794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3787,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "736:8:28"
            },
            "parameters": {
              "id": 3786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3785,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3794,
                  "src": "710:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "709:17:28"
            },
            "returnParameters": {
              "id": 3790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3789,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3794,
                  "src": "754:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3788,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "753:6:28"
            },
            "scope": 3969,
            "src": "696:106:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15211
            ],
            "body": {
              "id": 3804,
              "nodeType": "Block",
              "src": "874:42:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "910:1:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 3801,
                  "id": 3803,
                  "nodeType": "Return",
                  "src": "903:8:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "db006a75",
            "id": 3805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3798,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "850:8:28"
            },
            "parameters": {
              "id": 3797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3796,
                  "mutability": "mutable",
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "822:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3795,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "821:19:28"
            },
            "returnParameters": {
              "id": 3801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3800,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "868:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3799,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "867:6:28"
            },
            "scope": 3969,
            "src": "806:110:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15218
            ],
            "body": {
              "id": 3815,
              "nodeType": "Block",
              "src": "991:42:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1027:1:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 3812,
                  "id": 3814,
                  "nodeType": "Return",
                  "src": "1020:8:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "70a08231",
            "id": 3816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3809,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "967:8:28"
            },
            "parameters": {
              "id": 3808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3807,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3816,
                  "src": "939:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "938:14:28"
            },
            "returnParameters": {
              "id": 3812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3811,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3816,
                  "src": "985:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3810,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:6:28"
            },
            "scope": 3969,
            "src": "920:113:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15225
            ],
            "body": {
              "id": 3876,
              "nodeType": "Block",
              "src": "1115:300:28",
              "statements": [
                {
                  "assignments": [
                    3825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3825,
                      "mutability": "mutable",
                      "name": "timePast",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3876,
                      "src": "1121:13:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3824,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3831,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3826,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "1137:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3827,
                        "name": "lastBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3752,
                        "src": "1143:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3829,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3828,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3818,
                        "src": "1153:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1143:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1137:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1121:40:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3832,
                      "name": "timePast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3825,
                      "src": "1171:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1182:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1171:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3871,
                  "nodeType": "IfStatement",
                  "src": "1167:215:28",
                  "trueBody": {
                    "id": 3870,
                    "nodeType": "Block",
                    "src": "1185:197:28",
                    "statements": [
                      {
                        "assignments": [
                          3836
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3836,
                            "mutability": "mutable",
                            "name": "interest",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3870,
                            "src": "1193:13:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3835,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1193:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3852,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "333635",
                              "id": 3850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1277:8:28",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_31536000_by_1",
                                "typeString": "int_const 31536000"
                              },
                              "value": "365"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_31536000_by_1",
                                "typeString": "int_const 31536000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3847,
                                  "name": "timePast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3825,
                                  "src": "1263:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030653136",
                                      "id": 3844,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1251:6:28",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "100e16"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 3841,
                                          "name": "interestPerYear",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3744,
                                          "src": "1230:15:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 3837,
                                            "name": "borrows",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3748,
                                            "src": "1209:7:28",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 3839,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 3838,
                                            "name": "account",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3818,
                                            "src": "1217:7:28",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1209:16:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 3840,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 14401,
                                        "src": "1209:20:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 3842,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1209:37:28",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3843,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14423,
                                    "src": "1209:41:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1209:49:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14401,
                                "src": "1209:53:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1209:63:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14423,
                            "src": "1209:67:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1209:77:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1193:93:28"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3853,
                              "name": "borrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3748,
                              "src": "1294:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3855,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3854,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3818,
                              "src": "1302:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1294:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3860,
                                "name": "interest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3836,
                                "src": "1334:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 3856,
                                  "name": "borrows",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3748,
                                  "src": "1313:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 3858,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 3857,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3818,
                                  "src": "1321:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1313:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14345,
                              "src": "1313:20:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1313:30:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1294:49:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3863,
                        "nodeType": "ExpressionStatement",
                        "src": "1294:49:28"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3864,
                              "name": "lastBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3752,
                              "src": "1351:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3866,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3865,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3818,
                              "src": "1361:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1351:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3867,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "1372:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1351:24:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3869,
                        "nodeType": "ExpressionStatement",
                        "src": "1351:24:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3872,
                      "name": "borrows",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3748,
                      "src": "1394:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3874,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3873,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3818,
                      "src": "1402:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1394:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3823,
                  "id": 3875,
                  "nodeType": "Return",
                  "src": "1387:23:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "17bfdfbc",
            "id": 3877,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowBalanceCurrent",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3820,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1091:8:28"
            },
            "parameters": {
              "id": 3819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3818,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3877,
                  "src": "1067:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1066:17:28"
            },
            "returnParameters": {
              "id": 3823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3822,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3877,
                  "src": "1109:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3821,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1108:6:28"
            },
            "scope": 3969,
            "src": "1037:378:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15232
            ],
            "body": {
              "id": 3889,
              "nodeType": "Block",
              "src": "1503:34:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3885,
                      "name": "borrows",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3748,
                      "src": "1516:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3887,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3886,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3879,
                      "src": "1524:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1516:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3884,
                  "id": 3888,
                  "nodeType": "Return",
                  "src": "1509:23:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "95dd9193",
            "id": 3890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowBalanceStored",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3881,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1479:8:28"
            },
            "parameters": {
              "id": 3880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3879,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3890,
                  "src": "1448:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1447:17:28"
            },
            "returnParameters": {
              "id": 3884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3883,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3890,
                  "src": "1497:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3882,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1496:6:28"
            },
            "scope": 3969,
            "src": "1419:118:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15239
            ],
            "body": {
              "id": 3926,
              "nodeType": "Block",
              "src": "1609:168:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3899,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1636:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1636:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3898,
                      "name": "borrowBalanceCurrent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3877,
                      "src": "1615:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 3901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3902,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:32:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3906,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1668:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1668:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3908,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "1680:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3903,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3741,
                        "src": "1653:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14667,
                      "src": "1653:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3910,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:40:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3911,
                        "name": "borrows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3748,
                        "src": "1699:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3914,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3912,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1707:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1707:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1699:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3920,
                          "name": "borrowAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3892,
                          "src": "1745:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3915,
                            "name": "borrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3748,
                            "src": "1721:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3918,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3916,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1729:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1729:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1721:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14345,
                        "src": "1721:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1721:37:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1699:59:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3923,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:59:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1771:1:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 3897,
                  "id": 3925,
                  "nodeType": "Return",
                  "src": "1764:8:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c5ebeaec",
            "id": 3927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3894,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1585:8:28"
            },
            "parameters": {
              "id": 3893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3892,
                  "mutability": "mutable",
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3927,
                  "src": "1557:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3891,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1556:19:28"
            },
            "returnParameters": {
              "id": 3897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3896,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3927,
                  "src": "1603:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3895,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1602:6:28"
            },
            "scope": 3969,
            "src": "1541:236:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15246
            ],
            "body": {
              "id": 3967,
              "nodeType": "Block",
              "src": "1853:185:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3936,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1880:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1880:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3935,
                      "name": "borrowBalanceCurrent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3877,
                      "src": "1859:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 3938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3939,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:32:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3943,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1916:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1916:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3947,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1936:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCErc20_$3969",
                              "typeString": "contract MockCErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockCErc20_$3969",
                              "typeString": "contract MockCErc20"
                            }
                          ],
                          "id": 3946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1928:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3945,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1928:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1928:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3949,
                        "name": "repayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3929,
                        "src": "1943:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3940,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3741,
                        "src": "1897:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$14718",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14699,
                      "src": "1897:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:58:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3951,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:58:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3952,
                        "name": "borrows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3748,
                        "src": "1961:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3955,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3953,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1969:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1969:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1961:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3961,
                          "name": "repayAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3929,
                          "src": "2007:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3956,
                            "name": "borrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3748,
                            "src": "1983:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3959,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3957,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1991:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1991:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1983:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14367,
                        "src": "1983:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1983:36:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1961:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3964,
                  "nodeType": "ExpressionStatement",
                  "src": "1961:58:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2032:1:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 3934,
                  "id": 3966,
                  "nodeType": "Return",
                  "src": "2025:8:28"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0e752702",
            "id": 3968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3931,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1829:8:28"
            },
            "parameters": {
              "id": 3930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3929,
                  "mutability": "mutable",
                  "name": "repayAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3968,
                  "src": "1802:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3928,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1801:18:28"
            },
            "returnParameters": {
              "id": 3934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3933,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3968,
                  "src": "1847:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3932,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1846:6:28"
            },
            "scope": 3969,
            "src": "1781:257:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3970,
        "src": "231:1809:28"
      }
    ],
    "src": "0:2041:28"
  },
  "bytecode": "608060405267016345785d8a000060015534801561001c57600080fd5b506040516107603803806107608339818101604052602081101561003f57600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556106ef806100716000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d681461020b578063c5ebeaec14610228578063db006a751461020b578063fc0c546a14610245576100cf565b806370a0823114610199578063952ca92c146101bf57806395dd9193146101e5576100cf565b80630e752702146100d457806317bfdfbc14610103578063313ce5671461012957806354a5706f146101475780635c3efd2f1461016d5780636f307dc314610175575b600080fd5b6100f1600480360360208110156100ea57600080fd5b503561024d565b60408051918252519081900360200190f35b6100f16004803603602081101561011957600080fd5b50356001600160a01b0316610313565b610131610400565b6040805160ff9092168252519081900360200190f35b6100f16004803603602081101561015d57600080fd5b50356001600160a01b0316610405565b6100f1610417565b61017d61041d565b604080516001600160a01b039092168252519081900360200190f35b6100f1600480360360208110156101af57600080fd5b50356001600160a01b031661042c565b6100f1600480360360208110156101d557600080fd5b50356001600160a01b0316610432565b6100f1600480360360208110156101fb57600080fd5b50356001600160a01b0316610444565b6100f16004803603602081101561022157600080fd5b503561042c565b6100f16004803603602081101561023e57600080fd5b503561045f565b61017d610506565b600061025833610313565b5060008054604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216926323b872dd926064808401936020939083900390910190829087803b1580156102b457600080fd5b505af11580156102c8573d6000803e3d6000fd5b505050506040513d60208110156102de57600080fd5b5050336000908152600260205260409020546102fa9083610515565b3360009081526002602052604081209190915592915050565b6001600160a01b038116600090815260036020526040812054420380156103e35760006103946301e133806103888461038e670de0b6b3a7640000610388600154600260008d6001600160a01b03166001600160a01b031681526020019081526020016000205461057790919063ffffffff16565b906105d7565b90610577565b6001600160a01b0385166000908152600260205260409020549091506103ba908261063e565b6001600160a01b0385166000908152600260209081526040808320939093556003905220429055505b50506001600160a01b031660009081526002602052604090205490565b600890565b60026020526000908152604090205481565b60015481565b6000546001600160a01b031690565b50600090565b60036020526000908152604090205481565b6001600160a01b031660009081526002602052604090205490565b600061046a33610313565b50600080546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b039092169263a9059cbb926044808401936020939083900390910190829087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b505050506040513d60208110156104ea57600080fd5b5050336000908152600260205260409020546102fa908361063e565b6000546001600160a01b031681565b60008282111561056c576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b60008261058657506000610571565b8282028284828161059357fe5b04146105d05760405162461bcd60e51b81526004018080602001828103825260218152602001806106996021913960400191505060405180910390fd5b9392505050565b600080821161062d576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161063657fe5b049392505050565b6000828201838110156105d0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220d6be640d34d767d62eed9dcf27188a9da528845f566c98bafa9b80a825185c8c64736f6c634300060c0033",
  "bytecodeSha1": "fee40a2c6559fcd74811ca8f47c9fd6c3ed69c62",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MockCErc20",
  "coverageMap": {
    "branches": {
      "14": {},
      "28": {
        "MockCErc20.borrowBalanceCurrent": {
          "20": [
            1171,
            1183,
            false
          ]
        }
      },
      "55": {},
      "6": {
        "SafeMath.add": {
          "25": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "24": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "22": [
            3619,
            3625,
            false
          ],
          "23": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "21": [
            3221,
            3227,
            true
          ]
        }
      }
    },
    "statements": {
      "14": {},
      "28": {
        "MockCErc20.borrow": {
          "9": [
            1615,
            1647
          ],
          "10": [
            1653,
            1693
          ],
          "11": [
            1699,
            1758
          ]
        },
        "MockCErc20.borrowBalanceCurrent": {
          "3": [
            1294,
            1343
          ],
          "4": [
            1351,
            1375
          ],
          "5": [
            1387,
            1410
          ]
        },
        "MockCErc20.borrowBalanceStored": {
          "8": [
            1509,
            1532
          ]
        },
        "MockCErc20.decimals": {
          "6": [
            585,
            593
          ]
        },
        "MockCErc20.repayBorrow": {
          "0": [
            1859,
            1891
          ],
          "1": [
            1897,
            1955
          ],
          "2": [
            1961,
            2019
          ]
        },
        "MockCErc20.underlying": {
          "7": [
            666,
            687
          ]
        }
      },
      "55": {},
      "6": {
        "SafeMath.add": {
          "19": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "17": [
            4294,
            4338
          ],
          "18": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "14": [
            3627,
            3635
          ],
          "15": [
            3672,
            3728
          ],
          "16": [
            3738,
            3746
          ]
        },
        "SafeMath.sub": {
          "12": [
            3213,
            3262
          ],
          "13": [
            3272,
            3284
          ]
        }
      }
    }
  },
  "dependencies": [
    "ICErc20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d681461020b578063c5ebeaec14610228578063db006a751461020b578063fc0c546a14610245576100cf565b806370a0823114610199578063952ca92c146101bf57806395dd9193146101e5576100cf565b80630e752702146100d457806317bfdfbc14610103578063313ce5671461012957806354a5706f146101475780635c3efd2f1461016d5780636f307dc314610175575b600080fd5b6100f1600480360360208110156100ea57600080fd5b503561024d565b60408051918252519081900360200190f35b6100f16004803603602081101561011957600080fd5b50356001600160a01b0316610313565b610131610400565b6040805160ff9092168252519081900360200190f35b6100f16004803603602081101561015d57600080fd5b50356001600160a01b0316610405565b6100f1610417565b61017d61041d565b604080516001600160a01b039092168252519081900360200190f35b6100f1600480360360208110156101af57600080fd5b50356001600160a01b031661042c565b6100f1600480360360208110156101d557600080fd5b50356001600160a01b0316610432565b6100f1600480360360208110156101fb57600080fd5b50356001600160a01b0316610444565b6100f16004803603602081101561022157600080fd5b503561042c565b6100f16004803603602081101561023e57600080fd5b503561045f565b61017d610506565b600061025833610313565b5060008054604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216926323b872dd926064808401936020939083900390910190829087803b1580156102b457600080fd5b505af11580156102c8573d6000803e3d6000fd5b505050506040513d60208110156102de57600080fd5b5050336000908152600260205260409020546102fa9083610515565b3360009081526002602052604081209190915592915050565b6001600160a01b038116600090815260036020526040812054420380156103e35760006103946301e133806103888461038e670de0b6b3a7640000610388600154600260008d6001600160a01b03166001600160a01b031681526020019081526020016000205461057790919063ffffffff16565b906105d7565b90610577565b6001600160a01b0385166000908152600260205260409020549091506103ba908261063e565b6001600160a01b0385166000908152600260209081526040808320939093556003905220429055505b50506001600160a01b031660009081526002602052604090205490565b600890565b60026020526000908152604090205481565b60015481565b6000546001600160a01b031690565b50600090565b60036020526000908152604090205481565b6001600160a01b031660009081526002602052604090205490565b600061046a33610313565b50600080546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b039092169263a9059cbb926044808401936020939083900390910190829087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b505050506040513d60208110156104ea57600080fd5b5050336000908152600260205260409020546102fa908361063e565b6000546001600160a01b031681565b60008282111561056c576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b60008261058657506000610571565b8282028284828161059357fe5b04146105d05760405162461bcd60e51b81526004018080602001828103825260218152602001806106996021913960400191505060405180910390fd5b9392505050565b600080821161062d576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161063657fe5b049392505050565b6000828201838110156105d0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220d6be640d34d767d62eed9dcf27188a9da528845f566c98bafa9b80a825185c8c64736f6c634300060c0033",
  "deployedSourceMap": "231:1809:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:257;;;;;;;;;;;;;;;;-1:-1:-1;1781:257:28;;:::i;:::-;;;;;;;;;;;;;;;;1037:378;;;;;;;;;;;;;;;;-1:-1:-1;1037:378:28;-1:-1:-1;;;;;1037:378:28;;:::i;525:73::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;373:39;;;;;;;;;;;;;;;;-1:-1:-1;373:39:28;-1:-1:-1;;;;;373:39:28;;:::i;317:35::-;;;:::i;602:90::-;;;:::i;:::-;;;;-1:-1:-1;;;;;602:90:28;;;;;;;;;;;;;;920:113;;;;;;;;;;;;;;;;-1:-1:-1;920:113:28;-1:-1:-1;;;;;920:113:28;;:::i;416:41::-;;;;;;;;;;;;;;;;-1:-1:-1;416:41:28;-1:-1:-1;;;;;416:41:28;;:::i;1419:118::-;;;;;;;;;;;;;;;;-1:-1:-1;1419:118:28;-1:-1:-1;;;;;1419:118:28;;:::i;696:106::-;;;;;;;;;;;;;;;;-1:-1:-1;696:106:28;;:::i;1541:236::-;;;;;;;;;;;;;;;;-1:-1:-1;1541:236:28;;:::i;294:19::-;;;:::i;1781:257::-;1847:4;1859:32;1880:10;1859:20;:32::i;:::-;-1:-1:-1;1897:5:28;;;:58;;;-1:-1:-1;;;1897:58:28;;1916:10;1897:58;;;;1936:4;1897:58;;;;;;;;;;;;-1:-1:-1;;;;;1897:5:28;;;;:18;;:58;;;;;;;;;;;;;;;;;:5;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1991:10:28;1983:19;;;;:7;1897:58;1983:19;;;;;:36;;2007:11;1983:23;:36::i;:::-;1969:10;1961:19;;;;:7;:19;;;;;:58;;;;:19;1781:257;-1:-1:-1;;1781:257:28:o;1037:378::-;-1:-1:-1;;;;;1143:18:28;;1109:4;1143:18;;;:9;:18;;;;;;1137:3;:24;1171:12;;1167:215;;1193:13;1209:77;1277:8;1209:63;1263:8;1209:49;1251:6;1209:37;1230:15;;1209:7;:16;1217:7;-1:-1:-1;;;;;1209:16:28;-1:-1:-1;;;;;1209:16:28;;;;;;;;;;;;;:20;;:37;;;;:::i;:::-;:41;;:49::i;:::-;:53;;:63::i;:77::-;-1:-1:-1;;;;;1313:16:28;;;;;;:7;:16;;;;;;1193:93;;-1:-1:-1;1313:30:28;;1193:93;1313:20;:30::i;:::-;-1:-1:-1;;;;;1294:16:28;;;;;;:7;:16;;;;;;;;:49;;;;1351:9;:18;;;1372:3;1351:24;;-1:-1:-1;1167:215:28;-1:-1:-1;;;;;;;1394:16:28;;;;;:7;:16;;;;;;;1037:378::o;525:73::-;592:1;525:73;:::o;373:39::-;;;;;;;;;;;;;:::o;317:35::-;;;;:::o;602:90::-;651:7;681:5;-1:-1:-1;;;;;681:5:28;602:90;:::o;920:113::-;-1:-1:-1;985:4:28;;920:113::o;416:41::-;;;;;;;;;;;;;:::o;1419:118::-;-1:-1:-1;;;;;1516:16:28;1497:4;1516:16;;;:7;:16;;;;;;;1419:118::o;1541:236::-;1603:4;1615:32;1636:10;1615:20;:32::i;:::-;-1:-1:-1;1653:5:28;;;:40;;;-1:-1:-1;;;1653:40:28;;1668:10;1653:40;;;;;;;;;;;;-1:-1:-1;;;;;1653:5:28;;;;:14;;:40;;;;;;;;;;;;;;;;;:5;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1729:10:28;1721:19;;;;:7;1653:40;1721:19;;;;;:37;;1745:12;1721:23;:37::i;294:19::-;;;-1:-1:-1;;;;;294:19:28;;:::o;3136:155:6:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:6;;;3136:155;;;;;:::o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:6;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3538:215;-1:-1:-1;;;3538:215:6:o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:6:o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    231,
    2040
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x245 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x952CA92C EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95DD9193 EQ PUSH2 0x1E5 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xE752702 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x17BFDFBC EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x54A5706F EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x5C3EFD2F EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x313 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x405 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42C JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x432 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x444 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x42C JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x45F JUMP JUMPDEST PUSH2 0x17D PUSH2 0x506 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258 CALLER PUSH2 0x313 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2FA SWAP1 DUP4 PUSH2 0x515 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD TIMESTAMP SUB DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 PUSH2 0x394 PUSH4 0x1E13380 PUSH2 0x388 DUP5 PUSH2 0x38E PUSH8 0xDE0B6B3A7640000 PUSH2 0x388 PUSH1 0x1 SLOAD PUSH1 0x2 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x577 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x5D7 JUMP JUMPDEST SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x3BA SWAP1 DUP3 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE POP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46A CALLER PUSH2 0x313 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2FA SWAP1 DUP4 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x56C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x586 JUMPI POP PUSH1 0x0 PUSH2 0x571 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x593 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x699 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x62D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x636 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xD6 0xBE PUSH5 0xD34D767D6 0x2E 0xED SWAP14 0xCF 0x27 XOR DUP11 SWAP14 0xA5 0x28 DUP5 0x5F JUMP PUSH13 0x98BAFA9B80A825185C8C64736F PUSH13 0x634300060C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        231,
        2040
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "6": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "12": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "REVERT",
      "path": "28"
    },
    "16": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "POP",
      "path": "28"
    },
    "18": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "21": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "LT",
      "path": "28"
    },
    "22": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "26": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "29": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "SHR",
      "path": "28"
    },
    "32": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "33": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "GT",
      "path": "28"
    },
    "39": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "43": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "44": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xA0712D68"
    },
    "49": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "GT",
      "path": "28"
    },
    "50": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "54": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "55": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xA0712D68"
    },
    "60": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "61": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "64": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "65": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "66": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC5EBEAEC"
    },
    "71": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "72": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x228"
    },
    "75": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "76": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "77": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xDB006A75"
    },
    "82": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "83": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "86": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "87": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "88": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "94": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x245"
    },
    "97": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "98": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMP",
      "path": "28"
    },
    "102": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "103": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "104": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "109": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "110": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x199"
    },
    "113": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "114": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "115": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x952CA92C"
    },
    "120": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "121": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BF"
    },
    "124": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "125": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "126": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x95DD9193"
    },
    "131": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "132": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E5"
    },
    "135": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "136": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMP",
      "path": "28"
    },
    "140": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "141": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "142": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE752702"
    },
    "147": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "148": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "152": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "153": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x17BFDFBC"
    },
    "158": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "159": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x103"
    },
    "162": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "163": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "164": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x313CE567"
    },
    "169": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "170": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x129"
    },
    "173": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "174": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "175": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x54A5706F"
    },
    "180": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "181": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x147"
    },
    "184": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "185": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "186": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x5C3EFD2F"
    },
    "191": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "192": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16D"
    },
    "195": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "196": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "197": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x6F307DC3"
    },
    "202": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "EQ",
      "path": "28"
    },
    "203": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x175"
    },
    "206": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "207": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "208": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "DUP1",
      "path": "28"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        231,
        2040
      ],
      "op": "REVERT",
      "path": "28"
    },
    "212": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "213": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "216": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "218": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "DUP1",
      "path": "28"
    },
    "219": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "220": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "SUB",
      "path": "28"
    },
    "221": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "223": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "DUP2",
      "path": "28"
    },
    "224": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "LT",
      "path": "28"
    },
    "225": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "226": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEA"
    },
    "229": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "230": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "232": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "DUP1",
      "path": "28"
    },
    "233": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "REVERT",
      "path": "28"
    },
    "234": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "235": {
      "op": "POP"
    },
    "236": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "237": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x24D"
    },
    "240": {
      "fn": "MockCErc20.repayBorrow",
      "jump": "i",
      "offset": [
        1781,
        2038
      ],
      "op": "JUMP",
      "path": "28"
    },
    "241": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "242": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "244": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "DUP1",
      "path": "28"
    },
    "245": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "246": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "247": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "DUP3",
      "path": "28"
    },
    "248": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "249": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "250": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "251": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "DUP2",
      "path": "28"
    },
    "252": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "253": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "SUB",
      "path": "28"
    },
    "254": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "256": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "ADD",
      "path": "28"
    },
    "257": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "258": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "RETURN",
      "path": "28"
    },
    "259": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "260": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "263": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "265": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "DUP1",
      "path": "28"
    },
    "266": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "267": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "SUB",
      "path": "28"
    },
    "268": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "270": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "DUP2",
      "path": "28"
    },
    "271": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "LT",
      "path": "28"
    },
    "272": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "273": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x119"
    },
    "276": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "277": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "279": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "DUP1",
      "path": "28"
    },
    "280": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "REVERT",
      "path": "28"
    },
    "281": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "282": {
      "op": "POP"
    },
    "283": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "op": "SUB"
    },
    "292": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "AND",
      "path": "28"
    },
    "293": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x313"
    },
    "296": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "jump": "i",
      "offset": [
        1037,
        1415
      ],
      "op": "JUMP",
      "path": "28"
    },
    "297": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "298": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x131"
    },
    "301": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x400"
    },
    "304": {
      "fn": "MockCErc20.decimals",
      "jump": "i",
      "offset": [
        525,
        598
      ],
      "op": "JUMP",
      "path": "28"
    },
    "305": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "306": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "308": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "DUP1",
      "path": "28"
    },
    "309": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "310": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xFF"
    },
    "312": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "313": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "314": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "AND",
      "path": "28"
    },
    "315": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "DUP3",
      "path": "28"
    },
    "316": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "317": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "318": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "319": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "DUP2",
      "path": "28"
    },
    "320": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "321": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "SUB",
      "path": "28"
    },
    "322": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "324": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "ADD",
      "path": "28"
    },
    "325": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "326": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "RETURN",
      "path": "28"
    },
    "327": {
      "offset": [
        373,
        412
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "328": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "331": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "333": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "DUP1",
      "path": "28"
    },
    "334": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "335": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "SUB",
      "path": "28"
    },
    "336": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "338": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "DUP2",
      "path": "28"
    },
    "339": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "LT",
      "path": "28"
    },
    "340": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "341": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15D"
    },
    "344": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "345": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "347": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "DUP1",
      "path": "28"
    },
    "348": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "REVERT",
      "path": "28"
    },
    "349": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "350": {
      "op": "POP"
    },
    "351": {
      "offset": [
        373,
        412
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "358": {
      "op": "SHL"
    },
    "359": {
      "op": "SUB"
    },
    "360": {
      "offset": [
        373,
        412
      ],
      "op": "AND",
      "path": "28"
    },
    "361": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x405"
    },
    "364": {
      "fn": "MockCErc20.decimals",
      "jump": "i",
      "offset": [
        373,
        412
      ],
      "op": "JUMP",
      "path": "28"
    },
    "365": {
      "offset": [
        317,
        352
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "366": {
      "fn": "MockCErc20.decimals",
      "offset": [
        317,
        352
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "369": {
      "fn": "MockCErc20.decimals",
      "offset": [
        317,
        352
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x417"
    },
    "372": {
      "fn": "MockCErc20.decimals",
      "jump": "i",
      "offset": [
        317,
        352
      ],
      "op": "JUMP",
      "path": "28"
    },
    "373": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "374": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17D"
    },
    "377": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x41D"
    },
    "380": {
      "fn": "MockCErc20.underlying",
      "jump": "i",
      "offset": [
        602,
        692
      ],
      "op": "JUMP",
      "path": "28"
    },
    "381": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "382": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "384": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "DUP1",
      "path": "28"
    },
    "385": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "op": "SUB"
    },
    "394": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "395": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "396": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "AND",
      "path": "28"
    },
    "397": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "DUP3",
      "path": "28"
    },
    "398": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "399": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "400": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "401": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "DUP2",
      "path": "28"
    },
    "402": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "403": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "SUB",
      "path": "28"
    },
    "404": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "406": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "ADD",
      "path": "28"
    },
    "407": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "408": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "RETURN",
      "path": "28"
    },
    "409": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "410": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "413": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "415": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "DUP1",
      "path": "28"
    },
    "416": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "417": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "SUB",
      "path": "28"
    },
    "418": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "420": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "DUP2",
      "path": "28"
    },
    "421": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "LT",
      "path": "28"
    },
    "422": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "423": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1AF"
    },
    "426": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "427": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "429": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "DUP1",
      "path": "28"
    },
    "430": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "REVERT",
      "path": "28"
    },
    "431": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "432": {
      "op": "POP"
    },
    "433": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "op": "SUB"
    },
    "442": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "AND",
      "path": "28"
    },
    "443": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x42C"
    },
    "446": {
      "fn": "MockCErc20.balanceOf",
      "jump": "i",
      "offset": [
        920,
        1033
      ],
      "op": "JUMP",
      "path": "28"
    },
    "447": {
      "offset": [
        416,
        457
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "448": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "451": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "453": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "DUP1",
      "path": "28"
    },
    "454": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "455": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "SUB",
      "path": "28"
    },
    "456": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "458": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "DUP2",
      "path": "28"
    },
    "459": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "LT",
      "path": "28"
    },
    "460": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "461": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D5"
    },
    "464": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "465": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "467": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "DUP1",
      "path": "28"
    },
    "468": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "REVERT",
      "path": "28"
    },
    "469": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "470": {
      "op": "POP"
    },
    "471": {
      "offset": [
        416,
        457
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "op": "SUB"
    },
    "480": {
      "offset": [
        416,
        457
      ],
      "op": "AND",
      "path": "28"
    },
    "481": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x432"
    },
    "484": {
      "fn": "MockCErc20.balanceOf",
      "jump": "i",
      "offset": [
        416,
        457
      ],
      "op": "JUMP",
      "path": "28"
    },
    "485": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "486": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "489": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "491": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "DUP1",
      "path": "28"
    },
    "492": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "493": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "SUB",
      "path": "28"
    },
    "494": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "496": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "DUP2",
      "path": "28"
    },
    "497": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "LT",
      "path": "28"
    },
    "498": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "499": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FB"
    },
    "502": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "503": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "505": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "DUP1",
      "path": "28"
    },
    "506": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "REVERT",
      "path": "28"
    },
    "507": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "508": {
      "op": "POP"
    },
    "509": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "op": "SUB"
    },
    "518": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "AND",
      "path": "28"
    },
    "519": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x444"
    },
    "522": {
      "fn": "MockCErc20.borrowBalanceStored",
      "jump": "i",
      "offset": [
        1419,
        1537
      ],
      "op": "JUMP",
      "path": "28"
    },
    "523": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "524": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "527": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "529": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "DUP1",
      "path": "28"
    },
    "530": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "531": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "SUB",
      "path": "28"
    },
    "532": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "534": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "DUP2",
      "path": "28"
    },
    "535": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "LT",
      "path": "28"
    },
    "536": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "537": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x221"
    },
    "540": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "541": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "543": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "DUP1",
      "path": "28"
    },
    "544": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "REVERT",
      "path": "28"
    },
    "545": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "546": {
      "op": "POP"
    },
    "547": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "548": {
      "fn": "MockCErc20.mint",
      "offset": [
        696,
        802
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x42C"
    },
    "551": {
      "fn": "MockCErc20.mint",
      "jump": "i",
      "offset": [
        696,
        802
      ],
      "op": "JUMP",
      "path": "28"
    },
    "552": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "553": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1"
    },
    "556": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "558": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "DUP1",
      "path": "28"
    },
    "559": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "560": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "SUB",
      "path": "28"
    },
    "561": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "563": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "DUP2",
      "path": "28"
    },
    "564": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "LT",
      "path": "28"
    },
    "565": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "566": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x23E"
    },
    "569": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "570": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "572": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "DUP1",
      "path": "28"
    },
    "573": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "REVERT",
      "path": "28"
    },
    "574": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "577": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x45F"
    },
    "580": {
      "fn": "MockCErc20.borrow",
      "jump": "i",
      "offset": [
        1541,
        1777
      ],
      "op": "JUMP",
      "path": "28"
    },
    "581": {
      "offset": [
        294,
        313
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "582": {
      "fn": "MockCErc20.borrow",
      "offset": [
        294,
        313
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17D"
    },
    "585": {
      "fn": "MockCErc20.borrow",
      "offset": [
        294,
        313
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x506"
    },
    "588": {
      "fn": "MockCErc20.borrow",
      "jump": "i",
      "offset": [
        294,
        313
      ],
      "op": "JUMP",
      "path": "28"
    },
    "589": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "590": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1847,
        1851
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "592": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1859,
        1891
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 0,
      "value": "0x258"
    },
    "595": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1880,
        1890
      ],
      "op": "CALLER",
      "path": "28"
    },
    "596": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1859,
        1879
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x313"
    },
    "599": {
      "fn": "MockCErc20.repayBorrow",
      "jump": "i",
      "offset": [
        1859,
        1891
      ],
      "op": "JUMP",
      "path": "28"
    },
    "600": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1859,
        1891
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 1,
      "value": "0x0"
    },
    "604": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "DUP1",
      "path": "28"
    },
    "605": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "606": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "608": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "609": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "610": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "617": {
      "op": "SHL"
    },
    "618": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP2",
      "path": "28"
    },
    "619": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "620": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1916,
        1926
      ],
      "op": "CALLER",
      "path": "28"
    },
    "621": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "623": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP3",
      "path": "28"
    },
    "624": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ADD",
      "path": "28"
    },
    "625": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "626": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1936,
        1940
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "627": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x24"
    },
    "629": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP3",
      "path": "28"
    },
    "630": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ADD",
      "path": "28"
    },
    "631": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "632": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x44"
    },
    "634": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP2",
      "path": "28"
    },
    "635": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ADD",
      "path": "28"
    },
    "636": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP7",
      "path": "28"
    },
    "637": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "638": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "639": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "640": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "SUB"
    },
    "649": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "650": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "651": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "AND",
      "path": "28"
    },
    "652": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "653": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1915
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x23B872DD"
    },
    "658": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1915
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "659": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x64"
    },
    "661": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "662": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP5",
      "path": "28"
    },
    "663": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ADD",
      "path": "28"
    },
    "664": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "665": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "667": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "668": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "669": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP4",
      "path": "28"
    },
    "670": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "671": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SUB",
      "path": "28"
    },
    "672": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "673": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "674": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ADD",
      "path": "28"
    },
    "675": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "676": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP3",
      "path": "28"
    },
    "677": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "678": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1902
      ],
      "op": "DUP8",
      "path": "28"
    },
    "679": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "680": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "681": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "682": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "683": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "684": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2B4"
    },
    "687": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "688": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "690": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "691": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "REVERT",
      "path": "28"
    },
    "692": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "693": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "POP",
      "path": "28"
    },
    "694": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "GAS",
      "path": "28"
    },
    "695": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "CALL",
      "path": "28"
    },
    "696": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "697": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "698": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "699": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2C8"
    },
    "702": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "703": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "704": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "706": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "707": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "708": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "709": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "711": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "REVERT",
      "path": "28"
    },
    "712": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "713": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "POP",
      "path": "28"
    },
    "714": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "POP",
      "path": "28"
    },
    "715": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "POP",
      "path": "28"
    },
    "716": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "POP",
      "path": "28"
    },
    "717": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "719": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "720": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "721": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "723": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP2",
      "path": "28"
    },
    "724": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "LT",
      "path": "28"
    },
    "725": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "726": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2DE"
    },
    "729": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "730": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "732": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "733": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "REVERT",
      "path": "28"
    },
    "734": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1991,
        2001
      ],
      "op": "CALLER",
      "path": "28",
      "statement": 2
    },
    "738": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "740": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "741": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "DUP2",
      "path": "28"
    },
    "742": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "743": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        1990
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "745": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1897,
        1955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "747": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "748": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "750": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "751": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "752": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2002
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "753": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2019
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FA"
    },
    "756": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2019
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "757": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        2007,
        2018
      ],
      "op": "DUP4",
      "path": "28"
    },
    "758": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2006
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x515"
    },
    "761": {
      "fn": "MockCErc20.repayBorrow",
      "jump": "i",
      "offset": [
        1983,
        2019
      ],
      "op": "JUMP",
      "path": "28"
    },
    "762": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1983,
        2019
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "763": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1969,
        1979
      ],
      "op": "CALLER",
      "path": "28"
    },
    "764": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "766": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "767": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "DUP2",
      "path": "28"
    },
    "768": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "769": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1968
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "771": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "773": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "774": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "776": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "DUP2",
      "path": "28"
    },
    "777": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "778": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        2019
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "779": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        2019
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "780": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        2019
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "781": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        2019
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "782": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1961,
        1980
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "783": {
      "fn": "MockCErc20.repayBorrow",
      "offset": [
        1781,
        2038
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "op": "POP"
    },
    "786": {
      "fn": "MockCErc20.repayBorrow",
      "jump": "o",
      "offset": [
        1781,
        2038
      ],
      "op": "JUMP",
      "path": "28"
    },
    "787": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1037,
        1415
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "DUP2",
      "path": "28"
    },
    "797": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "AND",
      "path": "28"
    },
    "798": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1109,
        1113
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "800": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "801": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "DUP2",
      "path": "28"
    },
    "802": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "803": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1152
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "805": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "807": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "808": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "810": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "DUP2",
      "path": "28"
    },
    "811": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "812": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1143,
        1161
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "813": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1137,
        1140
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "814": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1137,
        1161
      ],
      "op": "SUB",
      "path": "28"
    },
    "815": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1171,
        1183
      ],
      "op": "DUP1",
      "path": "28"
    },
    "816": {
      "branch": 20,
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1171,
        1183
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "817": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1167,
        1382
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3E3"
    },
    "820": {
      "branch": 20,
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1167,
        1382
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "821": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1193,
        1206
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "823": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1286
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x394"
    },
    "826": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1277,
        1285
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x1E13380"
    },
    "831": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1272
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x388"
    },
    "834": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1263,
        1271
      ],
      "op": "DUP5",
      "path": "28"
    },
    "835": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1258
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x38E"
    },
    "838": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1251,
        1257
      ],
      "op": "PUSH8",
      "path": "28",
      "value": "0xDE0B6B3A7640000"
    },
    "847": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1246
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x388"
    },
    "850": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1230,
        1245
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "852": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1230,
        1245
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "853": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1216
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "855": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "857": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1217,
        1224
      ],
      "op": "DUP14",
      "path": "28"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "AND",
      "path": "28"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "SUB"
    },
    "875": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "AND",
      "path": "28"
    },
    "876": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "DUP2",
      "path": "28"
    },
    "877": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "878": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "880": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "ADD",
      "path": "28"
    },
    "881": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "882": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "DUP2",
      "path": "28"
    },
    "883": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "884": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "886": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "ADD",
      "path": "28"
    },
    "887": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "889": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "890": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1225
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "891": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1229
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x577"
    },
    "894": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1229
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "895": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1246
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "896": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1246
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "897": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1246
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "902": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1246
      ],
      "op": "AND",
      "path": "28"
    },
    "903": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "jump": "i",
      "offset": [
        1209,
        1246
      ],
      "op": "JUMP",
      "path": "28"
    },
    "904": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1246
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "905": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1250
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "906": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1250
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5D7"
    },
    "909": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "jump": "i",
      "offset": [
        1209,
        1258
      ],
      "op": "JUMP",
      "path": "28"
    },
    "910": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1258
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "911": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1262
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "912": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1262
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x577"
    },
    "915": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "jump": "i",
      "offset": [
        1209,
        1272
      ],
      "op": "JUMP",
      "path": "28"
    },
    "916": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1209,
        1286
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "op": "SUB"
    },
    "925": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "DUP6",
      "path": "28",
      "statement": 3
    },
    "926": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "AND",
      "path": "28"
    },
    "927": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "929": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "930": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "DUP2",
      "path": "28"
    },
    "931": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "932": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1320
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "934": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "936": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "937": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "939": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "940": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "941": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1329
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "942": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1193,
        1286
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "943": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1193,
        1286
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1343
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3BA"
    },
    "948": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1343
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "949": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1193,
        1286
      ],
      "op": "DUP3",
      "path": "28"
    },
    "950": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1333
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x63E"
    },
    "953": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "jump": "i",
      "offset": [
        1313,
        1343
      ],
      "op": "JUMP",
      "path": "28"
    },
    "954": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1313,
        1343
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "DUP6",
      "path": "28"
    },
    "964": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "AND",
      "path": "28"
    },
    "965": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "967": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "968": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "DUP2",
      "path": "28"
    },
    "969": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "970": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1301
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "972": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "974": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "975": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "DUP2",
      "path": "28"
    },
    "976": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "977": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "979": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "DUP1",
      "path": "28"
    },
    "980": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "DUP4",
      "path": "28"
    },
    "981": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1310
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "982": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1343
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "983": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1343
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "984": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1343
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "985": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1294,
        1343
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "986": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1351,
        1360
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 4,
      "value": "0x3"
    },
    "988": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1351,
        1369
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "989": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1351,
        1369
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "990": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1351,
        1369
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "991": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1372,
        1375
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "992": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1351,
        1375
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "993": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1351,
        1375
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1167,
        1382
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1004": {
      "op": "SHL"
    },
    "1005": {
      "op": "SUB"
    },
    "1006": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "AND",
      "path": "28",
      "statement": 5
    },
    "1007": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1009": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1010": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1011": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1012": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1401
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "1014": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1016": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1017": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1019": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1020": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1021": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1022": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "offset": [
        1394,
        1410
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1023": {
      "fn": "MockCErc20.borrowBalanceCurrent",
      "jump": "o",
      "offset": [
        1037,
        1415
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1024": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1025": {
      "fn": "MockCErc20.decimals",
      "offset": [
        592,
        593
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 6,
      "value": "0x8"
    },
    "1027": {
      "fn": "MockCErc20.decimals",
      "offset": [
        525,
        598
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1028": {
      "fn": "MockCErc20.decimals",
      "jump": "o",
      "offset": [
        525,
        598
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1029": {
      "offset": [
        373,
        412
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1030": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "1032": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1034": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1035": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1037": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1038": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1039": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1040": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1042": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1043": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1044": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1045": {
      "fn": "MockCErc20.decimals",
      "offset": [
        373,
        412
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1046": {
      "fn": "MockCErc20.decimals",
      "jump": "o",
      "offset": [
        373,
        412
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1047": {
      "offset": [
        317,
        352
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1048": {
      "fn": "MockCErc20.decimals",
      "offset": [
        317,
        352
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "1050": {
      "fn": "MockCErc20.decimals",
      "offset": [
        317,
        352
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1051": {
      "fn": "MockCErc20.decimals",
      "offset": [
        317,
        352
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1052": {
      "fn": "MockCErc20.decimals",
      "jump": "o",
      "offset": [
        317,
        352
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1053": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1054": {
      "fn": "MockCErc20.underlying",
      "offset": [
        651,
        658
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1056": {
      "fn": "MockCErc20.underlying",
      "offset": [
        681,
        686
      ],
      "op": "SLOAD",
      "path": "28",
      "statement": 7
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "MockCErc20.underlying",
      "offset": [
        681,
        686
      ],
      "op": "AND",
      "path": "28"
    },
    "1066": {
      "fn": "MockCErc20.underlying",
      "offset": [
        602,
        692
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1067": {
      "fn": "MockCErc20.underlying",
      "jump": "o",
      "offset": [
        602,
        692
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1068": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        920,
        1033
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1069": {
      "op": "POP"
    },
    "1070": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        985,
        989
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1072": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        985,
        989
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1073": {
      "fn": "MockCErc20.balanceOf",
      "jump": "o",
      "offset": [
        920,
        1033
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1074": {
      "offset": [
        416,
        457
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1075": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "1077": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1079": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1080": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1082": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1083": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1084": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1085": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1087": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1088": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1089": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1090": {
      "fn": "MockCErc20.balanceOf",
      "offset": [
        416,
        457
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1091": {
      "fn": "MockCErc20.balanceOf",
      "jump": "o",
      "offset": [
        416,
        457
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1092": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1419,
        1537
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1099": {
      "op": "SHL"
    },
    "1100": {
      "op": "SUB"
    },
    "1101": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "AND",
      "path": "28",
      "statement": 8
    },
    "1102": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1497,
        1501
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1104": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1105": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1106": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1107": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1523
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "1109": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1111": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1112": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1114": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1115": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1116": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1117": {
      "fn": "MockCErc20.borrowBalanceStored",
      "offset": [
        1516,
        1532
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1118": {
      "fn": "MockCErc20.borrowBalanceStored",
      "jump": "o",
      "offset": [
        1419,
        1537
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1119": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1541,
        1777
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1120": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1603,
        1607
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1122": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1615,
        1647
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 9,
      "value": "0x46A"
    },
    "1125": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1636,
        1646
      ],
      "op": "CALLER",
      "path": "28"
    },
    "1126": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1615,
        1635
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x313"
    },
    "1129": {
      "fn": "MockCErc20.borrow",
      "jump": "i",
      "offset": [
        1615,
        1647
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1130": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1615,
        1647
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 10,
      "value": "0x0"
    },
    "1134": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1135": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1136": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1138": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1139": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1140": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1149": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1150": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1668,
        1678
      ],
      "op": "CALLER",
      "path": "28"
    },
    "1151": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1153": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1154": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ADD",
      "path": "28"
    },
    "1155": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1156": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x24"
    },
    "1158": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1159": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ADD",
      "path": "28"
    },
    "1160": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP7",
      "path": "28"
    },
    "1161": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1162": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1163": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1164": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "op": "SUB"
    },
    "1173": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1174": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1175": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "AND",
      "path": "28"
    },
    "1176": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1177": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1667
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xA9059CBB"
    },
    "1182": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1667
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1183": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x44"
    },
    "1185": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1186": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1187": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ADD",
      "path": "28"
    },
    "1188": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1189": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1191": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1192": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1193": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1194": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1195": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SUB",
      "path": "28"
    },
    "1196": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1197": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1198": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ADD",
      "path": "28"
    },
    "1199": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1200": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1201": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1202": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1658
      ],
      "op": "DUP8",
      "path": "28"
    },
    "1203": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1204": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "1205": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1206": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1207": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1208": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1212": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1214": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1215": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1216": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1217": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "POP",
      "path": "28"
    },
    "1218": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "GAS",
      "path": "28"
    },
    "1219": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "CALL",
      "path": "28"
    },
    "1220": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1221": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1222": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1223": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4D4"
    },
    "1226": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1227": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1228": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1230": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1231": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "1232": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1233": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1235": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1236": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1237": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "POP",
      "path": "28"
    },
    "1238": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "POP",
      "path": "28"
    },
    "1239": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "POP",
      "path": "28"
    },
    "1240": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "POP",
      "path": "28"
    },
    "1241": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1243": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1244": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1245": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1247": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1248": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "LT",
      "path": "28"
    },
    "1249": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1250": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4EA"
    },
    "1253": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1254": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1256": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1257": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1258": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1729,
        1739
      ],
      "op": "CALLER",
      "path": "28",
      "statement": 11
    },
    "1262": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1264": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1265": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1266": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1267": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1728
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "1269": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1653,
        1693
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1271": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1272": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1274": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1275": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1276": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1740
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1277": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1758
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FA"
    },
    "1280": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1758
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1281": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1745,
        1757
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1282": {
      "fn": "MockCErc20.borrow",
      "offset": [
        1721,
        1744
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x63E"
    },
    "1285": {
      "fn": "MockCErc20.borrow",
      "jump": "i",
      "offset": [
        1721,
        1758
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1286": {
      "offset": [
        294,
        313
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1287": {
      "fn": "MockCErc20.borrow",
      "offset": [
        294,
        313
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1289": {
      "fn": "MockCErc20.borrow",
      "offset": [
        294,
        313
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "op": "SUB"
    },
    "1298": {
      "offset": [
        294,
        313
      ],
      "op": "AND",
      "path": "28"
    },
    "1299": {
      "fn": "MockCErc20.borrow",
      "offset": [
        294,
        313
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1300": {
      "fn": "MockCErc20.borrow",
      "jump": "o",
      "offset": [
        294,
        313
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1301": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1302": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1304": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 12
    },
    "1305": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1306": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "6"
    },
    "1307": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1308": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x56C"
    },
    "1311": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1312": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1314": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1315": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1316": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1324": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1325": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1327": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1329": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1330": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1331": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1332": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1E"
    },
    "1334": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1336": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1337": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1338": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1339": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "1372": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1374": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1375": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1376": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1377": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1378": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1379": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1380": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1381": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1382": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "6"
    },
    "1383": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1385": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "6"
    },
    "1386": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1387": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1388": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1389": {
      "op": "POP"
    },
    "1390": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 13
    },
    "1391": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1392": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "6"
    },
    "1393": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1394": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1395": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1396": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "POP",
      "path": "6"
    },
    "1397": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "POP",
      "path": "6"
    },
    "1398": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1399": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1400": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1402": {
      "branch": 22,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1403": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x586"
    },
    "1406": {
      "branch": 22,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1407": {
      "op": "POP"
    },
    "1408": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x0"
    },
    "1410": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x571"
    },
    "1413": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1414": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1415": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1416": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1417": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "6"
    },
    "1418": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1419": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1420": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1421": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1422": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 15,
      "value": "0x593"
    },
    "1425": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1426": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "6"
    },
    "1427": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1428": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "6"
    },
    "1429": {
      "branch": 23,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "6"
    },
    "1430": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D0"
    },
    "1433": {
      "branch": 23,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1434": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1436": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1445": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1446": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1448": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1449": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1450": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1451": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1453": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1454": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1455": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1456": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "6"
    },
    "1457": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1458": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1459": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "1461": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1462": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1463": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1465": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1466": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1467": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x699"
    },
    "1470": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "1472": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1473": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1474": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1476": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "1477": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1478": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "6"
    },
    "1479": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "6"
    },
    "1480": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1482": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1483": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1484": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1485": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "6"
    },
    "1486": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1487": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1488": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1489": {
      "fn": "SafeMath.mul",
      "offset": [
        3745,
        3746
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 16
    },
    "1490": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "op": "POP"
    },
    "1494": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1495": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1496": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1498": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 17
    },
    "1499": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1500": {
      "branch": 24,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "6"
    },
    "1501": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62D"
    },
    "1504": {
      "branch": 24,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1505": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1507": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1508": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1517": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1518": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1520": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1522": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1523": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1524": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1525": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1A"
    },
    "1527": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1529": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1530": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1531": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1532": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "1565": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1567": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1568": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1569": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1570": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1571": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1572": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1573": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1574": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1575": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "6"
    },
    "1576": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1578": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "1579": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1580": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1581": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1582": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 18
    },
    "1583": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1584": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1585": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x636"
    },
    "1588": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1589": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "6"
    },
    "1590": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1591": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "6"
    },
    "1592": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1593": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "POP"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1598": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1599": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1601": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1602": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1603": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "6"
    },
    "1604": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 19
    },
    "1605": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1606": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "6"
    },
    "1607": {
      "branch": 25,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1608": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D0"
    },
    "1611": {
      "branch": 25,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1612": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1614": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1615": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1624": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1625": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1627": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1629": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1630": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1631": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1632": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1B"
    },
    "1634": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1636": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1637": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1638": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1639": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1672": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1674": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1675": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1676": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1677": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1678": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1679": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1680": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1681": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1682": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "6"
    },
    "1683": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1685": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "6"
    },
    "1686": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1687": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "6"
    }
  },
  "sha1": "9483177ba72bf87b219ada7279bcaceedd6ba915",
  "source": "pragma solidity 0.6.12;\n\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\n\nimport '../../interfaces/ICErc20.sol';\n\ncontract MockCErc20 is ICErc20 {\n  using SafeMath for uint;\n\n  IERC20 public token;\n  uint public interestPerYear = 10e16; // 10% per year\n\n  mapping(address => uint) public borrows;\n  mapping(address => uint) public lastBlock;\n\n  constructor(IERC20 _token) public {\n    token = _token;\n  }\n\n  function decimals() external override returns (uint8) {\n    return 8;\n  }\n\n  function underlying() external override returns (address) {\n    return address(token);\n  }\n\n  function mint(uint mintAmount) external override returns (uint) {\n    // Not implemented\n    return 0;\n  }\n\n  function redeem(uint redeemTokens) external override returns (uint) {\n    // Not implemented\n    return 0;\n  }\n\n  function balanceOf(address user) external view override returns (uint) {\n    // Not implemented\n    return 0;\n  }\n\n  function borrowBalanceCurrent(address account) public override returns (uint) {\n    uint timePast = now - lastBlock[account];\n    if (timePast > 0) {\n      uint interest = borrows[account].mul(interestPerYear).div(100e16).mul(timePast).div(365 days);\n      borrows[account] = borrows[account].add(interest);\n      lastBlock[account] = now;\n    }\n    return borrows[account];\n  }\n\n  function borrowBalanceStored(address account) external view override returns (uint) {\n    return borrows[account];\n  }\n\n  function borrow(uint borrowAmount) external override returns (uint) {\n    borrowBalanceCurrent(msg.sender);\n    token.transfer(msg.sender, borrowAmount);\n    borrows[msg.sender] = borrows[msg.sender].add(borrowAmount);\n    return 0;\n  }\n\n  function repayBorrow(uint repayAmount) external override returns (uint) {\n    borrowBalanceCurrent(msg.sender);\n    token.transferFrom(msg.sender, address(this), repayAmount);\n    borrows[msg.sender] = borrows[msg.sender].sub(repayAmount);\n    return 0;\n  }\n}\n",
  "sourceMap": "231:1809:28:-:0;;;347:5;317:35;;462:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;462:59:28;502:5;:14;;-1:-1:-1;;;;;502:14:28;;;-1:-1:-1;;;;;;502:14:28;;;;;;;;;231:1809;;;;;;",
  "sourcePath": "contracts/mock/MockCErc20.sol",
  "type": "contract"
}